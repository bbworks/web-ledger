{"version":3,"sources":["utilities/utilities.js","utilities/transactions.js","utilities/budgetsData.js","utilities/dashboard.js","utilities/errorHandling.js","googleApi/utilities.js","googleApi/gapi.js","googleApi/authentication.js","api/transactions.js","api/budgetsData.js","api/accountsData.js","api/accountData.js","hooks/useConsoleLog.js","hooks/useScript.js","hooks/useBudgetCycleTransactions.js","components/Logo/index.js","components/GoogleApiSignInButton/index.js","components/SignInView/index.js","components/DashboardBudgetCycleDropdown/index.js","components/DashboardTop/index.js","components/DashboardInsight/index.js","components/DashboardInsights/index.js","components/DashboardShowcase/index.js","components/DashboardContent/index.js","components/DashboardView/index.js","components/BudgetGraphStatusIcon/index.js","components/BudgetGraph/index.js","components/BudgetsView/index.js","components/TransactionsImportForm/index.js","components/TransactionsTableHeaders/index.js","components/TagBadge/index.js","components/TransactionsTableTransaction/index.js","components/TransactionsTableTransactions/index.js","components/TransactionsTableBody/index.js","components/TransactionsTable/index.js","components/TransactionsData/index.js","components/InputDropdown/InputDropdown.js","components/InputDropdown/index.js","components/TransactionDetailModalInput/index.js","components/TransactionDetailModal/index.js","components/TransactionsImportDuplicatesModalDuplicateCheckbox/index.js","components/TransactionsImportDuplicatesModal/index.js","components/TransactionsImportConfirmedModal/index.js","components/TransactionsView/index.js","components/SettingsInput/index.js","components/SettingsForm/index.js","components/SettingsView/index.js","components/FooterNavbar/index.js","components/SignInSettingsModal/index.js","components/GoogleApiUserButton/index.js","components/Header/index.js","components/App/index.js","utilities/accountsData.js","utilities/accountData.js","reportWebVitals.js","index.js"],"names":["isFalsy","value","nullCoalesce","arguments","Error","reduce","accumulator","convertNumberToCurrency","isNaN","Number","toFixed","toString","replace","p0","split","reverse","join","getSumByProp","array","prop","Array","isArray","sum","item","areObjectsEqual","a","b","typeofA","aValues","Object","entries","bValues","length","i","aKey","aValue","bKey","bValue","convertDateStringToDate","dateString","dateStringFormat","yearFormatRegEx","RegExp","monthFormatRegEx","dayFormatRegEx","getDatePartByFormat","datePartFormatRegex","getDatePartCallback","isMatch","matchAll","matchStartingIndex","index","matchedFormat","matchEndingIndex","substring","Date","yearString","yearFormat","getFullYear","monthString","monthFormat","importTransactions","transactionsData","dataType","map","transactionLine","match","console","warn","trim","TransactionDate","Description","IsNegativeAmount","Amount","PostedDate","AccountNumber","Type","DescriptionDisplay","Category","Notes","Tags","filter","transaction","csvData","csv","delimiter","line","headers","splice","lineObj","forEach","convertCSVToJSON","flat","Charges","Payments","Debit","Credit","type","keys","includes","transactionDate","err","formatTransactionDisplay","toLocaleDateString","description","isTransactionDuplicate","potentialDuplicate","transactions","find","toJSON","getBudgetAmountSpentFromTransactions","budgetName","isCreditCardPaymentTransaction","isIncomeTransaction","check","getBudgetCycleFromDate","date","getMonth","getBudgetCycleString","number","getMonthFromNumber","getCurrentYear","getBudgetCycleDescription","budgetCycle","todayBudgetCycle","fullYearDifference","monthDifference","yearDifference","Math","floor","throwException","throwEx","alertWindow","exception","errorMsg","message","name","fileName","lineNumber","columnNumber","stack","error","exceptionMsg","key","window","alert","getHeadersFromJSON","JSON","getSpreadsheetData","parse","localStorage","getItem","getSpreadsheetId","spreadsheetData","spreadsheetId","setSpreadsheetId","setItem","stringify","setSpreadsheetData","getCredentials","getClientId","creds","clientId","setClientId","credentials","newCreds","convertSheetsArraysToJSON","data","obj","convertJSONToSheetsArray","object","header","getDynamicPropertyByArray","startingObject","dotSeparatedProperties","property","convertColumnNumberToColumnLetter","columnLettersArray","letter","push","convertColumnLetterToColumnNumber","columnLetters","columnLetter","indexOf","convertArrayToA1Notation","rowsColumnsArray","startingCell","startingColumnLetter","startingRow","startingColumnIndex","rows","columns","rowNumber","callGoogleApiFunction","googleApi","resourceType","method","optionsParam","pageToken","leftoverIds","params","options","part","undefined","id","maxResults","Promise","resolve","reject","resource","gapi","client","response","log","result","nextPageToken","items","mine","values","getSheetsSpreadsheetValues","sheetName","range","r","updateSheetsSpreadsheetValues","valuesJSON","valueInputOption","includeValuesInResponse","responseValueRenderOption","scopes","discoveryDocs","initAuthorization","loginCallback","logoutCallback","info","CredentialsNotFoundError","fetchAuthCredentials","loadGoogleApis","load","initializeGoogleApis","init","scope","then","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","get","catch","signInInfo","getProfileInformation","signIn","signOut","profile","currentUser","getBasicProfile","getId","getName","firstName","getGivenName","lastName","getFamilyName","imageUrl","getImageUrl","emailAddress","getEmail","getTransactions","updateTransactions","getBudgetsData","getAccountsData","getAccountData","useConsoleLog","args","useEffect","slice","useScript","src","useState","isLoaded","setIsLoaded","script","document","createElement","async","option","addEventListener","event","body","appendChild","removeChild","useBudgetCycleTransactions","getBudgetCycleTransactions","lastBudgetCycleMonth","lastBudgetCycleYear","lastBudgetCycleIncomeTransactions","thisBudgetCycleTransactions","budgetCycleTransactions","setBudgetCycleTransactions","Logo","light","className","to","GoogleApiSigninButton","isReadyForSignIn","onClick","disabled","SignInView","DashboardBudgetCycleDropdown","onChangeProp","onChange","getAllBudgetCycles","Set","getBudgetCyclesFromTransactions","allBudgetCycles","setAllBudgetCycles","data-bs-toggle","aria-expanded","budgetCycleJSON","target","getAttribute","href","data-budget-cycle","DashboardTop","accountsData","accountData","onBudgetCycleChange","Balance","total","NaN","sort","LastUpdated","record","CreditScore","DashboardInsight","insight","iconClass","title","text","DashboardInsights","budgetsData","insights","setInsights","personalSpendingBudgetData","budgetData","Name","personalSpendingBudgetLeft","previousInsights","bill","amountSpent","abs","amount","runInsights","DashboardShowcase","DashboardContent","DashboardView","signedInUser","setFooterNavbar","route","useLocation","pathname","currentBudgetCycleTransactions","BudgetGraphStatusIcon","iconText","iconColor","budget","overBudget","overEarned","BudgetGraph","isExpenseBudget","style","color","backgroundColor","width","left","right","BudgetsView","TransactionsImportForm","onSubmitProp","onSubmit","onFileInputChangeProp","onFileInputChange","isOpen","setIsOpen","preventDefault","transactionsDataArray","all","files","file","fileContent","wasOpen","transactionImportInput","querySelector","scrapedTransactionsData","accept","multiple","TransactionsTableHeaders","TagBadge","tag","TransactionsTableTransaction","onTransactionEditButtonClick","transactionDisplay","setTransactionDisplay","TransactionsTableTransactions","TransactionsTableBody","totalAmount","setTotalAmount","TransactionsTable","TransactionsData","isDescendantOf","element","potentialAncestor","parentElement","isDescendantOfDropdown","classList","contains","dropdownMasterEventListener","dropdown","eventListeners","dropdownItem","dropdownInput","dropdownList","dropdownListItems","querySelectorAll","previousSelectedValue","unFilterDropdownItems","dropdownListItem","remove","innerHTML","innerText","setDropdownItemsSelection","selectedDropdownListItem","resetDropdownItemsSelection","add","setDropdownSelection","checkDropdownListSelectionScroll","newlySelectedDropdownListItemRect","getBoundingClientRect","dropdownListViewport","topIsBelowNotAboveViewportTop","top","bottomIsAboveNotBelowViewportBottom","bottom","scroll","scrollTop","height","dropdownIsOpen","openDropdown","checkIfClickedOrFocusedOutsideOfDropdown","dropdownListItemOnMouseEnter","closeDropdown","removeEventListener","regEx","filterDropdownItems","keyCode","currentSelectedDropdownListItem","dropdownWasOpen","upOrDown","wrapAround","currentSelectedDropdownListItemIndex","newlySelectedDropdownListItem","listenerObj","callEventListeners","InputDropdown","initialValue","placeholder","onKeyDown","setValue","autoComplete","TransactionDetailModalInput","transactionDetail","tabIndex","onBlur","onTagBadgeClick","tagType","TransactionDetailModal","buttonsOptions","onClose","setPostedDate","setTransactionDate","setAccountNumber","setAmount","setDescription","setDescriptionDisplay","setCategory","setType","setNotes","setTags","transactionDetails","setState","onTransactionDetailInputContainerClick","transactionDetailInput","focus","onTransactionDetailInputContainerBlur","onTransactionDetailInputKeyDown","nextOrPrevious","shiftKey","inputsArray","nextInput","t","Modal","show","onHide","Header","Title","transactionModalForm","input","updatedTransaction","Body","onTransactionDetailInputChange","Footer","buttonObj","TransactionsImportDuplicatesModalDuplicateCheckbox","duplicateData","checked","confirmed","updatedDuplicateData","htmlFor","duplicate","TransactionsImportDuplicatesModal","newTransactions","duplicates","duplicatesData","setDuplicatesData","onTransactionsImportDuplicatesModalDuplicateCheckboxChange","oldDuplicateData","newDuplicateData","previousDuplicatesData","newDuplicatesData","data-bs-dismiss","confirmedDuplicates","filteredNewTransactions","newTransaction","TransactionsImportConfirmedModal","TransactionsView","transactionsImportDuplicatesModalNewTransactions","transactionsImportDuplicatesModalDuplicates","isTransactionsImportDuplicatesModalOpen","onTransactionsImportDuplicatesModalClose","onTransactionsImportDuplicatesModalSubmit","onTransactionsImportFormSubmit","onTransactionsImportFormFileInputChange","onTransactionDetailModalSubmitProp","onTransactionDetailModalSubmit","transactionsImportConfirmedModalTransactions","isTransactionsImportConfirmedModalOpen","closeTransactionsImportConfirmedModal","onTransactionsImportConfirmedModalSubmit","transactionDetailModalTransaction","setTransactionDetailModalTransaction","isTransactionDetailModalOpen","setIsTransactionDetailModalOpen","closeTransactionDetailModal","cancelButton","okButton","SettingsInput","setting","setName","SettingsForm","settings","submittedSettings","props","SettingsView","FooterNavbar","active","footerNavbar","useRef","activePath","process","navItems","current","activeItem","navItem","setActiveItem","ref","SignInSettingsModal","role","GoogleApiUserButton","aria-labelledby","App","setTransactions","setBudgetsData","setAccountsData","setAccountData","setBudgetCycle","setTransactionsImportDuplicatesModalNewTransactions","setTransactionsImportDuplicatesModalDuplicates","setIsTransactionsImportDuplicatesModalOpen","setTransactionsImportConfirmedModalTransactions","setIsTransactionsImportConfirmedModalOpen","setSignedInUser","isSignInSettingsModalOpen","setIsSignInSettingsModalOpen","update","gapiLoaded","connectToGoogleAPI","setTransactionsWrapper","setBudgetsDataWrapper","setAccountsDataWrapper","setAccountDataWrapper","setTransactionsHandler","previousTransactions","callback","oldTransaction","transactionsArray","typeCheckTransactions","matches","categorizedTransactionData","categorizeTransactionByDescription","importTransactionsHandler","openTransactionsImportDuplicatesModal","checkTransactionsForDuplicates","newBudgetsData","previousBudgetsData","IsPaidByCreditCardNotAccount","Boolean","typeCheckBudgetsData","newAccountsData","previousAccountsData","typeCheckAccountsData","newAccountData","previousAccountData","typeCheckAccountData","closeTransactionsImportDuplicatesModal","openTransactionsImportConfirmedModal","onSignInChange","saveSettings","savedSettings","settingName","settingValue","basename","path","exact","updateTransactionHandler","confirmedTransactions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5aa49146.chunk.js","sourcesContent":["export const isFalsy = function(value) {\r\n  return value !== 0 && (!value || value == false);\r\n};\r\n\r\nexport const nullCoalesce = function(value) {\r\n  if(isFalsy(arguments)) throw new Error(\"Function cannot accept 0 parameters.\");\r\n  return [...arguments].reduce((accumulator, value)=>accumulator = (isFalsy(accumulator) && !isFalsy(value) ? value : accumulator), null);\r\n};\r\n\r\nexport const convertNumberToCurrency = function(value) {\r\n  if (isNaN(value)) return null;\r\n  return Number(value)\r\n    .toFixed(2)\r\n    .toString()\r\n    .replace(/\\d{4,}/, (p0)=>p0.split('').reverse().join('').replace(/(\\d{3})(?=\\d)/g, \"$1,\").split('').reverse().join('')) //add commas\r\n    .replace(/(\\d)/, \"$$$1\") //add $\r\n};\r\n\r\nexport const convertCSVToJSON = function(csv, delimiter = \",\") {\r\n  //Initialize variables\r\n  const csvData = csv\r\n    //Break apart by new line\r\n    .split(/(?:\\r\\n|\\r|\\n)/)\r\n    //Begin breaking apart each line by the delimiter\r\n    .map(line=>(!line ? null : line.split(delimiter)))\r\n    //Remove the empty lines\r\n    .filter(line=>line);\r\n\r\n  //Get the headers\r\n  const headers = csvData.splice(0,1)[0];\r\n\r\n  //Get the data\r\n  const obj = csvData.map(line=>{\r\n    const lineObj = {};\r\n    line.forEach((value, i)=>{\r\n      lineObj[headers[i]] = value;\r\n    })\r\n    return lineObj;\r\n  });\r\n\r\n  return obj;\r\n};\r\n\r\nexport const getSumByProp = (array, prop)=>{\r\n  //Make sure the provided object is an array\r\n  if (!Array.isArray(array)) {\r\n    //If its not even a single object, return null\r\n    if(!typeof array === \"object\") return null;\r\n\r\n    //Otherwise, wrap the object in an array for processing\r\n    array = [array]\r\n  }\r\n\r\n  return Number(array.reduce((sum, item)=>{\r\n    //If this an object, use the property\r\n    if (typeof item === \"object\") {\r\n      if (!Number.isNaN(item[prop])) return sum+=item[prop];\r\n    }\r\n\r\n    //Otherwise, if a number, use the item directly\r\n    if (!Number.isNaN(item)) return sum+=item;\r\n  }, 0)) || null;\r\n};\r\n\r\nexport const areObjectsEqual = (a,b)=>{\r\n  //## typeof values\r\n  //\"undefined\"\r\n  //\"boolean\"\r\n  //\"number\"\r\n  //\"bigint\"\r\n  //\"string\"\r\n  //\"symbol\"\r\n  //\"function\" (non-primitive)\r\n  //\"object\"  (non-primitive) //includes null\r\n\r\n  //\r\n  if (a === null) {\r\n    if (b === null) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  //First, if not the same type, exit\r\n  const typeofA = typeof a;\r\n  const typeofB = typeof b;\r\n  if (typeofA !== typeofB) return false;\r\n\r\n  //If these are objects, recurse into them\r\n  if (typeofA === \"object\") {\r\n    const aValues = Object.entries(a);\r\n    const bValues = Object.entries(b);\r\n\r\n    //Short-circuit if the number of properties aren't the same\r\n    if(aValues.length !== bValues.length) return false;\r\n\r\n    for(let i = 0; i < aValues.length; i++) {\r\n      const [aKey, aValue] = aValues[i];\r\n      const [bKey, bValue] = bValues[i];\r\n      if(aKey !== bKey) return false;\r\n      if (!areObjectsEqual(aValue, bValue)) return false;\r\n    }\r\n\r\n    //If the objects properties/arrays values are all the same, return true\r\n    return true;\r\n  }\r\n\r\n  //Otherwise, compare the values\r\n  return a === b;\r\n};\r\n\r\nexport const convertDateStringToDate = (dateString, dateStringFormat)=>{\r\n  //Declare variables\r\n  const yearSymbol = \"y\";\r\n  const monthSymbol = \"M\";\r\n  const daySymbol = \"d\";\r\n\r\n  const yearFormatRegEx = new RegExp(`(${yearSymbol}{1,4})`, \"g\");\r\n  const monthFormatRegEx = new RegExp(`(${monthSymbol}{1,4})`, \"g\");\r\n  const dayFormatRegEx = new RegExp(`(${daySymbol}{1,2})`, \"g\");\r\n\r\n  const getDatePartByFormat = (dateString, dateStringFormat, datePartFormatRegex, getDatePartCallback)=>{\r\n    //Match against the provided format\r\n    const isMatch = [...dateStringFormat.matchAll(datePartFormatRegex)];\r\n\r\n    //If none were found, or more than one match is found, throw\r\n    if (!isMatch || isMatch.length > 1) throw new Error(`Error: Format \"${dateStringFormat}\" matched RegExp ${datePartFormatRegex.toString()} ${(isMatch ? isMatch.length : 0)} time${(isMatch ? \"s\" : \"\")}.`);\r\n\r\n    const matchStartingIndex = isMatch[0].index;\r\n    const matchedFormat = isMatch[0][1];\r\n    const matchEndingIndex = matchedFormat.length + matchStartingIndex;\r\n    const matchedString = dateString.substring(matchStartingIndex, matchEndingIndex);\r\n\r\n    //Return back the month index based on the format\r\n    return getDatePartCallback(matchedString, matchedFormat);\r\n  };\r\n\r\n  const getYearByFormat = (yearString, yearFormat)=>{\r\n    if (Number.isNaN(yearString)) return null;\r\n\r\n    if (yearFormat === \"yy\") return Number((new Date()).getFullYear().toString().substring(0,2)+yearString);\r\n    if (yearFormat === \"yyyy\") return Number(yearString);\r\n\r\n    return null;\r\n  };\r\n\r\n  const getMonthIndexByFormat = (monthString, monthFormat)=>{\r\n    if (monthFormat === \"M\") {\r\n      if (monthString === \"1\") return 0;\r\n      if (monthString === \"2\") return 1;\r\n      if (monthString === \"3\") return 2;\r\n      if (monthString === \"4\") return 3;\r\n      if (monthString === \"5\") return 4;\r\n      if (monthString === \"6\") return 5;\r\n      if (monthString === \"7\") return 6;\r\n      if (monthString === \"8\") return 7;\r\n      if (monthString === \"9\") return 8;\r\n      if (monthString === \"10\") return 9;\r\n      if (monthString === \"11\") return 10;\r\n      if (monthString === \"12\") return 11;\r\n    }\r\n    if (monthFormat === \"MM\") {\r\n      if (monthString === \"01\") return 0;\r\n      if (monthString === \"02\") return 1;\r\n      if (monthString === \"03\") return 2;\r\n      if (monthString === \"04\") return 3;\r\n      if (monthString === \"05\") return 4;\r\n      if (monthString === \"06\") return 5;\r\n      if (monthString === \"07\") return 6;\r\n      if (monthString === \"08\") return 7;\r\n      if (monthString === \"09\") return 8;\r\n      if (monthString === \"10\") return 9;\r\n      if (monthString === \"11\") return 10;\r\n      if (monthString === \"12\") return 11;\r\n    }\r\n    if (monthFormat === \"MMM\") {\r\n      if (monthString === \"Jan\") return 0;\r\n      if (monthString === \"Feb\") return 1;\r\n      if (monthString === \"Mar\") return 2;\r\n      if (monthString === \"Apr\") return 3;\r\n      if (monthString === \"May\") return 4;\r\n      if (monthString === \"Jun\") return 5;\r\n      if (monthString === \"Jul\") return 6;\r\n      if (monthString === \"Aug\") return 7;\r\n      if (monthString === \"Sep\") return 8;\r\n      if (monthString === \"Oct\") return 9;\r\n      if (monthString === \"Nov\") return 10;\r\n      if (monthString === \"Dec\") return 11;\r\n    }\r\n    if (monthFormat === \"MMMM\") {\r\n      if (monthString === \"January\") return 0;\r\n      if (monthString === \"February\") return 1;\r\n      if (monthString === \"March\") return 2;\r\n      if (monthString === \"April\") return 3;\r\n      if (monthString === \"May\") return 4;\r\n      if (monthString === \"June\") return 5;\r\n      if (monthString === \"July\") return 6;\r\n      if (monthString === \"August\") return 7;\r\n      if (monthString === \"September\") return 8;\r\n      if (monthString === \"October\") return 9;\r\n      if (monthString === \"November\") return 10;\r\n      if (monthString === \"December\") return 11;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const getDayByFormat = (monthString, monthFormat)=>{\r\n    if (Number.isNaN(monthString) || Number(monthString) < 1 || Number(monthString) > 31) return null;\r\n\r\n    return Number(monthString);\r\n  };\r\n\r\n  return new Date(\r\n    getDatePartByFormat(dateString, dateStringFormat, yearFormatRegEx, getYearByFormat),\r\n    getDatePartByFormat(dateString, dateStringFormat, monthFormatRegEx, getMonthIndexByFormat),\r\n    getDatePartByFormat(dateString, dateStringFormat, dayFormatRegEx, getDayByFormat)\r\n  );\r\n};\r\n","import {isFalsy, nullCoalesce, convertNumberToCurrency, convertCSVToJSON, convertDateStringToDate, areObjectsEqual, getBudgetAmountSpentFromTransactions, getMonthFromNumber, getCurrentYear, getBillingCycleFromDate} from './utilities.js';\r\n\r\n//Declare private functions\r\nconst getTransactionDefaultDescriptionDisplay = function(description) {\r\n  if (!description) return \"\";\r\n\r\n  return `*${\r\n    description\r\n      //.replace(/([\\w\\'&]+)/g, p1=>p1[0].toUpperCase() + p1.substring(1).toLowerCase()) /* set Pascal casing between words */\r\n  }`;\r\n};\r\n\r\n//Declare public functions\r\nexport const typeCheckTransactions = function (transactions) {\r\n  return transactions.map(transaction=>(\r\n    {\r\n      ...transaction,\r\n      PostedDate: transaction.PostedDate && new Date(transaction.PostedDate),\r\n      TransactionDate: transaction.TransactionDate && new Date(transaction.TransactionDate),\r\n      Type: (transaction.Type ? transaction.Type : null),\r\n      Category: (transaction.Category ? transaction.Category : null),\r\n      Description: (transaction.Description ? transaction.Description : null),\r\n      Category: (transaction.Category ? transaction.Category : null),\r\n      Amount: (isNaN(transaction.Amount) ? Number(transaction.Amount.replace(/(\\$|,)/g, \"\")) : Number(transaction.Amount)),\r\n      Tags: (!isFalsy(transaction.Tags) ? transaction.Tags : []),\r\n\r\n    }\r\n  ));\r\n};\r\n\r\nexport const categorizeTransactionByDescription = function(transaction) {\r\n  const {DescriptionDisplay, Description, Tags, Category, Notes} = transaction;\r\n\r\n  //Skip the transaction if there is no Description\r\n  if (!Description) return transaction;\r\n\r\n  //Define a base for categorized transaction data\r\n  let categorizedTransactionData = {};\r\n\r\n  //Define matches, if we need matched capture groups\r\n  let matches;\r\n\r\n  //Income\r\n       if (Description.match(/ELECTRONIC\\/ACH CREDIT \\w{5} US , INC\\. PAYROLL \\d{10}/i))  categorizedTransactionData = {Category: \"Infor payroll\", DescriptionDisplay: \"Deposit to CHG *7740\", Notes: null};\r\n  else if (Description.match(/INTEREST PAYMENT PAID THIS STATEMENT THRU \\d{2}\\/\\d{2}/i))  categorizedTransactionData = {Category: \"Other income\", DescriptionDisplay: \"Interest paid\", Notes: null};\r\n\r\n  //Transfers\r\n  else if (matches = Description.match(/ONLINE BANKING TRANSFER (?:MOBILE APP TRANSFER )?TO (?:\\d{4} )?(\\d{13})/i))  categorizedTransactionData = {Category: null, DescriptionDisplay: `Transfer to *${matches[1].substring(matches[1].length-4)}`, Notes: null};\r\n  else if (matches = Description.match(/ONLINE BANKING TRANSFER CREDIT FROM \\d{4} (\\d{13})/i))  categorizedTransactionData = {Category: null, DescriptionDisplay: `Transfer from *${matches[1].substring(matches[1].length-4)}`, Notes: null};\r\n\r\n  //Payments\r\n  else if (matches = Description.match(/CREDIT CARD PAYMENT ONLINE BANKING TRANSFER TO \\d{4} \\d{6}\\*{6}(\\d{4})/i))  categorizedTransactionData = {Category: null, DescriptionDisplay: `Payment for CCD *${matches[1]}`, Notes: null};\r\n\r\n  //Bills\r\n  else if (Description.match(/Simplisafe 888-957-4675 Ma/i))  categorizedTransactionData = {Category: \"SimpliSafe (for mom)\", DescriptionDisplay: \"Charge to CCD *3991\", Notes: null};\r\n  else if (Description.match(/SDC\\*Laurens Electric C Laurens SC/i))  categorizedTransactionData = {Category: \"Laurens Electric ProTec Security\", DescriptionDisplay: \"Charge to CCD *3991\", Notes: null};\r\n  else if (Description.match(/SJWD Water District 8649492805 SC/i))  categorizedTransactionData = {Category: \"SJWD Water District\", DescriptionDisplay: \"Charge to CCD *3991\", Notes: null};\r\n  else if (Description.match(/State Farm Insurance 8009566310 Il/i))  categorizedTransactionData = {Category: \"State Farm auto insurance\", DescriptionDisplay: \"Charge to CCD *3991\", Notes: null};\r\n  else if (Description.match(/Spotify USA(?: New York NY)?/i))  categorizedTransactionData = {Category: \"Spotify Premium subscription\", DescriptionDisplay: \"Charge to CCD *3991\", Notes: null};\r\n  else if (Description.match(/Netflix.Com Netflix.Com Ca/i))  categorizedTransactionData = {Category: \"Netflix Premium subscription\", DescriptionDisplay: \"Charge to CCD *3991\", Notes: null};\r\n  else if (Description.match(/Ddv \\*Discoveryplus 0123456789 TN/i))  categorizedTransactionData = {Category: \"Discovery Plus subscription\", DescriptionDisplay: \"Charge to CCD *3991\", Notes: null};\r\n  else if (Description.match(/(?:AT&T \\*Payment|ATT\\*BILL PAYMENT) 800-288-2020 TX/i))  categorizedTransactionData = {Category: \"AT&T Internet\", DescriptionDisplay: \"Charge to CCD *3991\", Notes: null};\r\n  else if (Description.match(/KIRBY SANITATION\\/C&J E 8648778887 SC/i))  categorizedTransactionData = {Category: \"Kirby Sanitation\", DescriptionDisplay: \"Charge to CCD *3991\", Notes: null};\r\n\r\n  //Recurring expenses\r\n\r\n  //Gas\r\n  else if (Description.match(/QT \\d+ (?:INSIDE|OUTSIDE|\\w+ \\w{2})/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"QuikTrip\", Notes: null};\r\n  else if (Description.match(/CIRCLE K # \\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"Circle K\", Notes: null};\r\n  else if (Description.match(/7-ELEVEN \\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"7-Eleven\", Notes: null};\r\n  else if (Description.match(/SPINX #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"Spinx\", Notes: null};\r\n  else if (Description.match(/LOVE S TRAVEL \\d+ [\\w ]+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"Love's\", Notes: null};\r\n  else if (Description.match(/SHELL OIL [\\d\\w]+ [\\w ]+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"Shell\", Notes: null};\r\n\r\n  //Groceies & Necessities\r\n  else if (Description.match(/Walmart Grocery [\\d-]+ Ar/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Walmart Supercenter\", Notes: \"grocery pickup\"};\r\n  else if (Description.match(/(?:Wal-Mart|WM Supercenter) #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Walmart Supercenter\", Notes: \"grocery pickup\"};\r\n  else if (Description.match(/Target #?\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Target\", Notes: null};\r\n  else if (Description.match(/Ingles Markets #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Ingles\", Notes: null};\r\n  else if (Description.match(/Publix #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Publix\", Notes: \"grocery pickup\"};\r\n  else if (Description.match(/(?:Sams ?Club #8142 Spartanburg SC|Sams Club #8142 864-574-3480 SC)/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Sam's Club\", Notes: null};\r\n\r\n  else if (Description.match(/Walgreens #\\d+/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Walgreens\", Notes: null};\r\n\r\n  //Family Outings\r\n  else if (Description.match(/McDonald's \\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"McDonald's\", Notes: null};\r\n  else if (Description.match(/Burger King #\\d+(?: \\w+ \\w+ \\w{2})?/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Burger King\", Notes: null};\r\n  else if (Description.match(/PDQ \\d+ (OLO )?Greenville SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"PDQ\", Notes: null};\r\n  else if (Description.match(/Chick-Fil-A #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Chick-fil-A\", Notes: null};\r\n  else if (Description.match(/Sonic Drive In #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Sonic Drive-In\", Notes: null};\r\n  else if (Description.match(/Bojangles \\d+ \\w+/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Bojangles\", Notes: null};\r\n  else if (Description.match(/Cook Out [\\w ]+(?: \\w+ \\w{2})?/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Cook Out\", Notes: null};\r\n  else if (Description.match(/Wendys #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Wendy's\", Notes: null};\r\n  else if (Description.match(/KFC [\\w\\d]+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"KFC\", Notes: null};\r\n  else if (Description.match(/CKE\\*TACO DOG SPARTANBU SPARTANBURG SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Taco Dog\", Notes: null};\r\n  else if (Description.match(/WAFFLE HOUSE \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Waffle House\", Notes: null};\r\n  else if (Description.match(/Chili's \\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Chili's\", Notes: null};\r\n  else if (Description.match(/Sweet Basil Thai Cusin Greenville SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Sweet Basil Thai Cusine\", Notes: null};\r\n  else if (Description.match(/Paisanos Italian Resta/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Paisanos Italian Restaurant\", Notes: null};\r\n  else if (Description.match(/Panda Hibachi Duncan SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Panda Hibachi\", Notes: null};\r\n  else if (Description.match(/(?:Chipotle \\d+ \\w+ \\w{2}|Chipotle Online 1800\\d{6} CA)/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Chipotle\", Notes: null};\r\n  else if (Description.match(/TST\\* WILLY TACO - HUB SPARTANBURG SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Willy Taco\", Notes: null};\r\n  else if (Description.match(/El Tejano Mexican Rest/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"El Tejano\", Notes: null};\r\n  else if (Description.match(/La Fogata Mexican Rest Simpsonville Sc/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"La Fogata\", Notes: null};\r\n  else if (Description.match(/El Molcajete Duncan Sc/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"El Molcajete\", Notes: null};\r\n  else if (Description.match(/Pizza Hut \\d+ \\d+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Pizza Hut\", Notes: null};\r\n  else if (Description.match(/Tutti Frutti Spartanburg SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Tutti Frutti\", Notes: null};\r\n  else if (Description.match(/KRISPY KREME \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Krispy Kreme\", Notes: null};\r\n\r\n  else if (Description.match(/Taco Casa #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Taco Casa\", Notes: null};\r\n  else if (Description.match(/Krystal [\\d\\w]+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Krystal\", Notes: null};\r\n  else if (Description.match(/Checkers Drive In \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Checkers\", Notes: null};\r\n\r\n  //Church\r\n  else if (Description.match(/Brookwood Church Donat Simpsonville Sc/i))  categorizedTransactionData = {Category: \"Church\", DescriptionDisplay: \"Brookwood Church\", Notes: \"online giving\"};\r\n\r\n  //Personal Spending\r\n  else if (Description.match(/HARBOR FREIGHT TOOLS \\d \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Personal Spending\", DescriptionDisplay: \"Harbor Freight\", Notes: null};\r\n\r\n\r\n  //Other\r\n  else if (Description.match(/Dollartree \\w+ \\w{2}/i))  categorizedTransactionData = {Category: null, DescriptionDisplay: \"Dollar Tree\", Notes: null};\r\n  else if (Description.match(/[\\w\\* ]+ amzn.com\\/billwa/i))  categorizedTransactionData = {Category: null, DescriptionDisplay: \"Amazon\", Notes: null};\r\n  else if (Description.match(/SPARTANBURGCO TREAS 8645962603 SC/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"Spartanburg County Treasury\", Notes: null};\r\n\r\n  //Final categorizedTransactionData\r\n  categorizedTransactionData = {\r\n    //only add a category/displayed description/notes, based on the description, if one is not already present\r\n    Category: nullCoalesce(Category, categorizedTransactionData.Category),\r\n    DescriptionDisplay: nullCoalesce(DescriptionDisplay, categorizedTransactionData.DescriptionDisplay),\r\n    Notes: nullCoalesce(Notes, categorizedTransactionData.Notes),\r\n  };\r\n\r\n  //Return the transaction with updated categorization data\r\n  return {\r\n    ...transaction,\r\n    ...categorizedTransactionData\r\n  };\r\n};\r\n\r\nexport const importTransactions = function(transactionsData, dataType) {\r\n  try {\r\n    //if this is scraped from online app\r\n    if (dataType === \"scraped\") {\r\n      //Spilt the string of transactions into an array\r\n      return transactionsData\r\n        .split(/(?:\\r\\n|\\r|\\n)/)\r\n        .map(transactionLine=>{\r\n          if (!transactionLine) return null;\r\n\r\n          //Determine if this matches a transaction line\r\n          const isMatch = transactionLine.match(/(\\d{2}\\/\\d{2}\\/\\d{2})\\t\\t([^\\t]+)\\t(-?)\\$([\\d,]+\\.\\d{2})/);\r\n          if (!isMatch) {\r\n            console.warn(`Unable to read transaction.\\r\\n${transactionLine}`);\r\n            return null;\r\n          }\r\n\r\n          //Save and trim the matched data\r\n          const [fullMatch, TransactionDate, Description, IsNegativeAmount, Amount] = [...isMatch].map(match=>(match ? match.trim() : match));\r\n\r\n          //Return the new transaction object\r\n          return {\r\n            PostedDate: null,\r\n            TransactionDate: convertDateStringToDate(TransactionDate, \"MM/dd/yy\"),\r\n            AccountNumber: null,\r\n            Type: null,\r\n            Description,\r\n            DescriptionDisplay: null,\r\n            Amount: Number(`${IsNegativeAmount}${Amount}`.replace(\",\",\"\")),\r\n            Category: null,\r\n            Notes: null,\r\n            Tags: [],\r\n          };\r\n        })\r\n        //Filter out anything that didn't become a transaction\r\n        .filter(transaction=>transaction !== null)\r\n        //Bring in transactions in ascending TransactionDate\r\n        .reverse();\r\n    }\r\n\r\n    //Otherwise, this is CSV or JSON data\r\n\r\n    //If CSV data, convert it to JSON first\r\n    if (dataType === \"csv\") transactionsData = transactionsData.map(csvData=>convertCSVToJSON(csvData)).flat();\r\n\r\n    //For each CSV file, convert the contents to JSON\r\n    return transactionsData.map(transaction=>{\r\n      const Date = (transaction.Date ? transaction.Date.trim() : null);\r\n      const TransactionDate = (transaction.TransactionDate ? transaction.TransactionDate.trim() : null);\r\n      const PostedDate = (transaction.PostedDate ? transaction.PostedDate.trim() : null);\r\n      const Description = (transaction.Description ? transaction.Description.trim() : null);\r\n      const AccountNumber = (transaction[\"Card No.\"] ? transaction[\"Card No.\"].trim() : null);\r\n      const Type = (transaction.Type ? transaction.Type.trim() : null);\r\n      const Charges = (transaction.Charges ? transaction.Charges.trim() : null);\r\n      const Payments = (transaction.Payments ? transaction.Payments.trim() : null);\r\n      const Debit = (transaction.Debit ? transaction.Debit.trim() : null);\r\n      const Credit = (transaction.Credit ? transaction.Credit.trim() : null);\r\n\r\n      //Validate calculated values\r\n      const type = (\r\n        Object.keys(transaction).includes(\"Credit\") && Object.keys(transaction).includes(\"Debit\") ?\r\n        //Checking/Savings account\r\n        nullCoalesce(Type, (Credit && (Number(Credit) || Credit !== \"0\") ? \"Credit\" : (Debit && (Number(Debit) || Debit !== \"0\") ? \"Debit\" : null))) : (\r\n          Object.keys(transaction).includes(\"Charges\") && Object.keys(transaction).includes(\"Payments\") ?\r\n          //Credit Card account\r\n          nullCoalesce(Type, (Charges && (Number(Charges) || Charges !== \"0\") ? \"Charges\" : (Payments && (Number(Payments) || Payments !== \"0\") ? \"Payments\" : null))) :\r\n          null\r\n        )\r\n      );\r\n      const transactionDate = convertDateStringToDate(nullCoalesce(TransactionDate, Date), \"MM/dd/yyyy\");\r\n      if (isFalsy(type) || isFalsy(transactionDate)) throw new Error(`Unable to read transaction.\\r\\n${transaction}`);\r\n\r\n      return {\r\n        PostedDate: (!isFalsy(PostedDate) ? convertDateStringToDate(PostedDate, \"MM/dd/yyyy\") : null),\r\n        TransactionDate: transactionDate,\r\n        AccountNumber: (AccountNumber ? `*${AccountNumber}` : null),\r\n        Type: type,\r\n        Description,\r\n        DescriptionDisplay: null,\r\n        Amount: Number(`${([\"Charges\",\"Debit\"].includes(type) ? \"-\" : \"\")}${transaction[type]}`),\r\n        Category: null,\r\n        Notes: null,\r\n        Tags: [],\r\n      };\r\n    });\r\n  }\r\n  catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const formatTransactionDisplay = function(transaction) {\r\n  return {\r\n    ...transaction,\r\n    PostedDate: (transaction.PostedDate ? new Date(transaction.PostedDate).toLocaleDateString().toString() : \"\"),\r\n    TransactionDate: (transaction.TransactionDate ? new Date(transaction.TransactionDate).toLocaleDateString().toString() : \"\"),\r\n    AccountNumber: transaction.AccountNumber || \"\",\r\n    Type: transaction.Type || \"\",\r\n    Description: nullCoalesce(transaction.DescriptionDisplay, getTransactionDefaultDescriptionDisplay(transaction.Description)) || \"\",\r\n    Amount: convertNumberToCurrency(transaction.Amount) || \"\",\r\n    Category: transaction.Category || \"\",\r\n    Notes: transaction.Notes || \"\",\r\n  };\r\n};\r\n\r\nexport const isTransactionDuplicate = (potentialDuplicate, transactions)=>{\r\n  return transactions.find(transaction=>\r\n    areObjectsEqual({\r\n      TransactionDate: transaction.TransactionDate.toJSON(),\r\n      Description: transaction.Description,\r\n      Amount: transaction.Amount,\r\n    }, {\r\n      TransactionDate: potentialDuplicate.TransactionDate.toJSON(),\r\n      Description: potentialDuplicate.Description,\r\n      Amount: potentialDuplicate.Amount,\r\n    }\r\n  ));\r\n};\r\n\r\nexport const getBudgetCyclesFromTransactions = transactions=>{\r\n  return [\r\n    ...new Set(\r\n      transactions.map(({TransactionDate})=>new Date(TransactionDate.getFullYear(), TransactionDate.getMonth()).toJSON())\r\n    )\r\n  ].map(date=>new Date(date));\r\n};\r\n","import {getSumByProp} from './utilities.js';\r\n\r\nexport const isCreditCardPaymentTransaction = transaction=>{\r\n  return transaction.Description.match(/PAYMENT - THANK YOU ATLANTA GA/i);\r\n};\r\n\r\nexport const isIncomeTransaction = transaction=>{\r\n  return transaction.Description.match(/ELECTRONIC\\/ACH CREDIT INFOR US , INC\\. PAYROLL 3203469219/i);\r\n};\r\n\r\nexport const getBudgetAmountSpentFromTransactions = (budgetName, transactions)=>{\r\n  const check = transaction=>{\r\n    return (\r\n      //For the Miscellaneous budget, include non-income transactions with no category\r\n      budgetName === \"Miscellaneous\" ?\r\n      [budgetName, null].includes(transaction.Category) && !isCreditCardPaymentTransaction(transaction) && !isIncomeTransaction(transaction) :\r\n      transaction.Category === budgetName\r\n    )\r\n  };\r\n  return getSumByProp(transactions.filter(transaction=>check(transaction)), \"Amount\");\r\n};\r\n\r\nexport const typeCheckBudgetsData = budgetsData=>{\r\n  return budgetsData.map(budgetData=>({\r\n      ...budgetData,\r\n      Amount: (budgetData.Amount ? Number(budgetData.Amount) : null),\r\n      IsPaidByCreditCardNotAccount: (budgetData.IsPaidByCreditCardNotAccount ? Boolean(budgetData.IsPaidByCreditCardNotAccount) : null),\r\n    })\r\n  );\r\n};\r\n","export const getMonthFromNumber = number=>{\r\n  switch (number) {\r\n    case 0:\r\n      return \"January\";\r\n      break;\r\n    case 1:\r\n      return \"February\";\r\n      break;\r\n    case 2:\r\n      return \"March\";\r\n      break;\r\n    case 3:\r\n      return \"April\";\r\n      break;\r\n    case 4:\r\n      return \"May\";\r\n      break;\r\n    case 5:\r\n      return \"June\";\r\n      break;\r\n    case 6:\r\n      return \"July\";\r\n      break;\r\n    case 7:\r\n      return \"August\";\r\n      break;\r\n    case 8:\r\n      return \"September\";\r\n      break;\r\n    case 9:\r\n      return \"October\";\r\n      break;\r\n    case 10:\r\n      return \"November\";\r\n      break;\r\n    case 11:\r\n      return \"December\";\r\n      break;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const getCurrentYear = (date)=>{\r\n  return date.getFullYear();\r\n};\r\n\r\nexport const getBudgetCycleFromDate = date=>{\r\n  return new Date(date.getFullYear(), date.getMonth());\r\n};\r\n\r\nexport const getBudgetCycleString = date=>{\r\n  return `${getMonthFromNumber(date.getMonth())} ${getCurrentYear(date)}`;\r\n};\r\n\r\nexport const getBudgetCycleDescription = (budgetCycle,todayBudgetCycle=(new Date()))=>{\r\n  const fullYearDifference = todayBudgetCycle.getFullYear() - budgetCycle.getFullYear();\r\n  const monthDifference = (fullYearDifference*12) + (todayBudgetCycle.getMonth() - budgetCycle.getMonth());\r\n  if (monthDifference < 0) return null;\r\n  if (monthDifference === 0) return \"current\";\r\n  if (monthDifference === 1) return \"last month\";\r\n  if (monthDifference < 12) return `${monthDifference} month${monthDifference===1?\"\":\"s\"} ago`;\r\n  const yearDifference = Math.floor(monthDifference/12);\r\n  return `${yearDifference} year${yearDifference===1?\"\":\"s\"} ago`;\r\n}\r\n","export const throwException = (err, throwEx=true, alertWindow=true)=>{\r\n  //Build an exception to throw\r\n  let exception = {};\r\n  let errorMsg = null;\r\n\r\n  //If this is a Javascript exception\r\n  if (err instanceof Error) {\r\n    errorMsg = err.message;\r\n\r\n    exception.name = err.name\r\n    if (err.description === 0 || err.description) exception.description = err.description;\r\n    if (err.number === 0 || err.number) exception.number = err.number;\r\n    if (err.fileName === 0 || err.fileName) exception.fileName = err.fileName;\r\n    if (err.lineNumber === 0 || err.lineNumber) exception.lineNumber = err.lineNumber;\r\n    if (err.columnNumber === 0 || err.columnNumber) exception.columnNumber = err.columnNumber;\r\n    if (err.stack === 0 || err.stack) exception.stack = err.stack;\r\n  }\r\n  else if (typeof err === \"object\") {\r\n    if (err.message) {\r\n      errorMsg = err.message;\r\n      delete err.message;\r\n    }\r\n    exception = {\r\n      ...exception,\r\n      ...err,\r\n    }\r\n  }\r\n  else if (typeof err === \"string\") {\r\n    errorMsg = err;\r\n  }\r\n\r\n  //Log the original error, for investigation\r\n  console.error(\"throwException()\", err);\r\n\r\n  //Send a prettified version of the error to the screen\r\n  const exceptionMsg = `${errorMsg}\\r\\n${Object.entries(exception).length ? Object.entries(exception).map(([key, value])=>`  + ${key}: ${value}\\r\\n`).join(\"\") : ''}\\r\\nThe application failed.`;\r\n\r\n  if (alertWindow) window.alert(exceptionMsg);\r\n\r\n  //Throw the original error\r\n  if (throwEx) throw err;\r\n}\r\n","//Private Functions\r\nconst getHeadersFromJSON = JSON=>{\r\n  if (!JSON instanceof Array) JSON = [JSON];\r\n  return JSON.reduce((headers, transaction)=>\r\n    [\r\n      ...headers,\r\n      ...Object.keys(transaction).filter(key=>!headers.includes(key))\r\n    ]\r\n  , []);\r\n};\r\n\r\n//Public functions\r\nexport const getSpreadsheetData = ()=>{\r\n  return JSON.parse(localStorage.getItem(\"spreadsheet-data\"));\r\n};\r\n\r\nexport const setSpreadsheetData = spreadsheetData=>{\r\n  return localStorage.setItem(\"spreadsheet-data\", JSON.stringify(spreadsheetData));\r\n};\r\n\r\nexport const getSpreadsheetId = ()=>{\r\n  const spreadsheetData = getSpreadsheetData();\r\n  return (spreadsheetData ? spreadsheetData.spreadsheetId : null);\r\n};\r\n\r\nexport const setSpreadsheetId = spreadsheetId=>{\r\n  const spreadsheetData = getSpreadsheetData() || {};\r\n  const newSpreadsheetData = {\r\n    ...spreadsheetData,\r\n    spreadsheetId,\r\n  };\r\n  return setSpreadsheetData(newSpreadsheetData);\r\n};\r\n\r\nexport const getCredentials = ()=>{\r\n  return JSON.parse(localStorage.getItem(\"creds\"));\r\n};\r\n\r\nexport const setCredentials = credentials=>{\r\n  return localStorage.setItem(\"creds\", JSON.stringify(credentials));\r\n};\r\n\r\nexport const getClientId = ()=>{\r\n  const creds = getCredentials();\r\n  return (creds ? creds.clientId : null);\r\n};\r\n\r\nexport const setClientId = clientId=>{\r\n  const creds = getCredentials() || {};\r\n  const newCreds = {\r\n    ...creds,\r\n    clientId,\r\n  };\r\n  return setCredentials(newCreds);\r\n};\r\n\r\nexport const convertSheetsArraysToJSON = (data, delimiter=\",\")=>{\r\n  if (!data) return null;\r\n\r\n  //Get the object keys\r\n  const keys = data.splice(0,1)[0];\r\n\r\n  //Return the data\r\n  return data.map(line=>\r\n    line.reduce((obj, value, i)=>\r\n      ({\r\n        ...obj,\r\n        [keys[i]]: value,\r\n      })\r\n  , {})\r\n  );\r\n};\r\n\r\nexport const convertJSONToSheetsArray = (JSON, delimiter=\",\")=>{\r\n  if (!JSON) return null;\r\n\r\n  const headers = getHeadersFromJSON(JSON);\r\n\r\n  return [\r\n    headers,\r\n    ...JSON.map(object=>\r\n      headers.map(header=>(Array.isArray(object[header]) ? object[header].join(\",\") : object[header]))\r\n    )\r\n  ];\r\n};\r\n\r\nexport const getDynamicPropertyByArray = (startingObject, dotSeparatedProperties)=>{\r\n  if (!(typeof dotSeparatedProperties === \"string\")) return null;\r\n  if(!dotSeparatedProperties) return startingObject;\r\n  if (!dotSeparatedProperties.includes(\".\")) return startingObject[dotSeparatedProperties];\r\n\r\n  let object = startingObject;\r\n  for(let property of dotSeparatedProperties.split(\".\")) {\r\n    if (!property) continue;\r\n    object = object[property];\r\n  }\r\n  return object;\r\n};\r\n\r\nexport const convertColumnNumberToColumnLetter = columnNumber=>{\r\n  const NUM_OF_LETTERS = 26;\r\n  const columnLettersArray = [];\r\n\r\n  //Decrement the column number by 1 (1-based, not 0-based)\r\n  columnNumber--;\r\n\r\n  for(;columnNumber >= 0;columnNumber=(columnNumber/NUM_OF_LETTERS)-1) {\r\n    const index = Math.floor(columnNumber % NUM_OF_LETTERS);\r\n    const letter = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"[index];\r\n    columnLettersArray.push(letter);\r\n  }\r\n\r\n  //Return back the \"reversed\" column letters\r\n  return columnLettersArray.reverse().join(\"\");\r\n};\r\n\r\nexport const convertColumnLetterToColumnNumber = columnLetters=>{\r\n  const NUM_OF_LETTERS = 26;\r\n\r\n  const columnNumber = [...columnLetters].reduce((number,columnLetter,i)=>{\r\n    const index = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".indexOf(columnLetter);\r\n\r\n    //Increment the column number by 1 (1-based, not 0-based)\r\n    return number += (index+1) * (NUM_OF_LETTERS**i);\r\n  }, 0);\r\n\r\n  //Return back the \"reversed\" column letters\r\n  return columnNumber;\r\n};\r\n\r\nexport const convertArrayToA1Notation = (rowsColumnsArray, startingCell=\"A1\")=>{\r\n  const startingColumnLetter = startingCell.match(/(^[A-Z]+)/)[1];\r\n  const startingRow = Number(startingCell.match(/(\\d)/)[1]);\r\n  const startingColumnIndex = convertColumnLetterToColumnNumber(startingColumnLetter);\r\n\r\n  const [rows, columns] = rowsColumnsArray;\r\n  const columnLetter = convertColumnNumberToColumnLetter(startingColumnIndex+columns-1);\r\n  const rowNumber = startingRow+rows-1;\r\n  return `${startingCell}:${columnLetter}${rowNumber}`;\r\n};\r\n","import {getSpreadsheetId, setSpreadsheetId, convertSheetsArraysToJSON, convertJSONToSheetsArray, getDynamicPropertyByArray, convertColumnNumberToColumnLetter, convertColumnLetterToColumnNumber, convertArrayToA1Notation} from './utilities.js'\r\n\r\nexport const callGoogleApiFunction = (googleApi, resourceType, method, optionsParam, pageToken)=>{\r\n  //Declare variables\r\n  let leftoverIds = null;\r\n  const listIdChunkLength = 50;\r\n  let params = [];\r\n  let options = optionsParam;\r\n\r\n  //Build the request options\r\n  if (googleApi === \"youtube\") {\r\n    options = {\r\n      ...optionsParam,\r\n      part: [\r\n        \"snippet\",\r\n        \"contentDetails\",\r\n        \"status\",\r\n      ],\r\n    };\r\n  }\r\n\r\n  //Check that, if provided SOMETHING as an id,\r\n  // it wasn't falsy\r\n  if (\r\n    options.id !== undefined &&  (\r\n      options.id === null ||\r\n      options.id.length === 0\r\n    )\r\n  ) return null;\r\n\r\n  //If this was a \"list\" call, add extra options\r\n  if (method === \"list\") {\r\n    //Set the maximum amount of results per call\r\n    options.maxResults = 50;\r\n\r\n    //Only set the pageToken option if we're provided one\r\n    if (pageToken) options.pageToken = pageToken;\r\n\r\n    //Check that no more than 50 ids are searched per call;\r\n    // Otherwise, query the first 50, and save the rest for\r\n    // a follow-up call\r\n    if (options.id && options.id instanceof Array && options.id.length > 50) {\r\n      leftoverIds = options.id.splice(listIdChunkLength, options.id.length);\r\n    }\r\n  }\r\n\r\n  //If more parameters were found in options, move them over\r\n  if (options.params) {\r\n    params = (options.params instanceof Array ? options.params : [options.params]);\r\n    delete options.params;\r\n  }\r\n\r\n  //Return a Promise to the Google API\r\n  return new Promise(async (resolve,reject)=>{\r\n    try {\r\n      //Get the resource object\r\n      const resource = getDynamicPropertyByArray(window.gapi.client[googleApi], resourceType);\r\n\r\n      //Make the resource method call\r\n      const response = await resource[method](options, ...params);\r\n      console.log(response);\r\n\r\n      //If a \"list\" query was performed\r\n      if (method === \"list\") {\r\n        //If there are more results, recurse using the nextPageToken\r\n        if (response.result.nextPageToken) return resolve([...response.result.items, ...await callGoogleApiFunction(googleApi, resourceType, method, options, response.result.nextPageToken)]);\r\n\r\n        //If more than 50 ids were provided,\r\n        // move to the next set of ids\r\n        if (leftoverIds) return resolve([...response.result.items, ...await callGoogleApiFunction(googleApi, resourceType, method, {...options, id: leftoverIds})]);\r\n\r\n        //If a single id was provided instead of an arary,\r\n        // respond with the single resource using the first item of\r\n        // response.result.items, instead of the array of items\r\n        if ((options.id && !(options.id instanceof Array)) || (resourceType === \"channels\" && options.mine === true)) return resolve(response.result.items[0]);\r\n\r\n        //Otherrwise, return the entire array of items\r\n        return resolve([...response.result.items]);\r\n      }\r\n\r\n      if (resourceType === \"spreadsheets.values\" && method === \"get\") {\r\n        //Return the values\r\n        return resolve(convertSheetsArraysToJSON(response.result.values));\r\n      }\r\n\r\n      //If an \"update\" or \"insert\" query was performed\r\n      if (method === \"update\" || method === \"insert\") return resolve(response.result);\r\n\r\n      //If a \"delete\" or some other query was performed\r\n      return resolve(response);\r\n    }\r\n    catch (errResponse) {\r\n      return reject(errResponse.result.error);\r\n    }\r\n  });\r\n};\r\n\r\n//Declare our specific functions\r\nexport const getSheetsSpreadsheet = async ()=>{\r\n  return callGoogleApiFunction(\"sheets\", \"spreadsheets\", \"get\", {spreadsheetId: getSpreadsheetId()});\r\n};\r\n\r\nexport const getSheetsSpreadsheetValues = async (sheetName, range)=>{\r\n  if (!range) range = convertArrayToA1Notation([1000,26]); //A1:AA1000\r\n  if (typeof range === \"string\") range = [range]; //convert to an array of ranges if only one specified\r\n  range = range.map(r=>`'${sheetName}'!${range}`); //Add the sheet name to the range\r\n\r\n  return callGoogleApiFunction(\"sheets\", \"spreadsheets.values\", \"get\", {spreadsheetId: getSpreadsheetId(), range});\r\n};\r\n\r\nexport const updateSheetsSpreadsheetValues = async (sheetName, valuesJSON, range)=>{\r\n  if (!range) range = convertArrayToA1Notation([1000,26]); //A1:Z1000\r\n  if (typeof range === \"string\") range = [range]; //convert to an array of ranges if only one specified\r\n  range = range.map(r=>`'${sheetName}'!${range}`); //Add the sheet name to the range\r\n\r\n  return callGoogleApiFunction(\"sheets\", \"spreadsheets.values\", \"update\", {\r\n      spreadsheetId: getSpreadsheetId(),\r\n      range,\r\n      valueInputOption: \"USER_ENTERED\",\r\n      includeValuesInResponse: true,\r\n      responseValueRenderOption: \"FORMATTED_VALUE\",\r\n      resource: {\r\n        values: convertJSONToSheetsArray(valuesJSON),\r\n      }\r\n    });\r\n};\r\n","import {throwException} from './../utilities';\r\n\r\nconst scopes = [\r\n  //\"https://www.googleapis.com/auth/drive\",  //See, edit, create, and delete all or your drive files\r\n  //\"https://www.googleapis.com/auth/drive.file\",  //See, edit, create, and delete only the specific Google Drive files you use with this app\r\n  \"https://www.googleapis.com/auth/spreadsheets\",  //See, edit, create, all your Google sheets spreadsheets\r\n];\r\nconst discoveryDocs = [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"];\r\n\r\n//create helper function to retrieve authorization credentials stored outside of version control\r\nconst fetchAuthCredentials = ()=>{\r\n  console.info(\"Fetching authorization credentials...\");\r\n\r\n  try {\r\n    //Get & return the credentials from localStorage\r\n    const creds = JSON.parse(localStorage.getItem(\"creds\"));\r\n    if (creds && creds.clientId) return creds;\r\n\r\n    //If proper credentials weren't found, throw\r\n    const CredentialsNotFoundError = new Error(\"Failed to get authorization credentials.\")\r\n    CredentialsNotFoundError.name = \"CredentialsNotFoundError\";\r\n    throw CredentialsNotFoundError;\r\n  }\r\n  catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\n//Load the Google Client, OAuth2.0 libraries\r\nexport const initAuthorization = (loginCallback, logoutCallback)=>{\r\n  try {\r\n    //Attempt to get the credentials\r\n    const creds = fetchAuthCredentials();\r\n\r\n    //Load the Google APIs\r\n    loadGoogleApis(creds, loginCallback, logoutCallback)\r\n\r\n    return creds;\r\n  }\r\n  catch (err) {\r\n    return throwException(err);\r\n  }\r\n};\r\n\r\nconst loadGoogleApis = (creds, loginCallback, logoutCallback)=>{\r\n  try {\r\n    console.info(\"Loading Google Client, OAuth2.0 APIs...\");\r\n    window.gapi.load(\"client:auth2\", ()=>{initializeGoogleApis(creds, loginCallback, logoutCallback)});\r\n  }\r\n  catch (err) {\r\n    return throwException(err);\r\n  }\r\n};\r\n\r\n//Initialize Google Client library (which simultaneously initializes Google OAuth2.0 library) and set up sign in listeners\r\nconst initializeGoogleApis = async (creds, loginCallback, logoutCallback)=>{\r\n  console.info(\"Loaded Google Client, OAuth2.0 APIs.\");\r\n  console.info(\"Initializing Google Client API...\");\r\n  const {clientId} = creds;\r\n\r\n  //Attempt to initialize the Google API\r\n  window.gapi.client.init({\r\n    clientId: clientId,\r\n    scope: scopes.join(\" \"), //space delimited\r\n    discoveryDocs: discoveryDocs,\r\n  })\r\n  .then(()=>{\r\n    console.info(\"Initialized Google Client API.\");\r\n\r\n    //Listen for sign in state changes\r\n    window.gapi.auth2.getAuthInstance().isSignedIn.listen(\r\n      isSignedIn => updateSigninStatus(isSignedIn, loginCallback, logoutCallback)\r\n    );\r\n\r\n    //Handle initial sign in state\r\n    updateSigninStatus(window.gapi.auth2.getAuthInstance().isSignedIn.get(), loginCallback, logoutCallback);\r\n  })\r\n  .catch(err=>{\r\n    return throwException(err);\r\n  });\r\n};\r\n\r\n//Update UI sign in state changes\r\nconst updateSigninStatus = (isSignedIn, loginCallback, logoutCallback)=>{\r\n  console.info(\"Updating sign in status...\");\r\n  if (isSignedIn) {\r\n    // authorizeButton.style.display = \"none\";\r\n    // signoutButton.style.display = \"block\";\r\n    // signoutButton.removeAttribute(\"disabled\");\r\n\r\n    //Get profile information\r\n    const signInInfo = getProfileInformation();\r\n\r\n    //Run the callback functions\r\n    if (loginCallback) loginCallback(signInInfo);\r\n  }\r\n  else {\r\n    // authorizeButton.style.display = \"block\";\r\n    // signoutButton.style.display = \"none\";\r\n\r\n    //Run the callback functions\r\n    if (logoutCallback) logoutCallback(null);\r\n  }\r\n  console.info(\"Updated sign in status.\");\r\n};\r\n\r\nexport const signIn = async ()=>{\r\n  try {\r\n    await window.gapi.auth2.getAuthInstance().signIn();\r\n  }\r\n  catch (err) {\r\n    return throwException(err, false, false);\r\n  }\r\n};\r\n\r\nexport const signOut = async ()=>{\r\n  try {\r\n    await window.gapi.auth2.getAuthInstance().signOut();\r\n  }\r\n  catch (err) {\r\n    return throwException(err, false, false);\r\n  }\r\n};\r\n\r\nconst getProfileInformation = ()=>{\r\n  console.info(\"Getting profile info...\");\r\n  const profile = window.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile();\r\n  if (!profile) return null;\r\n  return {\r\n    id: profile.getId(),\r\n    name: profile.getName(),\r\n    firstName: profile.getGivenName(),\r\n    lastName: profile.getFamilyName(),\r\n    imageUrl: profile.getImageUrl(),\r\n    emailAddress: profile.getEmail(),\r\n  };\r\n};\r\n","import {getSheetsSpreadsheetValues, updateSheetsSpreadsheetValues} from './../googleApi';\r\nimport {throwException} from './../utilities';\r\n\r\nexport const getTransactions = async ()=>{\r\n  try {\r\n    return await getSheetsSpreadsheetValues(\"Transactions Data\");\r\n  }\r\n  catch (err) {\r\n    throwException(err, false);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const insertTransactions = async ()=>{\r\n  try {\r\n    return;\r\n  }\r\n  catch (err) {\r\n    throwException(err, false);\r\n    return;\r\n  }\r\n};\r\n\r\nexport const updateTransactions = async transactions=>{\r\n  try {\r\n    return await updateSheetsSpreadsheetValues(\"Transactions Data\", transactions);\r\n  }\r\n  catch (err) {\r\n    throwException(err, false);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const deleteTransactions = async ()=>{\r\n  try {\r\n    return;\r\n  }\r\n  catch (err) {\r\n    throwException(err, false);\r\n    return;\r\n  }\r\n};\r\n","import {getSheetsSpreadsheetValues} from './../googleApi';\r\nimport {throwException} from './../utilities';\r\n\r\nexport const getBudgetsData = async ()=>{\r\n  try {\r\n    return await getSheetsSpreadsheetValues(\"Budgets Data\");\r\n  }\r\n  catch (err) {\r\n    throwException(err, false);\r\n    return [];\r\n  }\r\n};\r\n","import {getSheetsSpreadsheetValues} from './../googleApi';\r\nimport {throwException} from './../utilities';\r\n\r\nexport const getAccountsData = async ()=>{\r\n  try {\r\n    return await getSheetsSpreadsheetValues(\"Accounts Data\");\r\n  }\r\n  catch (err) {\r\n    throwException(err, false);\r\n    return [];\r\n  }\r\n};\r\n","import {getSheetsSpreadsheetValues} from './../googleApi';\r\nimport {throwException} from './../utilities';\r\n\r\nexport const getAccountData = async ()=>{\r\n  try {\r\n    return await getSheetsSpreadsheetValues(\"Account Data\");\r\n  }\r\n  catch (err) {\r\n    throwException(err, false);\r\n    return [];\r\n  }\r\n};\r\n","import {useEffect} from 'react';\r\n\r\nconst useConsoleLog = (object, ...args)=>{\r\n  return useEffect(()=>console.log(args[0], object, ...args.slice(1)), [object])\r\n};\r\n\r\nexport default useConsoleLog;\r\n","import {useState, useEffect} from 'react';\r\n\r\nconst useScript = (src, optionsParam)=>{\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    new Promise((resolve, reject)=>{\r\n      //Create default options\r\n      const defaultOptions = {\r\n        async: true,\r\n      };\r\n\r\n      //Create the script tag that will be attached to the DOM\r\n      const script = document.createElement(\"script\");\r\n\r\n      //Combine the options, overwriting the defaults\r\n      const options = {\r\n        ...defaultOptions,\r\n        ...optionsParam,\r\n      };\r\n\r\n      //Attach the options to the script tag\r\n      Object.entries(options).forEach(([option, value])=>script[option] = value);\r\n\r\n      //Attach the src to the script tag\r\n      script.src = src;\r\n\r\n      const onLoad = event=>{\r\n        setIsLoaded(true)\r\n        return resolve(event);\r\n      };\r\n\r\n      const onError = event=>{\r\n        return reject(event);\r\n      };\r\n\r\n      //Create onload & onerror callbacks\r\n      script.addEventListener(\"load\", onLoad)\r\n      script.addEventListener(\"error\", onError);\r\n\r\n      document.body.appendChild(script);\r\n\r\n      return ()=>{\r\n        document.body.removeChild(script);\r\n        setIsLoaded(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return isLoaded;\r\n};\r\n\r\nexport default useScript;\r\n","import {useState, useEffect} from 'react';\r\n\r\nconst useBudgetCycleTransactions = (transactions, budgetCycle)=>{\r\n  //Declare functions\r\n  const getBudgetCycleTransactions = (transactions, budgetCycle)=>{\r\n    if (!transactions.length || !budgetCycle) return [];\r\n\r\n    const lastBudgetCycleMonth = ((budgetCycle.getMonth() - 1 + 12) % 12); //last month, looping over 12\r\n    const lastBudgetCycleYear = (budgetCycle.getMonth() -1 < 0 ? budgetCycle.getFullYear() - 1 : budgetCycle.getFullYear());\r\n\r\n    //Get last cycle's income transactions\r\n    const lastBudgetCycleIncomeTransactions = transactions\r\n      .filter(({TransactionDate})=>TransactionDate.getMonth() === lastBudgetCycleMonth && TransactionDate.getFullYear() === lastBudgetCycleYear)\r\n      .filter(({Category})=>Category === \"Infor payroll\");\r\n\r\n    //Get this month's transactions (minus income)\r\n    const thisBudgetCycleTransactions = transactions\r\n      .filter(({TransactionDate})=>TransactionDate.getMonth() === budgetCycle.getMonth() && TransactionDate.getFullYear() === budgetCycle.getFullYear())\r\n      .filter(({Category})=>Category !== \"Infor payroll\");\r\n\r\n    return [...lastBudgetCycleIncomeTransactions, ...thisBudgetCycleTransactions];\r\n  }\r\n\r\n  //Initialize state\r\n  const [budgetCycleTransactions, setBudgetCycleTransactions] = useState(getBudgetCycleTransactions(transactions, budgetCycle));\r\n\r\n  //Whenever transactions or budgetCycle changes,\r\n  // update state\r\n  useEffect(()=>\r\n    setBudgetCycleTransactions(getBudgetCycleTransactions(transactions, budgetCycle))\r\n  , [transactions, budgetCycle]);\r\n\r\n  //Return the state\r\n  return budgetCycleTransactions;\r\n};\r\n\r\nexport default useBudgetCycleTransactions;\r\n","import {Link} from 'react-router-dom';\r\n\r\nimport './index.scss';\r\n\r\nconst Logo = ({ light })=>{\r\n  return (\r\n    <Link className={`navbar-brand d-flex align-items-center ${(light !== undefined ? \"text-light\" : \"\")}`} to=\"/\">\r\n      <i className={`dashboard-header-logo fas fa-sliders-h  ${(light !== undefined ? \"\" : \"text-primary\")} fs-3`}></i>\r\n      <h1 className=\"display-5 ms-2\">ldgr</h1>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import {signIn} from './../../googleApi'\r\n\r\nimport './index.scss';\r\n\r\nconst GoogleApiSigninButton = ({ isReadyForSignIn })=>{\r\n  return (\r\n    <button className=\"btn btn-primary\" type=\"button\" onClick={signIn} disabled={!isReadyForSignIn}>Sign in with Google</button>\r\n  );\r\n};\r\n\r\nexport default GoogleApiSigninButton;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport Logo from './../Logo';\r\nimport GoogleApiSignInButton from './../GoogleApiSignInButton';\r\n\r\nimport './index.scss';\r\n\r\nconst SignInView = ({ isReadyForSignIn })=>{\r\n  return (\r\n    <div className=\"view signin-view container-fluid mb-0\">\r\n      <div className=\"container-fluid d-flex flex-column justify-content-center align-items-center min-vh-100\">\r\n        <Logo />\r\n        <GoogleApiSignInButton isReadyForSignIn={isReadyForSignIn} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignInView;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport {getBudgetCycleString, getBudgetCyclesFromTransactions, getBudgetCycleDescription, getBudgetCycleFromDate} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst DashboardBudgetCycleDropdown = ({ transactions, budgetCycle, onChange:onChangeProp })=>{\r\n  const todayBudgetCycle = getBudgetCycleFromDate(new Date());\r\n\r\n  const getAllBudgetCycles = ()=>{\r\n    return [\r\n      ...new Set([\r\n        todayBudgetCycle, //assure the current month is an option as well\r\n        ...getBudgetCyclesFromTransactions(transactions),\r\n      ].map(date=>date.toJSON()))\r\n    ]\r\n      .map(JSON=>new Date(JSON));\r\n  };\r\n\r\n  const [allBudgetCycles, setAllBudgetCycles] = useState(getAllBudgetCycles());\r\n\r\n  useEffect(()=>\r\n    setAllBudgetCycles(getAllBudgetCycles())\r\n  , [transactions]);\r\n\r\n  const onClick = event=>{\r\n    const budgetCycleJSON = event.target.getAttribute(\"data-budget-cycle\");\r\n    if (!budgetCycleJSON) return;\r\n    const budgetCycle = new Date(budgetCycleJSON);\r\n    onChangeProp(budgetCycle);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-month-dropdown dropdown\">\r\n      <button id=\"dashboardMonthDropdown\" className=\"btn dropdown-toggle container-fluid\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n        <strong className=\"dashboard-month-dropdown-month h2 d-block mb-0\">\r\n          {getBudgetCycleString(budgetCycle)}\r\n        </strong>\r\n        <em className=\"dashboard-month-dropdown-month-description d-block text-muted h6\">({getBudgetCycleDescription(budgetCycle)})</em>\r\n      </button>\r\n      <ul className=\"dropdown-menu container-fluid\" onClick={onClick}>\r\n        {allBudgetCycles.map(budgetCycle=>(\r\n          <li key={budgetCycle.toJSON()}>\r\n            <a href=\"#\" className=\"dropdown-item\" data-budget-cycle={budgetCycle.toJSON()}>\r\n              {getBudgetCycleString(budgetCycle)} <em className=\"text-muted\">({getBudgetCycleDescription(budgetCycle)})</em>\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardBudgetCycleDropdown;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport {convertNumberToCurrency} from './../../utilities';\r\n\r\nimport DashboardBudgetCycleDropdown from './../DashboardBudgetCycleDropdown';\r\n\r\nimport './index.scss';\r\n\r\nconst DashboardTop = ({ transactions, accountsData, accountData, budgetCycle, onBudgetCycleChange })=>{\r\n  useEffect(()=>console.log(\"Accounts data:\", accountsData), [accountsData]);\r\n\r\n  return (\r\n    <div className=\"dashboard-top\">\r\n      <div className=\"dashboard-account-overview container-fluid py-2 px-3\">\r\n        <div className=\"container-fluid text-end text-muted my-2\">\r\n          Last Updated:&nbsp;\r\n          <span className=\"dashboard-accounts-total d-inline\">6/29/2021</span>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"dashboard-accounts-total-container col text-center fw-bold h4 d-flex flex-column border-end border-2\">\r\n            Total in Accounts:\r\n            <span className=\"dashboard-accounts-total\">{convertNumberToCurrency(accountsData.length && accountsData[0].Balance ? accountsData.reduce((total,accountData)=>total+=Number(accountData.Balance), 0) : NaN) || \"--\"}</span>\r\n          </div>\r\n          <div className=\"dashboard-credit-score-container col text-center fw-bold h4 d-flex flex-column\">\r\n            Credit Score:\r\n            <span className=\"dashboard-credit-score\">{(accountData.length ? accountData.sort((a,b)=>a.LastUpdated+b.LastUpdated)/*sort descending*/.filter(record=>record.CreditScore)[0].CreditScore /*most recent LastUpdated*/ : \"--\")}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <DashboardBudgetCycleDropdown transactions={transactions} budgetCycle={budgetCycle} onChange={onBudgetCycleChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardTop;\r\n","import './index.scss';\r\n\r\nconst DashboardInsight = ({ insight })=>{\r\n  let iconClass = insight.iconClass;\r\n  if (!iconClass) {\r\n    if (insight.type === \"primary\") {\r\n      iconClass = \"fas fa-xs fa-info-circle\";\r\n    }\r\n    else if (insight.type === \"success\") {\r\n      iconClass = \"fas fa-xs fa-check-circle\";\r\n    }\r\n    else if (insight.type === \"warning\") {\r\n      iconClass = \"fas fa-xs fa-exclamation-triangle\";\r\n    }\r\n    else if (insight.type === \"danger\") {\r\n      iconClass = \"fas fa-xs fa-times-circle\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`dashboard-insight alert alert-${insight.type}`}>\r\n      <div>\r\n        <i className={\"fas fa-sliders-h me-1\"}></i>\r\n        <h3 className=\"d-inline-block\">{insight.title}</h3>\r\n      </div>\r\n      <i className={`${iconClass} me-1`}></i>\r\n      <span>{insight.text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardInsight;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport DashboardInsight from './../DashboardInsight';\r\nimport {convertNumberToCurrency, getBudgetAmountSpentFromTransactions} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst DashboardInsights = ({ transactions, budgetsData })=>{\r\n  const [insights, setInsights] = useState([]);\r\n\r\n  const runInsights = ()=>{\r\n    if (!transactions.length || !budgetsData.length) return;\r\n\r\n    //First, remove all insights\r\n    setInsights([]);\r\n\r\n    /* Check if there is money left in the \"Personal Spending\" budget */\r\n    const personalSpendingBudgetData = budgetsData.find(budgetData=>budgetData.Name===\"Personal Spending\");\r\n    const personalSpendingBudgetLeft = getBudgetAmountSpentFromTransactions(\"Personal Spending\", transactions) - personalSpendingBudgetData.Amount;\r\n    if (personalSpendingBudgetLeft > 0) {\r\n      const insight = {\r\n        type: \"primary\",\r\n        title: \"Insights\",\r\n        text: `You have ${convertNumberToCurrency(personalSpendingBudgetLeft)} left in \\\"Personal Spending\\\".`\r\n      };\r\n      setInsights(previousInsights=>[...previousInsights, insight]);\r\n    }\r\n\r\n    /* Check if we spent more than last month */\r\n    //const currentBudgetSpent = transactions.reduce((total,i)=>total+=i.amount);\r\n    //const lastBudgetSpent = transactions.reduce((total,i)=>total+=i.amount);\r\n    //const budgetCycleDifference = lastBudgetSpent-currentBudgetSpent;\r\n    // if (budgetCycleDifference > 0) {\r\n    //   const insight = {\r\n    //     type: \"danger\",\r\n    //     iconClass: \"fas fa-sliders-h\",\r\n    //     title: \"Insights\",\r\n    //     text: `You've spent ${convertNumberToCurrency(budgetCycleDifference)} more than last month.`\r\n    //   };\r\n    //   setInsights([...insights, insight]);\r\n    // }\r\n\r\n    /* Check if a bill has gone up */\r\n    const bills = budgetsData.filter(budgetData=>budgetData.type===\"bill\");\r\n    bills.forEach(bill=>{\r\n      const amountSpent = getBudgetAmountSpentFromTransactions(bill.name, transactions)\r\n      if (!amountSpent) return;\r\n      if (Math.abs(amountSpent) > Math.abs(bill.amount)) {\r\n        const insight = {\r\n          type: \"warning\",\r\n          title: \"Insights\",\r\n          text: `Bill \"${bill.name}\" has gone up ${convertNumberToCurrency(Math.abs(amountSpent)-Math.abs(bill.amount))}.`\r\n        };\r\n        setInsights(previousInsights=>[...previousInsights, insight]);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    runInsights();\r\n  }, [transactions, budgetsData]);\r\n\r\n  return (\r\n    <div className=\"dashboard-insights container mt-5\">\r\n      <h2 className=\"text-center mb-4\">Insights</h2>\r\n      {insights.map((insight,i)=>(\r\n        <DashboardInsight key={i} insight={insight} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardInsights;\r\n","import './index.scss';\r\n\r\nconst DashboardShowcase = ()=>{\r\n  return (\r\n    <div className=\"dashboard-showcase container d-flex flex-column justify-content-center align-items-center bg-primary text-light my-3 mx-auto\">\r\n      <i className=\"fas fa-check-circle fa-2x mb-4\"></i>\r\n      <h3 className=\"fw-bold h2\">All good!</h3>\r\n      <span className=\"h6\">You are on track for this month.</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardShowcase;\r\n","import DashboardInsights from './../DashboardInsights';\r\nimport DashboardShowcase from './../DashboardShowcase';\r\n\r\nimport './index.scss';\r\n\r\nconst DashboardContent = ({ transactions, budgetsData })=>{\r\n  return (\r\n    <div className=\"dashboard-content container-fluid overflow-auto\">\r\n      <DashboardShowcase transactions={transactions} budgetsData={budgetsData} />\r\n      <DashboardInsights transactions={transactions} budgetsData={budgetsData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardContent;\r\n","import {useEffect} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nimport {useBudgetCycleTransactions} from './../../hooks';\r\n\r\nimport './index.scss';\r\n\r\nimport DashboardTop from './../DashboardTop';\r\nimport DashboardContent from './../DashboardContent';\r\n\r\nconst DashboardView = ({ signedInUser, transactions, accountsData, accountData, budgetsData, budgetCycle, onBudgetCycleChange, setFooterNavbar })=>{\r\n  //Send the route to the footer navbar\r\n  const route = useLocation().pathname;\r\n  useEffect(()=>{\r\n    setFooterNavbar(route);\r\n  }, []);\r\n\r\n  const currentBudgetCycleTransactions = useBudgetCycleTransactions(transactions, budgetCycle);\r\n\r\n  return (\r\n    <div className=\"view dashboard-view d-flex flex-column\">\r\n      <main className=\"main flex-grow-1\">\r\n        <DashboardTop transactions={transactions} accountsData={accountsData} accountData={accountData} budgetCycle={budgetCycle} onBudgetCycleChange={onBudgetCycleChange} />\r\n        <DashboardContent transactions={currentBudgetCycleTransactions} budgetsData={budgetsData} />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardView;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport {convertNumberToCurrency} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst BudgetGraphStatusIcon = ({ budget, overBudget, overEarned })=> {\r\n  let iconClass;\r\n  let iconText;\r\n  let iconColor;\r\n\r\n  if (budget.Type === \"bill\") {\r\n    if (budget.amountSpent) {\r\n      if (!overBudget) {\r\n        iconClass = \"fas fa-check-circle\";\r\n        iconText = \"Paid\";\r\n        iconColor = \"success\";\r\n      }\r\n      else {\r\n        iconClass = \"fas fa-times-circle\";\r\n        iconText = \"Overpaid\";\r\n        iconColor = \"danger\";\r\n      }\r\n    }\r\n    else {\r\n      iconClass = \"\";\r\n      iconText = \"Pending\";\r\n      iconColor = \"secondary\";\r\n    }\r\n  }\r\n  if (budget.Type === \"income\") {\r\n    if (budget.amountSpent) {\r\n      if (budget.amountSpent === budget.Amount) {\r\n        iconClass = \"fas fa-check-circle\";\r\n        iconText = \"Earned\";\r\n        iconColor = \"success\";\r\n      }\r\n      if (overEarned) {\r\n        iconClass = \"fas fa-check-circle\";\r\n        iconText = \"Over-earned\";\r\n        iconColor = \"success\";\r\n      }\r\n      if (!overEarned) {\r\n        iconClass = \"fas fa-exclamation-triangle\";\r\n        iconText = \"Under-earned\";\r\n        iconColor = \"warning\";\r\n      }\r\n    }\r\n  }\r\n\r\n  //If there's an icon to render, render\r\n  if (iconText) {\r\n    return (\r\n      <div className={`budget-graph-status-icon-container d-inline-block badge rounded-pill text-${iconColor} bg-light ms-1 border border-${iconColor}`}>\r\n        <i className={`budget-graph-status-icon fas fa-xs ${iconClass} me-1`}></i>\r\n        <span>{iconText}</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //Otherwise, return null\r\n  return null;\r\n};\r\n\r\nexport default BudgetGraphStatusIcon;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport {convertNumberToCurrency} from './../../utilities';\r\n\r\nimport BudgetGraphStatusIcon from './../BudgetGraphStatusIcon';\r\n\r\nimport './index.scss';\r\n\r\nconst BudgetGraph = ({ budget })=>{\r\n  const isExpenseBudget = budget.Type !== \"income\";\r\n  const overBudget = (isExpenseBudget ? budget.amountSpent < budget.Amount : false);\r\n  const overEarned = (!isExpenseBudget ? budget.amountSpent > budget.Amount : false);\r\n\r\n  return (\r\n    <div className=\"budget-graph-container my-4\">\r\n      <h5 className=\"budget-graph-title d-inline-block\">{budget.Name}</h5>\r\n      <BudgetGraphStatusIcon budget={budget} overBudget={overBudget} overEarned={overEarned} />\r\n      <div className=\"budget-graph-bar-outer\">\r\n        <h6 className=\"budget-graph-bar-stats\" style={\r\n          {\r\n            color: (!overBudget\r\n              ? \"black\" //\"rgb(245,245,245)\"\r\n              : \"red\"\r\n            ),\r\n          }\r\n        }>\r\n          {convertNumberToCurrency(Math.abs(budget.amountSpent))} of {convertNumberToCurrency(Math.abs(budget.Amount))} {(isExpenseBudget ? \"spent\" : \"earned\")}\r\n        </h6>\r\n        <h6 className=\"budget-graph-bar-remaining text-muted\" >\r\n          {convertNumberToCurrency(budget.Amount - budget.amountSpent)} {(overBudget ? \"overspent\" : \"remaining\")}\r\n        </h6>\r\n        <div className=\"budget-graph-bar-inner\" style={\r\n          {\r\n            backgroundColor: (!isExpenseBudget ? \"green\" :  (overBudget ? \"red\" : budget.color)),\r\n            width: (overBudget\r\n              ? `calc(100% * ${(budget.amountSpent - budget.Amount)/budget.Amount})`\r\n              : `calc(100% * ${budget.amountSpent/budget.Amount})`\r\n            ),\r\n            left: (overBudget\r\n              ? \"unset\"\r\n              : 0\r\n            ),\r\n            right: (overBudget\r\n              ? 0\r\n              : \"unset\"\r\n            ),\r\n          }\r\n        }></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BudgetGraph;\r\n","import {useEffect} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nimport BudgetGraph from './../BudgetGraph';\r\n\r\nimport {getBudgetAmountSpentFromTransactions} from './../../utilities';\r\n\r\nimport {useBudgetCycleTransactions} from './../../hooks';\r\n\r\nimport './index.scss';\r\n\r\nconst BudgetsView = ({ transactions, budgetsData, budgetCycle, setFooterNavbar })=>{\r\n  //Send the route to the footer navbar\r\n  const route = useLocation().pathname;\r\n  useEffect(()=>{\r\n    setFooterNavbar(route);\r\n  }, []);\r\n\r\n  const currentBudgetCycleTransactions = useBudgetCycleTransactions(transactions, budgetCycle);\r\n\r\n  return (\r\n    <div className=\"view budgets-view container-fluid py-2\">\r\n      <div className=\"budget-graphs container\">\r\n        <h2 className=\"budgets-title text-center fw-bold\">Month Overview</h2>\r\n\r\n        {\r\n          (\r\n            !budgetsData ?\r\n            '' :\r\n            budgetsData.map(budgetData=>{\r\n              const {Name, Amount, Type} = budgetData;\r\n              return <BudgetGraph key={Name} budget={{...budgetData, color: \"#2196f3\", amountSpent: getBudgetAmountSpentFromTransactions(Name, currentBudgetCycleTransactions)}}/>\r\n            })\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BudgetsView;\r\n","import {useState} from 'react';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionsImportForm = ({ onSubmit:onSubmitProp, onFileInputChange:onFileInputChangeProp })=>{\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleOnClick = event=>{\r\n    setIsOpen(wasOpen=>!wasOpen);\r\n  };\r\n\r\n  const onSubmit = event=>{\r\n    //Prevent form submission\r\n    event.preventDefault();\r\n\r\n    const transactionImportInput = event.target.querySelector(\"#transaction-import-input\");\r\n\r\n    //Get the transactions data\r\n    const scrapedTransactionsData = transactionImportInput.value;\r\n\r\n    //Reset the input\r\n    transactionImportInput.value = '';\r\n\r\n    //Re-close the form\r\n    setIsOpen(false);\r\n\r\n    //Send it to the parent\r\n    onSubmitProp(scrapedTransactionsData);\r\n  };\r\n\r\n  const onFileInputChange = async event=>{\r\n    //Prevent default behavior\r\n    event.preventDefault();\r\n\r\n    //Get the transactions data\r\n    const transactionsDataArray = [];\r\n    await Promise.all(  //Promise.all handles an array of Promises\r\n      [...event.target.files].map(async file=>{\r\n        const fileContent = await file.text();\r\n        transactionsDataArray.push(fileContent);\r\n      })\r\n    );\r\n\r\n    //Reset the file input\r\n    event.target.value = \"\";\r\n\r\n    //Re-close the form\r\n    setIsOpen(false);\r\n\r\n    //Call the parent handler\r\n    onFileInputChangeProp(transactionsDataArray);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-end\">\r\n        <button className=\"transaction-import-form-toggle btn btn-dark\" type=\"button\" onClick={toggleOnClick}>Import Transactions</button>\r\n      </div>\r\n      {(\r\n        !isOpen ? null :\r\n        <form id=\"transaction-import-form\" className=\"transaction-import-form mb-4\" onSubmit={onSubmit}>\r\n          <div>\r\n            <label className=\"form-label\">Transactions</label>\r\n            <div className=\"input-group mb-2\">\r\n              <textarea id=\"transaction-import-input\" className=\"transaction-import-input form-control\" rows=\"1\"></textarea>\r\n              <button className=\"btn btn-primary input-group-text\" type=\"submit\">Import</button>\r\n            </div>\r\n            <p className=\"form-text\">Paste transactions data for parsing.</p>\r\n            <div>\r\n              <label className=\"form-label\">Or, import a comma-separated values (*.csv) file.</label>\r\n              <input id=\"transaction-import-form-input-file\" className=\"form-control\" type=\"file\" accept=\".csv\" multiple onChange={onFileInputChange} />\r\n            </div>\r\n            <div id=\"transaction-import-form-status\"></div>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionsImportForm;\r\n","import './index.scss';\r\n\r\nconst TransactionsTableHeaders = ()=>{\r\n  const headers = [\r\n    \"Transaction Date\",\r\n    \"Account\",\r\n    \"Category\",\r\n    \"Description\",\r\n    \"Notes\",\r\n    \"Amount\",\r\n    \"Tags\",\r\n    \"\"\r\n  ];\r\n\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {headers.map(header=><th key={header}>{header}</th>)}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default TransactionsTableHeaders;\r\n","import './index.scss';\r\n\r\nconst TagBadge = ({ tag, onClick })=>{\r\n  return (\r\n    <span key={tag} className=\"tag-badge badge rounded-pill\" onClick={onClick}>{tag}</span>\r\n  );\r\n};\r\n\r\nexport default TagBadge;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport TagBadge from './../TagBadge';\r\n\r\nimport {nullCoalesce, formatTransactionDisplay} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionsTableTransaction = ({ transaction, onTransactionEditButtonClick })=>{\r\n  const [transactionDisplay, setTransactionDisplay] = useState({\r\n    PostedDate: \"\",\r\n    TransactionDate: \"\",\r\n    AccountNumber: \"\",\r\n    Type: \"\",\r\n    Description: \"\",\r\n    Amount: \"\",\r\n    Category: \"\",\r\n    Notes: \"\",\r\n    Tags: [],\r\n  });\r\n\r\n  useEffect(()=>setTransactionDisplay(formatTransactionDisplay(transaction)), [transaction]);\r\n\r\n  return (\r\n    <tr className=\"transaction\">\r\n      <td>{transactionDisplay.TransactionDate}</td>\r\n      <td>{transactionDisplay.AccountNumber}</td>\r\n      <td>{transactionDisplay.Category}</td>\r\n      <td>{transactionDisplay.Description}</td>\r\n      <td>{transactionDisplay.Notes}</td>\r\n      <td>{transactionDisplay.Amount}</td>\r\n      <td>{transactionDisplay.Tags.map(tag=><TagBadge key={tag} tag={tag} />)}</td>\r\n      <td><button className=\"transaction-edit-button btn\" type=\"button\" onClick={()=>onTransactionEditButtonClick(transaction)}><i className=\"transaction-edit-button-icon fas fa-edit\"></i></button></td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TransactionsTableTransaction;\r\n","import TransactionsTableTransaction from './../TransactionsTableTransaction';\r\nimport './index.scss';\r\n\r\nconst TransactionsTableTransactions = ({ transactions, onTransactionEditButtonClick })=>{\r\n  if(!(transactions && transactions.length)) return null;\r\n  return (\r\n    <>\r\n      {transactions.map((transaction, i)=><TransactionsTableTransaction key={i} transaction={transaction} onTransactionEditButtonClick={onTransactionEditButtonClick} />)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionsTableTransactions;\r\n","import {useState, useEffect} from 'react';\r\nimport TransactionsTableTransactions from './../TransactionsTableTransactions';\r\nimport {convertNumberToCurrency, getSumByProp} from './../../utilities';\r\nimport './index.scss';\r\n\r\nconst TransactionsTableBody = ({ transactions, onTransactionEditButtonClick })=>{\r\n  const calculatePaymentAmountTotal = ()=>{\r\n    return convertNumberToCurrency(\r\n      getSumByProp(\r\n        transactions.filter(transaction=>![\"Payments\",\"Credit\"].includes(transaction.Type))\r\n        , \"Amount\"\r\n      )\r\n    )\r\n  };\r\n\r\n  const [totalAmount, setTotalAmount] = useState(\"\");\r\n\r\n  useEffect(()=>{\r\n    if (!transactions.length) return;\r\n    setTotalAmount(calculatePaymentAmountTotal());\r\n  }, [transactions]);\r\n\r\n  return (\r\n    <tbody>\r\n      <TransactionsTableTransactions transactions={transactions} onTransactionEditButtonClick={onTransactionEditButtonClick} />\r\n      <tr className=\"total\">\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td>{(totalAmount ? totalAmount : \"\")}</td>\r\n        <td></td>\r\n        <td></td>\r\n      </tr>\r\n    </tbody>\r\n  );\r\n};\r\n\r\nexport default TransactionsTableBody;\r\n","import TransactionsTableHeaders from './../TransactionsTableHeaders';\r\nimport TransactionsTableBody from './../TransactionsTableBody';\r\nimport './index.scss';\r\n\r\nconst TransactionsTable = ({ transactions, onTransactionEditButtonClick })=>{\r\n  if (!transactions.length) return null;\r\n  return (\r\n    <div className=\"transaction-table-container\">\r\n      <table className=\"table table-striped table-hover mb-0\">\r\n        <TransactionsTableHeaders />\r\n        <TransactionsTableBody transactions={transactions} onTransactionEditButtonClick={onTransactionEditButtonClick} />\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionsTable;\r\n","import TransactionsTable from './../TransactionsTable';\r\nimport './index.scss';\r\n\r\nconst TransactionsData = ({ transactions, onTransactionEditButtonClick })=>{\r\n  return (\r\n    <div className=\"transaction-data\">\r\n      <h2 className=\"h2\">Transactions</h2>\r\n      <TransactionsTable transactions={transactions} onTransactionEditButtonClick={onTransactionEditButtonClick} />\r\n      <div className=\"transaction-count text-end mb-4 mr-2\">\r\n        <small><em>{(transactions && transactions.length ? transactions.length : 0)} transactions</em></small>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionsData;\r\n","// ## FEATUERS\r\n// - Dropdown list opens when:\r\n//    * click anywhere inside\r\n//    * when the .input-dropdown-input receives input\r\n//    * when the \"Up\" or \"Down\" keys are pressed with the .input-dropdown-input focused\r\n// - Dropdown list closes when:\r\n//    * a selection is clicked or chosen with the \"Enter\" key\r\n//    * a click occurs outside of the dropdown\r\n//    * another element is focused on\r\n//    * the \"Esc\" key is pressed\r\n// - Dropdown list items can be selected by:\r\n//    * clicking on a list item using\r\n//    * using the \"Up\" and \"Down\" keys along with the \"Enter\" key (when .input-dropdown-input focused)\r\n// - Dropdown list items can be filtered/highlighted by inputting into .input-dropdown-input\r\n// ## DESIGN\r\n// - Dropdown input takes 100% of dropdown width\r\n// - Dropdown list height maxes out and scrolls afterward\r\n// - Dropdown list will scroll as selection moves\r\n// - Dropdown list will only move the selection if the dropdown list was already open--if the dropdown list was opened using the \"Up\" or \"Down\" key, the selection will remain on the current value\r\n\r\n\r\n(()=>{\r\nconst isDescendantOf = (element, potentialAncestor) => {\r\n  if (\r\n    element &&\r\n    potentialAncestor &&\r\n    element !== potentialAncestor\r\n  ) return isDescendantOf(element.parentElement, potentialAncestor);\r\n\r\n  return element != null &&\r\n    potentialAncestor != null &&\r\n    element === potentialAncestor;\r\n};\r\n\r\nconst isDescendantOfDropdown = element => {\r\n  if (\r\n    !element.classList.contains(\"input-dropdown\") &&\r\n    element.parentElement\r\n  ) return isDescendantOfDropdown(element.parentElement);\r\n\r\n  if (element.classList.contains(\"input-dropdown\")) return element;\r\n\r\n  return false;\r\n};\r\n\r\n//Create master dropdown closure to hold all dropdown state per event\r\nconst dropdownMasterEventListener = event=>{\r\n  const dropdown = isDescendantOfDropdown(event.target);\r\n\r\n  //Exit if not clicked inside a dropdown\r\n  if (!dropdown) return;\r\n\r\n  //Declare variables\r\n  const eventListeners = [];\r\n  const dropdownItem = event.target.classList.contains(\"input-dropdown-list-item\") && event.target;\r\n  const dropdownInput = dropdown.querySelector(\".input-dropdown-input\");\r\n  const dropdownList = dropdown.querySelector(\".input-dropdown-list\");\r\n  const dropdownListItems = [...dropdown.querySelectorAll(\".input-dropdown-list-item\")];\r\n  const previousSelectedValue = dropdownInput.value;\r\n\r\n\r\n  //Declare functions\r\n  const callEventListeners = event=>{\r\n    eventListeners.filter(listenerObj=>listenerObj[0]===event.type).forEach(listenerObj=>listenerObj[1](event));\r\n  };\r\n\r\n  const filterDropdownItems = value=>{\r\n    //Declare variables\r\n    const regEx = new RegExp(`(${value})`, \"i\");\r\n\r\n    //If no value was passed, exit\r\n    if(!value) return;\r\n\r\n    //Add .hidden to unmatched items\r\n    dropdownListItems.filter(dropdownListItem=>!dropdownListItem.innerText.match(regEx)).forEach(dropdownListItem=>dropdownListItem.classList.add(\"hidden\"));\r\n\r\n    //Add a highlight to matched text in unfiltered items\r\n   dropdownListItems.filter(dropdownListItem=>dropdownListItem.innerText.match(regEx)).forEach(dropdownListItem=>dropdownListItem.innerHTML = dropdownListItem.innerHTML.replace(regEx, `<mark class=\"dropdown-selected-highlight\">$1</mark>`));\r\n  };\r\n\r\n  const unFilterDropdownItems = ()=> dropdownListItems.forEach(dropdownListItem=>{\r\n    dropdownListItem.classList.remove(\"hidden\");\r\n    dropdownListItem.innerHTML = dropdownListItem.innerText;\r\n  });\r\n\r\n  const setDropdownItemsSelection = selectedDropdownListItem=>{\r\n    resetDropdownItemsSelection();\r\n    if(!selectedDropdownListItem) return;\r\n    selectedDropdownListItem.classList.add(\"selected\");\r\n  };\r\n\r\n  const resetDropdownItemsSelection = ()=> dropdownListItems.forEach(dropdownListItem=>dropdownListItem.classList.remove(\"selected\"));\r\n\r\n  const setDropdownSelection = value=>{\r\n    const dropdownInput = dropdown.querySelector(\".input-dropdown-input\");\r\n    if (!dropdownInput) throw new Error();\r\n    dropdownInput.value = value;\r\n    unFilterDropdownItems();\r\n  };\r\n\r\n  const clearDropdownSelection = event=>{\r\n    dropdownInput.value = previousSelectedValue;\r\n  };\r\n\r\n  const checkDropdownListSelectionScroll = ()=>{\r\n    //Delare variables\r\n    const selectedDropdownListItem = dropdownList.querySelector(\".input-dropdown-list-item.selected\");\r\n\r\n    //IF there is no selected item, exit\r\n    if(!selectedDropdownListItem) return;\r\n\r\n    const newlySelectedDropdownListItemRect = selectedDropdownListItem.getBoundingClientRect();\r\n    const dropdownListViewport = dropdownList.getBoundingClientRect();\r\n    const topIsBelowNotAboveViewportTop = newlySelectedDropdownListItemRect.top >= dropdownListViewport.top;\r\n    const bottomIsAboveNotBelowViewportBottom = newlySelectedDropdownListItemRect.bottom <= dropdownListViewport.bottom;\r\n\r\n    //Shift the view of the dropdown list (via scroll), if necessary\r\n\r\n    //If the top is above the viewport, attempt to scroll the viewport to the top of the selection (or to the bottom scrollable area, if selection is at the bottom)\r\n    if (!topIsBelowNotAboveViewportTop) {\r\n      dropdownList.scroll({top: dropdownList.scrollTop + (newlySelectedDropdownListItemRect.top - dropdownListViewport.top)})\r\n    }\r\n    //Or, if the bottom is below the viewport, scroll the viewport down 1 height unit until we can see the selection bottom\r\n    else if (!bottomIsAboveNotBelowViewportBottom) {\r\n      dropdownList.scroll({top: dropdownList.scrollTop + (newlySelectedDropdownListItemRect.height * (Math.floor((newlySelectedDropdownListItemRect.bottom - dropdownListViewport.bottom)/newlySelectedDropdownListItemRect.height)+1))})\r\n    }\r\n  };\r\n\r\n  const addTemporaryEventListeners = ()=>{\r\n    document.addEventListener(\"click\", checkIfClickedOrFocusedOutsideOfDropdown);\r\n    document.addEventListener(\"focus\", checkIfClickedOrFocusedOutsideOfDropdown);\r\n\r\n    dropdownListItems.forEach(dropdownListItem=>dropdownListItem.addEventListener(\"mouseenter\", dropdownListItemOnMouseEnter));\r\n  };\r\n\r\n  const removeTemporaryEventListeners = ()=>{\r\n    document.removeEventListener(\"click\", checkIfClickedOrFocusedOutsideOfDropdown);\r\n    document.removeEventListener(\"focus\", checkIfClickedOrFocusedOutsideOfDropdown);\r\n    //dropdownListItems.forEach(dropdownListItem=>dropdownListItem.removeEventListener(\"mouseenter\", setDropdownSelection));\r\n    //dropdownList.removeEventListener(\"mouseleave\", dropdownListOnMouseLeave);\r\n     dropdownListItems.forEach(dropdownListItem=>dropdownListItem.removeEventListener(\"mouseenter\", dropdownListItemOnMouseEnter));\r\n  };\r\n\r\n  const dropdownIsOpen = ()=>dropdown.classList.contains(\"open\");\r\n\r\n  const openDropdown = ()=>{\r\n    if (dropdownIsOpen()) return;\r\n\r\n    //Open dropdown\r\n    dropdown.classList.add(\"open\");\r\n\r\n    //Set a selected value that matches the current input value, if applicable\r\n    setDropdownItemsSelection(dropdownListItems.filter(dropdownListItem=>dropdownListItem.innerText === dropdownInput.value)[0]);\r\n\r\n    //Add necessary event listeners to dropdown components\r\n    addTemporaryEventListeners();\r\n  };\r\n\r\n  const closeDropdown = ()=>{\r\n    if (!dropdownIsOpen) return;\r\n\r\n    //Remove event listeners\r\n    removeTemporaryEventListeners();\r\n\r\n    //Close the dropdown\r\n    dropdown.classList.remove(\"open\");\r\n  };\r\n\r\n  const checkIfClickedOrFocusedOutsideOfDropdown = event=>{\r\n    //If we click outside of the dropdown or its children, close it\r\n    if (!isDescendantOf(event.target, dropdown)) closeDropdown();\r\n  };\r\n\r\n\r\n  //Declare event listeners\r\n  const dropdownListItemOnMouseEnter = event=>{\r\n    const dropdownListItems = [...dropdown.querySelectorAll(\".input-dropdown-list-item\")];\r\n    const selectedDropdownListItem = event.target;\r\n    setDropdownItemsSelection(selectedDropdownListItem);\r\n  };\r\n\r\n  const dropdownInputOnInput = event=>{\r\n\r\n    //Declare variables\r\n    const value = event.target.value;\r\n\r\n    //Assure the dropdown is open\r\n    openDropdown();\r\n\r\n    //Start by resetting all list items to visible\r\n    unFilterDropdownItems();\r\n\r\n    //Now, filter items that don't match and highlight unfiltered matched text\r\n    filterDropdownItems(value);\r\n\r\n    //Set the selected value to the first option\r\n    setDropdownItemsSelection(dropdown.querySelector(\".input-dropdown-list-item:not(.hidden)\"));\r\n\r\n    //Make sure the selected value is within visibility\r\n    checkDropdownListSelectionScroll();\r\n  };\r\n\r\n  const dropdownOnKeyDown = event=>{\r\n    if (\r\n      event.keyCode === 38 /* Up */ ||\r\n      event.keyCode === 40 /* Down */ ||\r\n      event.keyCode === 36 /* Home */ ||\r\n      event.keyCode === 35 /* End */\r\n    ) {\r\n      event.preventDefault();\r\n\r\n      //Declare variables\r\n      const dropdownListItems = [...dropdown.querySelectorAll(\".input-dropdown-list-item:not(.hidden)\")];\r\n\r\n      //Assure the dropdown is open if we pressed the \"Up\" or \"Down\" arrow\r\n      const dropdownWasOpen = dropdownIsOpen();\r\n      if (event.keyCode === 38 /* Up */ || event.keyCode === 40 /* Down */) openDropdown();\r\n\r\n      //Select the next or previous dropdown list item based on the key pressed, only if the dropdown was already open\r\n      if (dropdownWasOpen) {\r\n        if (event.keyCode === 38 /* Up */ || event.keyCode === 40 /* Down */) {\r\n          const upOrDown = (event.keyCode === 38 ? -1 : 1);\r\n          const wrapAround = (event.keyCode === 38 ? dropdownListItems.length : -1);\r\n\r\n          const currentSelectedDropdownListItem = dropdown.querySelector(\".input-dropdown-list-item.selected\");\r\n          const currentSelectedDropdownListItemIndex = (dropdownListItems.indexOf(currentSelectedDropdownListItem) === -1 ? wrapAround : dropdownListItems.indexOf(currentSelectedDropdownListItem));\r\n          const newlySelectedDropdownListItem = dropdownListItems[(currentSelectedDropdownListItemIndex+upOrDown+dropdownListItems.length)%dropdownListItems.length];\r\n          setDropdownItemsSelection(newlySelectedDropdownListItem);\r\n        }\r\n        else if (event.keyCode === 36 /* Home */ || event.keyCode === 35 /* End */) {\r\n          const firstOrLastIndex = (event.keyCode === 36 ? 0 : dropdownListItems.length-1);\r\n          const newlySelectedDropdownListItem = dropdownListItems[firstOrLastIndex];\r\n          setDropdownItemsSelection(newlySelectedDropdownListItem);\r\n        }\r\n      }\r\n\r\n      //Check the scroll on the dropdown list to assure the newly selected item is visible\r\n      checkDropdownListSelectionScroll();\r\n\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode === 13 /* Enter */) {\r\n      event.preventDefault();\r\n\r\n      //Declare variables\r\n      const dropdownListItems = [...dropdown.querySelectorAll(\".input-dropdown-list-item\")];\r\n\r\n      const currentSelectedDropdownListItem = dropdownListItems.filter(dropdownListItem=>dropdownListItem.classList.contains(\"selected\"))[0];\r\n      if (!currentSelectedDropdownListItem) return;\r\n      setDropdownSelection(currentSelectedDropdownListItem.innerText);\r\n      closeDropdown();\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode === 27 /* Esc */) {\r\n      event.preventDefault();\r\n\r\n      //Declare variables\r\n      unFilterDropdownItems();\r\n      resetDropdownItemsSelection();\r\n      clearDropdownSelection();\r\n      closeDropdown();\r\n      return;\r\n    }\r\n  };\r\n\r\n  const dropdownOnClick = event=>{\r\n    //If a dropdown item was clicked, select it\r\n    if (dropdownItem) {\r\n      closeDropdown();\r\n      setDropdownSelection(event.target.innerText);\r\n      return;\r\n    }\r\n\r\n    //If the dropdown was clicked and not already open, open it\r\n    openDropdown();\r\n\r\n    //Attach permanent event listeners\r\n    //dropdownInput.oninput = dropdownInputOnInput; //onInput event listener to filter the dropdownListItems on typing\r\n    //dropdown.onkeydown = dropdownOnKeyDown; /* possible with div.[tabindex=0] */\r\n\r\n    //Also add onMouseover event listeners on the dropdown items\r\n    //dropdownListItems.forEach(dropdownListItem=>dropdownListItem.addEventListener(\"mouseenter\", setDropdownSelection));\r\n    //dropdownList.addEventListener(\"mouseleave\", dropdownListOnMouseLeave);\r\n  };\r\n\r\n  // const dropdownListOnMouseLeave = event=>{\r\n  //   if (!dropdown.classList.contains(\"open\")) return;\r\n  //   clearDropdownSelection(event);\r\n  // };\r\n\r\n  //Save event listeners\r\n  eventListeners.push([\"click\", dropdownOnClick]);\r\n  eventListeners.push([\"input\", dropdownInputOnInput]);\r\n  eventListeners.push([\"keydown\", dropdownOnKeyDown]);\r\n\r\n  callEventListeners(event);\r\n};\r\n\r\ndocument.addEventListener(\"click\", dropdownMasterEventListener /* dropdownOnClick */);\r\ndocument.addEventListener(\"input\", dropdownMasterEventListener /* dropdownInputOnInput */);\r\ndocument.addEventListener(\"keydown\", dropdownMasterEventListener /* dropdownOnKeyDown */);\r\n})();\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport './InputDropdown.js';\r\nimport './InputDropdown.css';\r\nimport './index.scss';\r\n\r\nconst InputDropdown = ({ name, value: initialValue, items, placeholder, onKeyDown, onChange: onChangeProp })=>{\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  //Update the dropdown value whenever a new one is passed\r\n  useEffect(()=>setValue(initialValue), [initialValue]);\r\n\r\n  const onChange = event=>{\r\n    setValue(event.target.value); //handle dropdown onChange\r\n    onChangeProp(event); //handle ancestor-passed onChange prop\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"input-dropdown\">\r\n      <input className=\"input-dropdown-input transaction-modal-input\" name={name} value={value} placeholder={placeholder} onChange={onChange} onKeyDown={onKeyDown} autoComplete=\"off\"/>\r\n      <div className=\"input-dropdown-chevron-container\">\r\n          <i className=\"input-dropdown-chevron\"></i>\r\n        </div>\r\n      <ul className=\"input-dropdown-list\">\r\n        {items.map(item=><li key={item} className=\"input-dropdown-list-item\">{item}</li>)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputDropdown;\r\n","import TagBadge from './../TagBadge';\r\nimport InputDropdown from './../InputDropdown';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionDetailModalInput = ({ transactionDetail, tabIndex, onClick, onBlur, onChange, onKeyDown, onTagBadgeClick })=>{\r\n  const categories = [\r\n    \"\",\r\n    \"Savings\",\r\n    \"Gas\",\r\n    \"Church\",\r\n    \"Groceries/Necessities\",\r\n    \"LoveInAction\",\r\n    \"Family Outings\",\r\n    \"Personal Spending\",\r\n    \"Miscellaneous\",\r\n    \"Sharonview mortgage & escrow\",\r\n    \"HOA dues\",\r\n    \"Duke Energy\",\r\n    \"SJWD Water District\",\r\n    \"Piedmont Natural Gas\",\r\n    \"Kirby Sanitation\",\r\n    \"Laurens Electric ProTec Security\",\r\n    \"SimpliSafe (for mom)\",\r\n    \"AT&T Internet\",\r\n    \"State Farm auto insurance\",\r\n    \"AT&T phone bill\",\r\n    \"Spotify Premium subscription\",\r\n    \"Netflix Premium subscription\",\r\n    \"Discovery Plus subscription\",\r\n    \"YMCA membership\",\r\n  ];\r\n\r\n  return (\r\n    <div key={`${transactionDetail.name}-container`} onClick={onClick} onBlur={onBlur}>\r\n      {(\r\n        transactionDetail.name === \"Tags\" ?\r\n        (\r\n          <div className=\"transaction-modal-input-tags-container form-control\">\r\n            <input className=\"transaction-modal-input-tags-hidden form-control\" type=\"hidden\" name=\"Tags\" value={transactionDetail.value.join(\",\")} />\r\n            <div className=\"transaction-modal-input-tags-badge-container\">\r\n              {transactionDetail.value.map(tag=><TagBadge key={tag} tag={tag} onClick={event=>onTagBadgeClick(tag)} />)}\r\n            </div>\r\n            <transactionDetail.tag className=\"transaction-modal-input transaction-modal-input-tags form-control\" type={transactionDetail.tagType} placeholder={transactionDetail.placeholder} tabIndex={tabIndex} onKeyDown={onKeyDown}></transactionDetail.tag>\r\n          </div>\r\n        ) : (\r\n        transactionDetail.name === \"Category\" ?\r\n          <InputDropdown name={transactionDetail.name} value={transactionDetail.value} items={categories} placeholder={transactionDetail.placeholder} disabled {...(transactionDetail.disabled && {\"data-stay-disabled\": true})} tabIndex={tabIndex} onKeyDown={onKeyDown} onChange={onChange}/>\r\n        :\r\n          <transactionDetail.tag className=\"transaction-modal-input transaction-modal-input-text form-control\" name={transactionDetail.name} value={transactionDetail.value} type={transactionDetail.tagType} placeholder={transactionDetail.placeholder} tabIndex={tabIndex} disabled {...(transactionDetail.disabled && {\"data-stay-disabled\": true})} onKeyDown={onKeyDown} onChange={onChange}>{transactionDetail.tag !== \"input\" ? transactionDetail.value : null}</transactionDetail.tag>\r\n      )\r\n    )}\r\n    </div> //disabled inputs don't fire events; wrap in something that will fire an event\r\n  );\r\n};\r\n\r\nexport default TransactionDetailModalInput;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport TransactionDetailModalInput from './../TransactionDetailModalInput';\r\n\r\nimport {nullCoalesce, formatTransactionDisplay} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionDetailModal = ({ transaction, buttonsOptions, isOpen, onClose, onSubmit })=>{\r\n  const [PostedDate, setPostedDate] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [TransactionDate, setTransactionDate] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [AccountNumber, setAccountNumber] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [Amount, setAmount] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [Description, setDescription] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [DescriptionDisplay, setDescriptionDisplay] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [Category, setCategory] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [Type, setType] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [Notes, setNotes] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [Tags, setTags] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    if(!transaction) return;\r\n\r\n    console.log(\"Updating TransactionDetailModal state based on updated prop \\\"transaction\\\".\", transaction, PostedDate, TransactionDate, AccountNumber, Amount, Description, Category, Notes, Type, Tags)\r\n    const transactionDisplay = formatTransactionDisplay(transaction);\r\n    setPostedDate(transactionDisplay.PostedDate);\r\n    setTransactionDate(transactionDisplay.TransactionDate);\r\n    setAccountNumber(transactionDisplay.AccountNumber);\r\n    setAmount(transactionDisplay.Amount);\r\n    setDescription(transaction.Description);\r\n    setDescriptionDisplay(transactionDisplay.DescriptionDisplay);\r\n    setCategory(transactionDisplay.Category);\r\n    setNotes(transactionDisplay.Notes);\r\n    setType(transactionDisplay.Type);\r\n    setTags(transactionDisplay.Tags);\r\n  }, [transaction]);\r\n\r\n  const transactionDetails = [\r\n    {name: \"PostedDate\", placeholder: \"PostedDate\", value: PostedDate, tag: \"input\", tagType: \"text\", setState: setPostedDate, disabled: false},\r\n    {name: \"TransactionDate\", placeholder: \"TransactionDate\", value: TransactionDate, tag: \"input\", tagType: \"text\", setState: setTransactionDate, disabled: false},\r\n    {name: \"Account\", placeholder: \"Account Number\", value: AccountNumber, tag: \"input\", tagType: \"text\", setState: setAccountNumber, disabled: false},\r\n    {name: \"Amount\", placeholder: \"Amount\", value: Amount, tag: \"input\", tagType: \"text\", setState: setAmount, disabled: false},\r\n    {name: \"Description\", placeholder: \"Description\", value: Description, tag: \"input\", tagType: \"text\", setState: setDescription, disabled: true},\r\n    {name: \"DescriptionDisplay\", placeholder: \"Description\", value: DescriptionDisplay, tag: \"input\", tagType: \"text\", setState: setDescription, disabled: false},\r\n    {name: \"Category\", placeholder: \"Select a category...\", value: Category, tag: \"input\", tagType: \"text\", setState: setCategory, disabled: false},\r\n    {name: \"Type\", placeholder: \"Type\", value: Type, tag: \"input\", tagType: \"text\", setState: setType, disabled: false},\r\n    {name: \"Notes\", placeholder: \"Notes\", value: Notes, tag: \"textarea\", tagType: null, setState: setNotes, disabled: false},\r\n    {name: \"Tags\", placeholder: \"Tags\", value: Tags, tag: \"input\", tagType: \"text\", setState: setTags, disabled: false},\r\n  ];\r\n\r\n  const onTransactionDetailInputContainerClick = event=>{\r\n    const transactionDetailInput = event.target;\r\n    if (transactionDetailInput.getAttribute(\"data-stay-disabled\")) return;\r\n    transactionDetailInput.disabled = false;\r\n    transactionDetailInput.focus();\r\n  };\r\n\r\n  const onTransactionDetailInputContainerBlur = event=>{\r\n    const transactionDetailInput = event.target;\r\n    if (transactionDetailInput.getAttribute(\"data-stay-disabled\")) return;\r\n    transactionDetailInput.disabled = true;\r\n  };\r\n\r\n  const onTransactionDetailInputChange = (event, transactionDetail)=>{\r\n    transactionDetail.setState(event.target.value)\r\n  };\r\n\r\n  const onTransactionDetailInputKeyDown = event=>{\r\n    const transactionDetailInput = event.target;\r\n    if (event.keyCode === 9 /* Tab */) {\r\n      event.preventDefault();\r\n      const nextOrPrevious = (event.shiftKey === true ? -1 : 1);\r\n      const inputsArray = [...new Set([...document.querySelector(\".transaction-modal-form\").querySelectorAll(\".transaction-modal-input\"), ...document.querySelector(\".transaction-modal-form\").querySelectorAll(\"[tabIndex]\")])];\r\n      const nextInput = inputsArray[(inputsArray.indexOf(transactionDetailInput)+nextOrPrevious+inputsArray.length)%inputsArray.length];\r\n      if (nextInput) {\r\n        nextInput.disabled = false;\r\n        nextInput.focus();\r\n      }\r\n      return;\r\n    }\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n\r\n      if (transactionDetailInput.classList.contains(\"transaction-modal-input-tags\")) {\r\n        setTags([...Tags, transactionDetailInput.value]);\r\n\r\n        //Reset the input\r\n        transactionDetailInput.value = '';\r\n\r\n        return;\r\n      }\r\n\r\n      transactionDetailInput.disabled = true;\r\n      return;\r\n    }\r\n  };\r\n\r\n  const transactionModalFormOnSubmit = event=>{\r\n    const transactionModalForm = event.target;\r\n\r\n    //Prevent the form from submitting\r\n    event.preventDefault();\r\n\r\n    //Aggregate the form data into an object\r\n    const data = [...transactionModalForm.querySelectorAll(\"[name]\")].reduce((accumulator,input)=>{\r\n      const obj = {};\r\n      let {name, value} = input;\r\n      value = (name === \"Tags\" ? (value ? value.split(/\\s*,\\s*/) : []) : value);\r\n\r\n      obj[name] = (value instanceof Array && value.length === 0 ? [] : nullCoalesce(value));\r\n      return accumulator = {...accumulator, ...obj};\r\n    }, {});\r\n    console.log(\"Data submitted from TransactionDetailModal\", data);\r\n\r\n    //Update the transaction with the new form data\r\n    const updatedTransaction = {\r\n      ...transaction, //previous transaction data\r\n      ...data, //new transaction data from the form\r\n      Description: transaction.Description, //make sure to never change the actual Description\r\n      DescriptionDisplay: (data.Description === formatTransactionDisplay(transaction).DescriptionDisplay ? null : data.Description), //if the description from the form exactly matches the default description format, then there was no description display created; otherwise, the user wants to save that description display\r\n    };\r\n\r\n    console.log(\"Updated transaction submitted from TransactionDetailModal\", updatedTransaction);\r\n\r\n    onSubmit(updatedTransaction);\r\n  };\r\n\r\n  const onTagBadgeClick = tag=>{\r\n    setTags(Tags.filter(t=>t!==tag));\r\n  };\r\n\r\n  return (\r\n    <Modal id=\"transaction-modal\" show={isOpen} onHide={onClose}>\r\n      <Modal.Header>\r\n        <Modal.Title className=\"modal-title\">Transaction Detail</Modal.Title>\r\n        <button className=\"btn-close\" type=\"button\" onClick={onClose}></button>\r\n      </Modal.Header>\r\n      <form className=\"transaction-modal-form\" onSubmit={transactionModalFormOnSubmit}>\r\n        <Modal.Body>\r\n          {transactionDetails.map((transactionDetail, i)=>(\r\n            <TransactionDetailModalInput key={transactionDetail.name} transactionDetail={transactionDetail} tabIndex={i+1} onClick={onTransactionDetailInputContainerClick} onBlur={onTransactionDetailInputContainerBlur} onChange={(event)=>onTransactionDetailInputChange(event, transactionDetail)} onKeyDown={onTransactionDetailInputKeyDown} onTagBadgeClick={onTagBadgeClick} />\r\n          ))}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {Object.entries(buttonsOptions).map((buttonObj, i)=>(\r\n            <button key={buttonObj[0]} className={`btn ${(buttonObj[0] === \"okButton\" ? \"btn-primary\" : (buttonObj[0] === \"cancelButton\" ? \"btn-secondary\" : ''))}`} type={(buttonObj[0] === \"okButton\" ? \"submit\" : \"button\")} {...(buttonObj[0] === \"cancelButton\" ? {\"data-bs-dismiss\": \"modal\"} : '')} tabIndex={transactionDetails.length+i+1} onKeyDown={onTransactionDetailInputKeyDown} {...(buttonObj[0] === \"cancelButton\" ? {onClick: onClose} : '')} >{buttonObj[1]}</button>\r\n          ))}\r\n        </Modal.Footer>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TransactionDetailModal;\r\n","import {useState} from 'react';\r\n\r\nimport {convertNumberToCurrency} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionsImportDuplicatesModalDuplicateCheckbox = ({ id, duplicateData, onChange:onChangeProp })=>{\r\n  const onChange = event=>{\r\n    const isChecked = event.target.checked;\r\n\r\n    //Update the duplicate's confirmation state in the parent\r\n    const updatedDuplicateData = {\r\n      ...duplicateData,\r\n      confirmed: !duplicateData.confirmed,\r\n    };\r\n\r\n    onChangeProp(duplicateData, updatedDuplicateData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-check\">\r\n      <input className=\"form-check-input\" type=\"checkbox\" id={id} checked={duplicateData.confirmed} onChange={onChange}/>\r\n      <label className=\"form-check-label\" htmlFor={id}>\r\n        {`${(duplicateData.duplicate.TransactionDate).toLocaleDateString()} ${convertNumberToCurrency(duplicateData.duplicate.Amount)} ${duplicateData.duplicate.Description}`}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionsImportDuplicatesModalDuplicateCheckbox;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport TransactionsImportDuplicatesModalDuplicateCheckbox from './../TransactionsImportDuplicatesModalDuplicateCheckbox';\r\nimport {areObjectsEqual, isTransactionDuplicate} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionsImportDuplicatesModal = ({ newTransactions, duplicates, isOpen, onClose, onSubmit:onSubmitProp })=>{\r\n  const [duplicatesData, setDuplicatesData] = useState(duplicates.map(duplicate=>({duplicate, confirmed: true})));\r\n\r\n  useEffect(()=>{\r\n    console.log(\"Updating duplicates data from duplicates: \", duplicates);\r\n    setDuplicatesData(duplicates.map(duplicate=>({duplicate, confirmed: true})));\r\n  }, [duplicates]);\r\n\r\n  useEffect(()=>console.log(\"Duplicates data: \", duplicates), [duplicatesData]);\r\n\r\n  const onSubmit = event=>{\r\n    //Prevent the form from submitting\r\n    event.preventDefault();\r\n\r\n    //Get the checked duplicates\r\n    const confirmedDuplicates = duplicatesData.filter(duplicateData=>duplicateData.confirmed).map(duplicateData=>duplicateData.duplicate);\r\n\r\n    console.log(\"Duplicates confirmed from TransactionsImportDuplicatesModal\", confirmedDuplicates);\r\n\r\n    //Remove the true duplicates\r\n    const filteredNewTransactions = newTransactions.filter(newTransaction=>!isTransactionDuplicate(newTransaction, confirmedDuplicates));\r\n\r\n    onSubmitProp(filteredNewTransactions);\r\n  };\r\n\r\n  const onTransactionsImportDuplicatesModalDuplicateCheckboxChange = (oldDuplicateData, newDuplicateData)=>{\r\n    setDuplicatesData(previousDuplicatesData=>{\r\n      const newDuplicatesData = [...previousDuplicatesData];\r\n      const oldDuplicateDataIndex = previousDuplicatesData.indexOf(oldDuplicateData);\r\n      newDuplicatesData[oldDuplicateDataIndex] = newDuplicateData;\r\n      return newDuplicatesData;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal id=\"transaction-import-duplicate-modal\" show={isOpen} onHide={onClose}>\r\n      <Modal.Header>\r\n        <Modal.Title className=\"modal-title\">Duplicate transactions</Modal.Title>\r\n        <button className=\"btn-close\" type=\"button\" data-bs-dismiss=\"modal\" onClick={onClose}></button>\r\n      </Modal.Header>\r\n      <form className=\"transaction-import-duplicate-form\" onSubmit={onSubmit}>\r\n        <Modal.Body>\r\n          <p>{duplicates.length} possible duplicate transactions were found. Please confirm which are duplicates.</p>\r\n          <div className=\"overflow-auto\">\r\n            {\r\n              duplicatesData.map((duplicateData, i)=>(\r\n                <TransactionsImportDuplicatesModalDuplicateCheckbox key={i} id={i} duplicateData={duplicateData} onChange={onTransactionsImportDuplicatesModalDuplicateCheckboxChange} />\r\n              ))\r\n            }\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-secondary\" type=\"button\" tabIndex=\"1\" onClick={onClose}>Cancel import</button>\r\n          <button className=\"btn btn-primary\" type=\"submit\" tabIndex=\"2\">Confirm</button>\r\n        </Modal.Footer>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TransactionsImportDuplicatesModal;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport {convertNumberToCurrency} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionsImportConfirmedModal = ({ transactions, duplicates, isOpen, onClose, onSubmit:onSubmitProp })=>{\r\n  const onSubmit = event=>{\r\n    event.preventDefault();\r\n\r\n    onSubmitProp(transactions);\r\n  };\r\n\r\n  return (\r\n    <Modal id=\"transaction-confirmed-duplicate-modal\" show={isOpen} onHide={onClose}>\r\n      <Modal.Header>\r\n        <Modal.Title className=\"modal-title\">Transactions imported!</Modal.Title>\r\n        <button className=\"btn-close\" type=\"button\" data-bs-dismiss=\"modal\" onClick={onClose}></button>\r\n      </Modal.Header>\r\n      <form className=\"transaction-confirmed-duplicate-modal-form\" onSubmit={onSubmit}>\r\n        <Modal.Body>\r\n          <p>Successfully imported {transactions.length} transactions.</p>\r\n          <div className=\"overflow-auto\">\r\n            {\r\n              transactions.map((transaction, i)=>(\r\n                <div key={i}>\r\n                  {`${(transaction.TransactionDate).toLocaleDateString()} ${convertNumberToCurrency(transaction.Amount)} ${transaction.Description}`}\r\n                </div>\r\n              ))\r\n            }\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n        <button className=\"btn btn-secondary\" type=\"button\" tabIndex=\"1\" onClick={onClose}>Cancel import</button>\r\n        <button className=\"btn btn-primary\" type=\"submit\" tabIndex=\"2\">Save</button>\r\n        </Modal.Footer>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TransactionsImportConfirmedModal;\r\n","import {useState, useEffect} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nimport TransactionsImportForm from './../TransactionsImportForm';\r\nimport TransactionsData from './../TransactionsData';\r\nimport TransactionDetailModal from './../TransactionDetailModal';\r\nimport TransactionsImportDuplicatesModal from './../TransactionsImportDuplicatesModal';\r\nimport TransactionsImportConfirmedModal from './../TransactionsImportConfirmedModal';\r\n\r\nimport {useConsoleLog, useBudgetCycleTransactions} from './../../hooks';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionsView = ({ transactions, budgetCycle, transactionsImportDuplicatesModalNewTransactions, transactionsImportDuplicatesModalDuplicates, isTransactionsImportDuplicatesModalOpen, onTransactionsImportDuplicatesModalClose, onTransactionsImportDuplicatesModalSubmit, onTransactionsImportFormSubmit, onTransactionsImportFormFileInputChange, onTransactionDetailModalSubmit:onTransactionDetailModalSubmitProp, transactionsImportConfirmedModalTransactions, isTransactionsImportConfirmedModalOpen, closeTransactionsImportConfirmedModal, onTransactionsImportConfirmedModalSubmit, setFooterNavbar })=>{\r\n  //Send the route to the footer navbar\r\n  const route = useLocation().pathname;\r\n  useEffect(()=>{\r\n    setFooterNavbar(route);\r\n  }, []);\r\n\r\n  const [transactionDetailModalTransaction, setTransactionDetailModalTransaction] = useState(null);\r\n  const [isTransactionDetailModalOpen, setIsTransactionDetailModalOpen] = useState(false);\r\n  const currentBudgetCycleTransactions = useBudgetCycleTransactions(transactions, budgetCycle);\r\n\r\n  useConsoleLog(currentBudgetCycleTransactions, \"currentBudgetCycleTransactions:\");\r\n\r\n  const openTransactionDetailModal = ()=>{\r\n    setIsTransactionDetailModalOpen(true);\r\n  };\r\n\r\n  const closeTransactionDetailModal = ()=>{\r\n    setIsTransactionDetailModalOpen(false);\r\n  };\r\n\r\n  const onTransactionEditButtonClick = transaction=>{\r\n    setTransactionDetailModalTransaction(transaction);\r\n    openTransactionDetailModal();\r\n  };\r\n\r\n  const onTransactionDetailModalSubmit = (updatedTransaction)=>{\r\n    onTransactionDetailModalSubmitProp(transactionDetailModalTransaction, updatedTransaction);\r\n    closeTransactionDetailModal();\r\n  };\r\n\r\n  return (\r\n    <div className=\"view transactions-view\">\r\n      <div className=\"container-fluid\">\r\n        <h1 className=\"display-1\">Ledger</h1>\r\n        <TransactionsImportForm onSubmit={onTransactionsImportFormSubmit} onFileInputChange={onTransactionsImportFormFileInputChange} />\r\n        <TransactionsData transactions={currentBudgetCycleTransactions} onTransactionEditButtonClick={onTransactionEditButtonClick} />\r\n      </div>\r\n      <TransactionDetailModal transaction={transactionDetailModalTransaction} buttonsOptions={{cancelButton: \"Cancel\", okButton: \"Save\"}} isOpen={isTransactionDetailModalOpen} onClose={closeTransactionDetailModal} onSubmit={onTransactionDetailModalSubmit} />\r\n      <TransactionsImportDuplicatesModal newTransactions={transactionsImportDuplicatesModalNewTransactions} duplicates={transactionsImportDuplicatesModalDuplicates} isOpen={isTransactionsImportDuplicatesModalOpen} onClose={onTransactionsImportDuplicatesModalClose} onSubmit={onTransactionsImportDuplicatesModalSubmit} />\r\n      <TransactionsImportConfirmedModal transactions={transactionsImportConfirmedModalTransactions} isOpen={isTransactionsImportConfirmedModalOpen} onClose={closeTransactionsImportConfirmedModal} onSubmit={onTransactionsImportConfirmedModalSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionsView;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport './index.scss';\r\n\r\nconst SettingsInput = ({ setting })=>{\r\n  const [name, setName] = useState(setting.name || \"\");\r\n  const [value, setValue] = useState(setting.value || \"\");\r\n\r\n  useEffect(()=>{\r\n    if (!setting) return;\r\n\r\n    setName(setting.name || \"\");\r\n    setValue(setting.value || \"\");\r\n  }, [setting]);\r\n\r\n  const onChange = event=>{\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"setting-input mb-3\">\r\n      <label htmlFor={name} className=\"form-label\">{name}</label>\r\n      <input id={name} className=\"form-control\" name={name} type=\"text\" value={value} onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsInput;\r\n","import SettingsInput from './../SettingsInput';\r\n\r\nimport './index.scss';\r\n\r\nconst SettingsForm = ({ settings, onSubmit:onSubmitProp })=>{\r\n  const onSubmit = event=>{\r\n    event.preventDefault();\r\n\r\n    const submittedSettings = [...event.target.querySelectorAll(\".setting-input [name]\")].reduce((data, {name, value})=>({...data, [name]: value}), {});\r\n\r\n    onSubmitProp(submittedSettings);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      {Object.entries(settings).map(([name, props])=>(<SettingsInput key={name} setting={{name, ...props}} />))}\r\n      <div className=\"d-flex justify-content-center mt-4\">\r\n        <button className=\"btn btn-primary\" type=\"submit\">Save</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SettingsForm;\r\n","import {useEffect} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nimport SettingsForm from './../SettingsForm';\r\n\r\nimport './index.scss';\r\n\r\nconst SettingsView = ({ setFooterNavbar, settings, onSubmit })=>{\r\n  //Send the route to the footer navbar\r\n  const route = useLocation().pathname;\r\n  useEffect(()=>{\r\n    setFooterNavbar(route);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"view settings-view container-fluid py-2\">\r\n      <h1 className=\"page-title display-3\">Settings</h1>\r\n      <SettingsForm settings={settings} onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsView;\r\n","import {useEffect, useRef} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './index.scss';\r\n\r\nconst FooterNavbar = ({ active })=>{\r\n  const footerNavbar = useRef(null);\r\n\r\n  const setActiveItem = (active, footerNavbar)=>{\r\n    if (!active) return;\r\n    const activePath = (process.env.NODE_ENV === \"production\" ? process.env.PUBLIC_URL : '')+(active === \"/\" ? \"/dashboard\" : active);\r\n    const navItems = [...footerNavbar.current.querySelectorAll(\".footer-nav-item\")];\r\n    const activeItem = navItems.find(navItem=>navItem.getAttribute(\"href\") === activePath);\r\n    navItems.forEach(navItem=>navItem.classList.remove(\"active\"));\r\n    if (activeItem) activeItem.classList.add(\"active\");\r\n  };\r\n\r\n  useEffect(()=>{\r\n    setActiveItem(active, footerNavbar)\r\n  }, [active]);\r\n\r\n  return (\r\n    <footer className=\"footer fixed-bottom\" ref={footerNavbar}>\r\n      <nav className=\"footer-nav nav nav-pills nav-justified\">\r\n        <Link className=\"footer-nav-item nav-link d-flex flex-column\" to=\"/dashboard\"><i className=\"footer-nav-item-icon fas fa-home pb-1\"></i>Dashboard</Link>\r\n        <Link className=\"footer-nav-item nav-link d-flex flex-column\" to=\"/budgets\"><i className=\"footer-nav-item-icon far fa-clipboard pb-1\"></i>Budgets</Link>\r\n        <Link className=\"footer-nav-item nav-link d-flex flex-column\" to=\"/transactions\"><i className=\"footer-nav-item-icon fas fa-list pb-1\"></i>Transactions</Link>\r\n        <Link className=\"footer-nav-item nav-link d-flex flex-column\" to=\"/settings\"><i className=\"footer-nav-item-icon fas fa-cogs pb-1\"></i>Settings</Link>\r\n      </nav>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default FooterNavbar;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport SettingsForm from './../SettingsForm';\r\n\r\nimport './index.scss';\r\n\r\nconst SignInSettingsModal = ({ settings, isOpen, onClose, onSubmit:onSubmitProp })=>{\r\n  const onSubmit = submittedSettings=>{\r\n    onSubmitProp(submittedSettings);\r\n\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal id=\"signin-settings-modal\" show={isOpen} onHide={onClose}>\r\n      <Modal.Header>\r\n        <Modal.Title className=\"modal-title\">Sign In Settings</Modal.Title>\r\n        <button className=\"btn-close\" type=\"button\" data-bs-dismiss=\"modal\" onClick={onClose}></button>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"alert alert-warning d-flex align-items-center\" role=\"alert\">\r\n          <i className=\"fas fa-exclamation-triangle me-2\"></i>\r\n          Please assure the following settings are valid.\r\n        </div>\r\n        <SettingsForm settings={settings} onSubmit={onSubmit} />\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SignInSettingsModal;\r\n","import {signOut} from './../../googleApi';\r\n\r\nimport './index.scss';\r\n\r\nconst GoogleApiUserButton = ({ signedInUser })=>{\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <button className=\"user-button btn bg-light\" type=\"button\" id=\"user-button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n        <img className=\"user-button-image\" src={signedInUser.imageUrl} />\r\n        <span className=\"user-button-name\">{signedInUser.firstName}</span>\r\n      </button>\r\n      <ul className=\"dropdown-menu\" aria-labelledby=\"user-button\">\r\n        <li><a className=\"dropdown-item\" onClick={signOut}>Sign out</a></li>\r\n      </ul>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default GoogleApiUserButton;\r\n","import Logo from './../Logo';\r\nimport GoogleApiUserButton from './../GoogleApiUserButton';\r\n\r\nimport './index.scss';\r\n\r\nconst Header = ({ signedInUser })=>{\r\n  return (\r\n    <header className=\"dashboard-header navbar-text fixed-top bg-primary\">\r\n      <div className=\"container d-flex justify-content-between\">\r\n        <Logo light />\r\n        <div className=\"d-flex justify-content-center align-items-center\">\r\n          <GoogleApiUserButton signedInUser={signedInUser}/>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","//Import package dependencies\nimport {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\n\n//Import source code\nimport {getBudgetCycleFromDate, typeCheckTransactions, isTransactionDuplicate, categorizeTransactionByDescription, importTransactions, typeCheckBudgetsData, typeCheckAccountsData, typeCheckAccountData, throwException} from './../../utilities';\nimport {getSpreadsheetId, setSpreadsheetId, getClientId, setClientId, initAuthorization} from './../../googleApi';\nimport {getTransactions, updateTransactions, getBudgetsData, getAccountsData, getAccountData} from './../../api';\nimport {useScript, useConsoleLog, useLocalStorage} from './../../hooks';\n\n//Import custom components\nimport SignInView from './../SignInView';\nimport DashboardView from './../DashboardView';\nimport BudgetsView from './../BudgetsView';\nimport TransactionsView from './../TransactionsView';\nimport SettingsView from './../SettingsView';\nimport FooterNavbar from './../FooterNavbar';\nimport SignInSettingsModal from './../SignInSettingsModal';\nimport Header from './../Header';\n\n//Import styles\nimport './main.css';\nimport './index.scss';\n\n\nconst App = () => {\n  //Set application state\n  const [transactions, setTransactions] = useState([]);\n  const [budgetsData, setBudgetsData] = useState([]);\n  const [accountsData, setAccountsData] = useState([]);\n  const [accountData, setAccountData] = useState({});\n\n  const [footerNavbar, setFooterNavbar] = useState(null);\n  const [budgetCycle, setBudgetCycle] = useState(getBudgetCycleFromDate(new Date()));\n  const [transactionsImportDuplicatesModalNewTransactions, setTransactionsImportDuplicatesModalNewTransactions] = useState([]);\n  const [transactionsImportDuplicatesModalDuplicates, setTransactionsImportDuplicatesModalDuplicates] = useState([]);\n  const [isTransactionsImportDuplicatesModalOpen, setIsTransactionsImportDuplicatesModalOpen] = useState(false);\n  const [transactionsImportConfirmedModalTransactions, setTransactionsImportConfirmedModalTransactions] = useState([]);\n  const [isTransactionsImportConfirmedModalOpen, setIsTransactionsImportConfirmedModalOpen] = useState(false);\n  const [signedInUser, setSignedInUser] = useState(undefined);\n  const [isSignInSettingsModalOpen, setIsSignInSettingsModalOpen] = useState(false);\n\n  //Declare settings\n  const settings = {\n    \"Client Id\": {\n      value: getClientId(),\n      update: clientId=>setClientId(clientId),\n    },\n    \"Spreadsheet id\": {\n      value: getSpreadsheetId(),\n      update: spreadsheetId=>setSpreadsheetId(spreadsheetId),\n    }\n  };\n\n  //Log data\n  useConsoleLog(transactions, \"Transactions Data:\");\n  useConsoleLog(budgetsData, \"Budget Data:\");\n  useConsoleLog(accountsData, \"Accounts Data:\");\n  useConsoleLog(accountData, \"Account Data:\");\n  useConsoleLog(signedInUser, \"signedInUser:\");\n  useConsoleLog(budgetCycle, \"budgetCycle:\");\n\n  //Load the Google API\n  const gapiLoaded = useScript(\"https://apis.google.com/js/api.js\");\n\n  //When the Google API JS library loads, initialize the Google API\n  useEffect(()=>connectToGoogleAPI(), [gapiLoaded]);\n\n  //Whenever the user gets logged in,\n  // attempt to query for data\n  useEffect(async ()=>{\n    if (!signedInUser) return;\n    setTransactionsWrapper(await getTransactions());\n    setBudgetsDataWrapper(await getBudgetsData());\n    setAccountsDataWrapper(await getAccountsData());\n    setAccountDataWrapper(await getAccountData());\n  }, [signedInUser]);\n\n  //Whenever the transactions are updated, save them off as well\n  useEffect(()=>{\n    if (!transactions.length) return;\n    updateTransactions(transactions);\n  }, [transactions]);\n\n  //Create state handlers\n  const checkTransactionsForDuplicates = (previousTransactions, newTransactions)=>{\n    if(!previousTransactions.length) return newTransactions;\n\n    //Look for possible duplicate transactions,\n    // and confirm if they are duplicates (shouldn't be added),\n    // or not duplicates (should be added)\n    const duplicates = [];\n    newTransactions.forEach(newTransaction=>{\n      const duplicate = isTransactionDuplicate(newTransaction, previousTransactions);\n      if (duplicate) {\n        duplicates.push(duplicate);\n      }\n    });\n\n    //If there were no duplicates, append the new transactions\n    if (!duplicates.length) return [...previousTransactions, ...newTransactions];\n\n    //Otherwise, ask user to confirm true duplicates,\n    // and just return the previous data for now\n    console.log(\"Duplicates: \", duplicates);\n    setTransactionsImportDuplicatesModalNewTransactions(newTransactions);\n    setTransactionsImportDuplicatesModalDuplicates(duplicates);\n    openTransactionsImportDuplicatesModal();\n\n    return previousTransactions;\n  };\n\n  const setTransactionsHandler = (previousTransactions, newTransactions, callback, oldTransaction)=>{\n    //If there are no new transactions, short-circuit\n    if (!newTransactions || !newTransactions.length) return previousTransactions;\n\n    //Check that we have an array of transactions\n    let transactionsArray = newTransactions;\n    if (!(newTransactions instanceof Array)) transactionsArray = [newTransactions];\n\n    //Type check transactions data to convert from strings to the correct type\n    const typeCheckedTransactions = typeCheckTransactions(transactionsArray);\n\n    //Assign category & notes from description\n    const transactions = typeCheckedTransactions.map(transaction=>categorizeTransactionByDescription(transaction));\n\n    //Return the data manipulation callback result, sorted\n    if (callback) return callback(previousTransactions, transactions, oldTransaction)\n      .sort((a,b)=>b.TransactionDate-a.TransactionDate);\n\n    //Otherwise, just return the transactions, sorted\n    return transactions.sort((a,b)=>b.TransactionDate-a.TransactionDate);\n  };\n\n  const setTransactionsWrapper = newTransactions=>{\n    //Import new transactions\n    setTransactions(previousTransactions=>{\n      //Run through transaction normalization\n      return setTransactionsHandler(previousTransactions, newTransactions);\n    });\n  };\n\n  const importTransactionsHandler = newTransactions=>{\n    //Import new transactions\n    setTransactions(previousTransactions=>{\n      const callback = (previousTransactions, newTransactions)=>{\n        //Check for duplicates, and return depending if any were found\n        return checkTransactionsForDuplicates(previousTransactions, newTransactions);\n      };\n\n      //Run through transaction normalization\n      return setTransactionsHandler(previousTransactions, newTransactions, callback);\n    });\n  };\n\n  const updateTransactionHandler = (oldTransaction, newTransaction)=>{\n    //Update a single transaction\n    setTransactions(previousTransactions=>{\n      const callback = (previousTransactions, newTransactions, oldTransaction)=>{\n        //Get the single updated transaction wrapped in an array\n        const newTransaction = newTransactions[0];\n\n        //Update transactions with the new transaction\n        const transactions = [...previousTransactions]; //create deep copy\n        transactions[transactions.indexOf(oldTransaction)] = newTransaction;\n\n        return transactions;\n      };\n\n      //Run through transaction normalization\n      return setTransactionsHandler(previousTransactions, newTransaction, callback, oldTransaction);\n    });\n  };\n\n  const appendTransactionsHandler = newTransactions=>{\n    //Import new transactions\n    setTransactions(previousTransactions=>{\n      const callback = (previousTransactions, newTransactions)=>{\n        //Append the new transactions\n        return [...previousTransactions, ...newTransactions];\n      };\n\n      //Run through transaction normalization\n      return setTransactionsHandler(previousTransactions, newTransactions, callback);\n    });\n  };\n\n  const setBudgetsDataWrapper = newBudgetsData=>{\n    //Import new data\n    setBudgetsData(previousBudgetsData=>{\n      if (!newBudgetsData) return [];\n\n      const typeCheckedData = typeCheckBudgetsData(newBudgetsData);\n      return typeCheckedData;\n    });\n  };\n\n  const setAccountsDataWrapper = newAccountsData=>{\n    //Import new data\n    setAccountsData(previousAccountsData=>{\n      if (!newAccountsData) return [];\n\n      const typeCheckedData = typeCheckAccountsData(newAccountsData);\n      return typeCheckedData;\n    });\n  };\n\n  const setAccountDataWrapper = newAccountData=>{\n    //Import new data\n    setAccountData(previousAccountData=>{\n      if (!newAccountData) return {};\n\n      const typeCheckedData = typeCheckAccountData(newAccountData);\n      return typeCheckedData;\n    });\n  };\n\n\n  //Create event listeners\n  const onTransactionsImportFormSubmit = scrapedTransactionsData=>{\n    //Import the scraped transactions data\n    const transactions = importTransactions(scrapedTransactionsData, \"scraped\");\n\n    //Set the new transactions data\n    importTransactionsHandler(transactions);\n  };\n\n  const onTransactionsImportFormFileInputChange = transactionsDataArray=>{\n    //Import the csv transactions data\n    const transactions = importTransactions(transactionsDataArray, \"csv\");\n\n    //Set the new transactions data\n    importTransactionsHandler(transactions);\n  };\n\n  const onTransactionDetailModalSubmit = (oldTransaction, updatedTransaction)=>{\n    updateTransactionHandler(oldTransaction, updatedTransaction);\n  };\n\n  const openTransactionsImportDuplicatesModal = ()=>{\n    setIsTransactionsImportDuplicatesModalOpen(true);\n  };\n\n  const closeTransactionsImportDuplicatesModal = ()=>{\n    setIsTransactionsImportDuplicatesModalOpen(false);\n  };\n\n  const onTransactionsImportDuplicatesModalSubmit = (filteredNewTransactions)=>{\n    //Close the modal\n    closeTransactionsImportDuplicatesModal();\n\n    //Open the confirmed imported transactions modal\n    setTransactionsImportConfirmedModalTransactions(filteredNewTransactions);\n    openTransactionsImportConfirmedModal();\n  };\n\n  const openTransactionsImportConfirmedModal = ()=>{\n    setIsTransactionsImportConfirmedModalOpen(true);\n  };\n\n  const closeTransactionsImportConfirmedModal = ()=>{\n    setIsTransactionsImportConfirmedModalOpen(false);\n  };\n\n  const onTransactionsImportConfirmedModalSubmit = confirmedTransactions=>{\n    //Update transactions with the new transaction\n    appendTransactionsHandler(confirmedTransactions);\n\n    //Close the modal\n    closeTransactionsImportConfirmedModal();\n  };\n\n  const onSignInChange = signInInfo=>{\n    setSignedInUser(signInInfo);\n  };\n\n  const saveSettings = savedSettings=>{\n    //Call the update function for each setting\n    Object.entries(savedSettings).forEach(([settingName, settingValue])=>\n      settings[settingName].update(settingValue)\n    );\n  };\n\n  const onSettingsViewSubmit = submittedSettings=>{\n    saveSettings(submittedSettings);\n  };\n\n  const openSignInSettingsModal = ()=>{\n    setIsSignInSettingsModalOpen(true);\n  };\n\n  const closeSignInSettingsModal = ()=>{\n    setIsSignInSettingsModalOpen(false);\n\n    //Re-attempt to initialize Google API again\n    connectToGoogleAPI();\n  };\n\n  const onSignInSettingsModalSubmit = submittedSettings=>{\n    saveSettings(submittedSettings);\n  };\n\n  const connectToGoogleAPI = async ()=>{\n    if(!gapiLoaded) return;\n\n    //Try to initialize the Google API\n    try {\n      initAuthorization(onSignInChange, onSignInChange);\n    }\n    catch (err) {\n      //If credentials weren't found, prompt the user for the credentials\n      if (err.name === \"CredentialsNotFoundError\") {\n        return openSignInSettingsModal();\n        // throw new Error(\"Failed to get authorization credentials.\");\n      }\n      console.log(\"test\")\n      return throwException(err);\n    }\n  };\n\n  const onBudgetCycleChange = budgetCycle=>{\n    setBudgetCycle(budgetCycle);\n  };\n\n\n  //If the user has not signed in, send them to the sign in page,\n  // and while the Google API is loading, disable the sign in button\n  if (!signedInUser) return (\n    <div className=\"App\">\n      <Router basename={(process.env.NODE_ENV === \"production\" ? process.env.PUBLIC_URL : null)}>\n        <SignInView isReadyForSignIn={!(signedInUser===undefined)}/>\n        <SignInSettingsModal settings={settings} isOpen={isSignInSettingsModalOpen} onClose={closeSignInSettingsModal} onSubmit={onSignInSettingsModalSubmit} />\n      </Router>\n    </div>\n  );\n\n  return (\n    <div className=\"App\">\n      <Router basename={(process.env.NODE_ENV === \"production\" ? process.env.PUBLIC_URL : null)}>\n      <Header signedInUser={signedInUser} />\n        <Switch>\n          <Route path={[\"/dashboard\", \"/\"]} exact>\n            <DashboardView signedInUser={signedInUser} transactions={transactions} accountsData={accountsData} accountData={accountData} budgetsData={budgetsData} budgetCycle={budgetCycle} onBudgetCycleChange={onBudgetCycleChange} setFooterNavbar={setFooterNavbar} />\n          </Route>\n          <Route path=\"/budgets\" exact>\n            <BudgetsView transactions={transactions} budgetsData={budgetsData} budgetCycle={budgetCycle} setFooterNavbar={setFooterNavbar} />\n          </Route>\n          <Route path=\"/transactions\" exact>\n            <TransactionsView transactions={transactions} budgetCycle={budgetCycle} transactionsImportDuplicatesModalNewTransactions={transactionsImportDuplicatesModalNewTransactions} transactionsImportDuplicatesModalDuplicates={transactionsImportDuplicatesModalDuplicates} isTransactionsImportDuplicatesModalOpen={isTransactionsImportDuplicatesModalOpen} onTransactionsImportDuplicatesModalClose={closeTransactionsImportDuplicatesModal} onTransactionsImportDuplicatesModalSubmit={onTransactionsImportDuplicatesModalSubmit} onTransactionsImportFormSubmit={onTransactionsImportFormSubmit} onTransactionsImportFormFileInputChange={onTransactionsImportFormFileInputChange} onTransactionDetailModalSubmit={onTransactionDetailModalSubmit} transactionsImportConfirmedModalTransactions={transactionsImportConfirmedModalTransactions} isTransactionsImportConfirmedModalOpen={isTransactionsImportConfirmedModalOpen} closeTransactionsImportConfirmedModal={closeTransactionsImportConfirmedModal} onTransactionsImportConfirmedModalSubmit={onTransactionsImportConfirmedModalSubmit} setFooterNavbar={setFooterNavbar} />\n          </Route>\n          <Route path=\"/settings\" exact>\n            <SettingsView setFooterNavbar={setFooterNavbar} settings={settings} onSubmit={onSettingsViewSubmit}/>\n          </Route>\n        </Switch>\n        <FooterNavbar active={footerNavbar} />\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","export const typeCheckAccountsData = accountsData=>{\r\n  return accountsData.map(accountData=>({\r\n      ...accountData,\r\n      Balance: (accountData.Balance ? Number(accountData.Balance) : null),\r\n    })\r\n  );\r\n};\r\n","export const typeCheckAccountData = accountData=>{\r\n  return accountData.map(data=>({\r\n    ...data,\r\n    CreditScore: (data.CreditScore ? Number(data.CreditScore) : null),\r\n    LastUpdated: (data.LastUpdated ? new Date(data.LastUpdated) : null),\r\n  }));\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}