{"version":3,"sources":["googleApi/utilities.js","googleApi/gapi.js","googleApi/authentication.js","utilities/transactions.js","utilities/utilities.js","utilities/budgetsData.js","utilities/budgetCycle.js","utilities/errorHandling.js","utilities/date.js","api/transactions.js","api/budgetsData.js","api/accountsData.js","api/accountData.js","hooks/useConsoleLog.js","hooks/useScript.js","hooks/useBudgetCycleTransactions.js","hooks/useBudgetCycleBudgets.js","components/Logo/index.js","components/GoogleApiSignInButton/index.js","components/SignInView/index.js","components/MonthPicker/index.js","components/DashboardBudgetCycleDropdown/index.js","components/DashboardTop/index.js","components/DashboardInsight/index.js","components/DashboardInsights/index.js","components/DashboardShowcase/index.js","components/DashboardView/index.js","components/BudgetGraphStatusIcon/index.js","components/BudgetGraph/index.js","components/BudgetsView/index.js","components/TransactionsImportForm/index.js","components/InputDropdown/index.js","components/TransactionsDataSearchForm/index.js","components/TransactionRowDateSeparator/index.js","components/TransactionRow/index.js","components/TransactionsData/index.js","components/TagBadge/index.js","components/TransactionDetailModalInput/index.js","components/TransactionDetailModal/index.js","components/TransactionDeleteModal/index.js","components/TransactionsImportDuplicatesModalDuplicateCheckbox/index.js","components/TransactionsImportDuplicatesModal/index.js","components/TransactionsImportConfirmedModal/index.js","components/TransactionsImportFormToggle/index.js","components/TransactionsView/index.js","components/SettingsInput/index.js","components/SettingsForm/index.js","components/SettingsView/index.js","components/FooterNavbar/index.js","components/SignInSettingsModal/index.js","components/GoogleApiUserButton/index.js","components/Header/index.js","components/App/index.js","utilities/accountsData.js","utilities/accountData.js","reportWebVitals.js","index.js"],"names":["getHeadersFromJSON","JSON","Array","reduce","headers","transaction","Object","keys","filter","key","includes","getSpreadsheetData","parse","localStorage","getItem","getSpreadsheetId","spreadsheetData","spreadsheetId","setSpreadsheetId","setItem","stringify","setSpreadsheetData","getCredentials","getClientId","creds","clientId","setClientId","credentials","newCreds","convertSheetsArraysToJSON","data","splice","map","line","obj","value","i","convertJSONToSheetsArray","object","header","isArray","join","getDynamicPropertyByArray","startingObject","dotSeparatedProperties","split","property","convertColumnNumberToColumnLetter","columnNumber","columnLettersArray","letter","Math","floor","push","reverse","convertColumnLetterToColumnNumber","columnLetters","number","columnLetter","indexOf","convertArrayToA1Notation","rowsColumnsArray","startingCell","startingColumnLetter","match","startingRow","Number","startingColumnIndex","rows","columns","rowNumber","parseGoogleSheetsNumber","potentialNumber","isNaN","parseGoogleSheetsDate","potentialDate","Date","getTime","callGoogleApiFunction","googleApi","resourceType","method","optionsParam","pageToken","leftoverIds","params","options","part","undefined","id","length","maxResults","Promise","resolve","reject","a","resource","window","gapi","client","response","console","log","result","nextPageToken","items","mine","values","error","getSheetsSpreadsheet","getSheetsSpreadsheetValues","sheetName","range","sheets","find","s","properties","title","gridProperties","rowCount","columnCount","r","updateSheetsSpreadsheetValues","valuesJSON","neededRowCount","neededColumnCount","maxCol","row","max","valueInputOption","includeValuesInResponse","responseValueRenderOption","scopes","discoveryDocs","initAuthorization","loginCallback","logoutCallback","info","CredentialsNotFoundError","Error","name","err","fetchAuthCredentials","loadGoogleApis","throwException","load","initializeGoogleApis","init","scope","then","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","get","catch","signInInfo","getProfileInformation","signIn","signOut","profile","currentUser","getBasicProfile","getId","getName","firstName","getGivenName","lastName","getFamilyName","imageUrl","getImageUrl","emailAddress","getEmail","importTransactions","transactionsData","dataType","importDate","transactionDataLine","warn","transactions","newTransactionDataParts","isMatch","convertDateStringToDate","replace","newTransactionDataPart","isNewTransaction","newTransactionData","Description","TransactionDate","Amount","PostedDate","AccountNumber","Type","DescriptionDisplay","Category","Notes","Tags","BudgetCycle","IsAutoCategorized","IsUpdatedByUser","DateCreated","DateModified","getBudgetCycleFromDate","concat","csvData","convertCSVToJSON","flat","_Date","trim","TransactionType","amountRegEx","Charges","Payments","Debit","Credit","amountIsNegative","amount","type","transactionDate","nullCoalesce","isFalsy","entries","getTransactionDefaultDescriptionDisplay","formatTransactionDisplay","getBudgetCycleString","toLocaleDateString","timeZone","toString","convertNumberToCurrency","isTransactionDuplicate","potentialDuplicate","areObjectsEqual","toJSON","isTransactionAutoCategorizedOrUpdatedByUser","getTransactionsAmountTotal","total","arguments","accumulator","toFixed","p0","csv","delimiter","lineObj","forEach","getSumByProp","array","prop","sum","item","b","typeofA","aValues","bValues","aKey","aValue","bKey","bValue","isDescendantOf","element","potentialParent","parentElement","matchValueAgainstValue","matchedValue","escapedMatchedValue","RegExp","getBudgetAmountSpentFromTransactions","budgetName","isCreditCardPaymentTransaction","isIncomeTransaction","check","date","UTC","getUTCFullYear","getUTCMonth","ALL_TRANSACTIONS_BUDGET_CYCLE","getBudgetCycleFromBudgetCycleString","budgetCycleString","monthString","yearString","year","month","getNumberFromMonth","budgetCycle","isAllTransactionsBudgetCycle","getMonthFromNumber","getBudgetCycleDescription","todayBudgetCycle","fullYearDifference","monthDifference","abs","yearDifference","getAllBudgetCycles","Set","getBudgetCyclesFromTransactions","sort","epochTime","throwEx","alertWindow","exception","errorMsg","message","description","fileName","lineNumber","stack","exceptionMsg","alert","dateString","dateStringFormat","yearFormatRegEx","monthFormatRegEx","dayFormatRegEx","getDatePartByFormat","datePartFormatRegex","getDatePartCallback","matchAll","matchStartingIndex","index","matchedFormat","matchEndingIndex","substring","yearFormat","monthFormat","convertDateToFullLocaleDateString","getUTCDate","getTransactions","updateTransactions","getBudgetsData","getAccountsData","getAccountData","useConsoleLog","args","useEffect","slice","useScript","src","useState","isLoaded","setIsLoaded","script","document","createElement","async","option","addEventListener","event","body","appendChild","removeChild","isTransactionWithinBudgetCycle","useBudgetCycleTransactions","isPaymentTransaction","isTransferWithCorrespondingNegativeTransfer","transaction2","isIncome","getCurrentBudgetCycleIncomeTransactions","getCurrentBudgetCycleExpenseTransactions","isExpenseTransaction","getBudgetCycleTransactions","currentBudgetCycleTransactions","lastBudgetCycleIncomeTransactions","getLastBudgetCycleIncomeTransactions","currentBudgetCycleIncomeTransactions","currentBudgetCycleExpenseTransactions","budgetCycleTransactionsReturn","income","expenses","this","budgetCycleTransactions","setBudgetCycleTransactions","useBudgetCycleBudgets","budgetsData","getBudgetCycleBudgets","filteredBudgets","budgetCycleBudgets","setBudgetCycleBudgets","Logo","light","scrollIn","onLogoTextScrollIn","isLogoTextScrolledIn","setIsLogoTextScrolledIn","isLoadingAnimationComplete","setIsLoadingAnimationComplete","isLoadingAnimationCompleteTimeout","useRef","textScrollInTimeout","logoText","current","setTimeout","clearTimeout","className","to","ref","GoogleApiSigninButton","isReadyForSignIn","onClick","disabled","SignInView","MonthPicker","initialValue","onChangeProp","onChange","isValidInitialDate","onToggle","MIN_DATE","MAX_DATE","currentDate","startingValue","setValue","selectedYear","setSelectedYear","selectedMonth","setSelectedMonth","isInYearView","setIsInYearView","yearRangeMin","setYearRangeMin","isOpen","setIsOpen","setSelectedYearWrapper","ceil","previousSelectedYear","min","isGrayedYear","setYearRangeMinWrapper","previousYearRangeMin","onArrowClick","increment","target","getAttribute","datePart","newSelection","newValue","getMonthAsDate","previousIsOpen","data-increment","fill","el","y","data-datepart","data-year","monthIndex","data-month","DashboardBudgetCycleDropdown","allBudgetCycles","squashed","arrowOnClick","allBudgetCyclesSorted","newBudgetCycle","data-bs-toggle","aria-expanded","epochTimeAttribute","data-budget-cycle","DashboardTop","accountData","accountsData","onBudgetCycleChange","currentBudgetCycleRemaining","t","getLastUpdatedDate","LastUpdated","record","CreditScore","DashboardInsight","insight","insightTypeIconClass","iconClass","text","DashboardInsights","insights","setInsights","all","budgetCycleBudgetsWithSpent","Spent","Name","incomeExpected","budgetData","incomeUnderEarned","previousInsights","budgetsOver","budgetDataWithSpent","personalSpendingBudget","personalSpendingBudgetLeft","overspentBillsWithSpent","budgetWithSpent","overspentBillWithSpent","bill","amountSpent","totalIncome","totalExpenses","remainingBillsToBePaid","leftoverPaidBillsMoney","remainingSavingsToBeSaved","remainingFlexibleSpendingMoney","savingsBudgetData","savingsBudgetLeft","runInsights","DashboardShowcase","budgetCycleStatuses","heading","test","isCurrentBudgetCycle","isPastBudgetCycle","isFutureBudgetCycle","getBudgetCycleStatus","status","budgetCycleStatus","setBudgetCycleStatus","DashboardView","signedInUser","setFooterNavbar","route","useLocation","pathname","BudgetGraphStatusIcon","iconText","iconColor","budget","overBudget","overEarned","BudgetGraph","isExpenseBudget","style","color","backgroundColor","width","left","right","BudgetsView","TransactionsImportForm","onSubmitProp","onSubmit","onFileInputChangeProp","onFileInputChange","scrapedTransactionsData","setScrapedTransactionsData","onTransactionsImportFormFileInputChange","preventDefault","transactionsDataFiles","files","transactionsDataArray","file","fileContent","scrapedTransactionsDataValue","scrapedText","accept","multiple","InputDropdown","props","initialItems","placeholder","tabIndex","inputDropdownInputRef","inputDropdownInputListeners","propName","propValue","matches","acc","filterListItems","searchFilter","setStartingValue","setSearchFilter","filteredListItems","setFilteredListItems","selectedListItem","setSelectedListItem","isInputDropdownOpen","setIsInputDropdownOpen","wasInputDropdownOpen","setWasInputDropdownOpen","inputDropdownListRef","inputDropdownRef","addInputDropdownListItemSelection","getInputDropdownListItemFilteredText","openInputDropdown","previouslyOpen","closeInputDropdown","onInputDropdownListItemMouseDown","innerText","isSelectedListItem","onInputDropdownListItemMouseMove","newSelectedListItem","newFilteredListItems","selectedListItemNode","querySelectorAll","selectedListItemNodeRect","getBoundingClientRect","inputDropdownListViewport","topIsBelowNotAboveViewportTop","top","bottomIsAboveNotBelowViewportBottom","bottom","scroll","scrollTop","checkInputDropdownListSelectionScroll","checkIfClickedOrFocusedOutsideOfDropdown","removeEventListener","inputDropdownInput","closest","onKeyDown","keyCode","newSelectedListItemIndex","upOrDown","wrapAround","onBlur","autoComplete","onInputDropdownInputChange","onFocus","onInputDropdownInputFocus","onMouseLeave","onMouseDown","onMouseMove","dangerouslySetInnerHTML","__html","TransactionsDataSearchForm","transactionProperties","searchFilters","onFilterClickProp","onFilterClick","search","setSearch","activeSearchSuggestion","setActiveSearchSuggestion","transactionsDataSearchFormInput","searchValue","escapedSearch","getUniqueTransactionsPropertiesValues","p","getSearchSuggestions","newSearch","focus","onInputDropdownInputKeyDown","searchKey","TransactionRowDateSeparator","count","TransactionRow","onTransactionEditButtonClickProp","onTransactionEditButtonClick","onTransactionDeleteButtonClickProp","onTransactionDeleteButtonClick","startingX","setStartingX","startingTouch","setstartingTouch","translateX","setTranslateX","stickyX","setStickyX","isBeingDragged","setIsBeingDragged","isFirstDrag","setIsFirstDrag","isScrollingNotDragging","setIsScrollingNotDragging","maxNecessaryDragX","isDragFeatureActive","transactionDisplay","setTransactionDisplay","formattedTransactionDisplay","onTouchMove","touch","touches","dragDistanceX","clientX","dragDistanceY","clientY","potentialNewTranslateX","setStickyXWrapper","transactionRow","onOutsideTouchStart","passive","transform","onTouchStart","onTouchEnd","TransactionsDataRows","currentDateRendered","filteredBudgetCycleTransactions","dateHeaderObject","Count","TransactionsData","filterTransactionsBySearchFilters","filterBudgetCycleTransactions","every","newlyFilteredBudgetCycleTransactions","defineProperty","getOwnPropertyDescriptor","setSearchFilters","setFilteredBudgetCycleTransactions","filteredRemainingTotal","searchObject","previousSearchFilters","removedSearchFilter","newSearchFilters","TagBadge","tag","TransactionDetailModalInput","transactionDetail","onKeyPress","onTagBadgeClick","tagType","onInputDropdownInputKeyPress","TransactionDetailModal","categories","types","buttonsOptions","onClose","setBudgetCycle","setPostedDate","setTransactionDate","setAccountNumber","setAmount","setDescription","setDescriptionDisplay","setCategory","setType","setNotes","setTags","transactionDetails","setState","onTransactionDetailInputKeyPress","transactionDetailInput","classList","contains","Modal","show","onHide","Header","Title","transactionModalForm","formattedTransaction","updatedTransaction","Body","onTransactionDetailInputChange","Footer","TransactionsImportDuplicatesModalDuplicateCheckbox","duplicateData","checked","confirmed","updatedDuplicateData","htmlFor","duplicate","TransactionsImportDuplicatesModal","newTransactions","duplicates","getDuplicatesDataFromDuplicates","duplicatesData","setDuplicatesData","onTransactionsImportDuplicatesModalDuplicateCheckboxChange","oldDuplicateData","newDuplicateData","previousDuplicatesData","newDuplicatesData","data-bs-dismiss","confirmedDuplicates","filteredNewTransactions","newTransaction","TransactionsImportConfirmedModal","longestTransactionDate","longestAmount","longestDescription","transactionDateString","amountString","descriptionString","transactionDateSpaces","amountSpaces","descriptionSpaces","TransactionsImportFormToggle","TransactionsView","transactionsImportDuplicatesModalNewTransactions","transactionsImportDuplicatesModalDuplicates","isTransactionsImportDuplicatesModalOpen","onTransactionsImportDuplicatesModalClose","onTransactionsImportDuplicatesModalSubmit","onTransactionsImportFormSubmitProp","onTransactionsImportFormSubmit","onTransactionsImportFormFileInputChangeProp","onTransactionDetailModalSubmitProp","onTransactionDetailModalSubmit","onTransactionDeleteModalSubmitProp","onTransactionDeleteModalSubmit","transactionsImportConfirmedModalTransactions","isTransactionsImportConfirmedModalOpen","closeTransactionsImportConfirmedModal","onTransactionsImportConfirmedModalSubmit","transactionCategories","transactionTypes","isTransactionImportFormOpen","setIsTransactionImportFormOpen","transactionDetailModalTransaction","setTransactionDetailModalTransaction","isTransactionDetailModalOpen","setIsTransactionDetailModalOpen","transactionDeleteModalTransaction","setTransactionDeleteModalTransaction","isTransactionDeleteModalOpen","setIsTransactionDeleteModalOpen","closeTransactionDetailModal","closeTransactionDeleteModal","wasOpen","deletedTransaction","SettingsInput","setting","setName","SettingsForm","settings","submittedSettings","SettingsView","FooterNavbar","active","footerNavbar","activePath","process","navItems","activeItem","navItem","remove","add","setActiveItem","SignInSettingsModal","role","GoogleApiUserButton","alt","aria-labelledby","App","setTransactions","setBudgetsData","setAccountsData","setAccountData","setTransactionsImportDuplicatesModalNewTransactions","setTransactionsImportDuplicatesModalDuplicates","setIsTransactionsImportDuplicatesModalOpen","setTransactionsImportConfirmedModalTransactions","setIsTransactionsImportConfirmedModalOpen","setSignedInUser","isSignInSettingsModalOpen","setIsSignInSettingsModalOpen","update","setAllBudgetCycles","gapiLoaded","saveSettings","savedSettings","settingName","settingValue","connectToGoogleAPI","onSignInChange","openSignInSettingsModal","setTransactionsHandler","previousTransactions","callback","oldTransaction","transactionsArray","typeCheckedTransactions","typeCheckTransactions","phrase","categorizedTransactionData","toLowerCase","word","toUpperCase","categorizeTransactionByDescription","setTransactionsWrapper","importTransactionsWrapper","openTransactionsImportDuplicatesModal","openTransactionsImportConfirmedModal","checkTransactionsForDuplicates","setBudgetsDataWrapper","newBudgetsData","previousBudgetsData","typeCheckBudgetsData","setAccountsDataWrapper","newAccountsData","previousAccountsData","Balance","typeCheckAccountsData","setAccountDataWrapper","newAccountData","previousAccountData","typeCheckAccountData","closeTransactionsImportDuplicatesModal","basename","path","exact","updateTransactionWrapper","deleteTransactionWrapper","confirmedTransactions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cd43be3f.chunk.js","sourcesContent":["//Private Functions\r\nconst getHeadersFromJSON = JSON=>{\r\n  if (!JSON instanceof Array) JSON = [JSON];\r\n  return JSON.reduce((headers, transaction)=>\r\n    [\r\n      ...headers,\r\n      ...Object.keys(transaction).filter(key=>!headers.includes(key))\r\n    ]\r\n  , []);\r\n};\r\n\r\n//Public functions\r\nexport const getSpreadsheetData = ()=>{\r\n  return JSON.parse(localStorage.getItem(\"spreadsheet-data\"));\r\n};\r\n\r\nexport const setSpreadsheetData = spreadsheetData=>{\r\n  return localStorage.setItem(\"spreadsheet-data\", JSON.stringify(spreadsheetData));\r\n};\r\n\r\nexport const getSpreadsheetId = ()=>{\r\n  const spreadsheetData = getSpreadsheetData();\r\n  return (spreadsheetData ? spreadsheetData.spreadsheetId : null);\r\n};\r\n\r\nexport const setSpreadsheetId = spreadsheetId=>{\r\n  const spreadsheetData = getSpreadsheetData() || {};\r\n  const newSpreadsheetData = {\r\n    ...spreadsheetData,\r\n    spreadsheetId,\r\n  };\r\n  return setSpreadsheetData(newSpreadsheetData);\r\n};\r\n\r\nexport const getCredentials = ()=>{\r\n  return JSON.parse(localStorage.getItem(\"creds\"));\r\n};\r\n\r\nexport const setCredentials = credentials=>{\r\n  return localStorage.setItem(\"creds\", JSON.stringify(credentials));\r\n};\r\n\r\nexport const getClientId = ()=>{\r\n  const creds = getCredentials();\r\n  return (creds ? creds.clientId : null);\r\n};\r\n\r\nexport const setClientId = clientId=>{\r\n  const creds = getCredentials() || {};\r\n  const newCreds = {\r\n    ...creds,\r\n    clientId,\r\n  };\r\n  return setCredentials(newCreds);\r\n};\r\n\r\nexport const convertSheetsArraysToJSON = (data, delimiter=\",\")=>{\r\n  if (!data) return null;\r\n\r\n  //Get the object keys\r\n  const keys = data.splice(0,1)[0];\r\n\r\n  //Return the data\r\n  return data.map(line=>\r\n    line.reduce((obj, value, i)=>\r\n      ({\r\n        ...obj,\r\n        [keys[i]]: (\r\n          value === \"\" ?\r\n          null :\r\n          (value === \"TRUE\" ? true : (value === \"FALSE\" ? false : value))\r\n        ),\r\n      })\r\n  , {})\r\n  );\r\n};\r\n\r\nexport const convertJSONToSheetsArray = (JSON, delimiter=\",\")=>{\r\n  if (!JSON) return null;\r\n\r\n  const headers = getHeadersFromJSON(JSON);\r\n\r\n  return [\r\n    headers,\r\n    ...JSON.map(object=>\r\n      headers.map(header=>(\r\n        object[header] === null ?\r\n        \"\" :\r\n        (Array.isArray(object[header]) ? object[header].join(\",\") : object[header]))\r\n      )\r\n    )\r\n  ];\r\n};\r\n\r\nexport const getDynamicPropertyByArray = (startingObject, dotSeparatedProperties)=>{\r\n  if (!(typeof dotSeparatedProperties === \"string\")) return null;\r\n  if(!dotSeparatedProperties) return startingObject;\r\n  if (!dotSeparatedProperties.includes(\".\")) return startingObject[dotSeparatedProperties];\r\n\r\n  let object = startingObject;\r\n  for(let property of dotSeparatedProperties.split(\".\")) {\r\n    if (!property) continue;\r\n    object = object[property];\r\n  }\r\n  return object;\r\n};\r\n\r\nexport const convertColumnNumberToColumnLetter = columnNumber=>{\r\n  const NUM_OF_LETTERS = 26;\r\n  const columnLettersArray = [];\r\n\r\n  //Decrement the column number by 1 (1-based, not 0-based)\r\n  columnNumber--;\r\n\r\n  for(;columnNumber >= 0;columnNumber=(columnNumber/NUM_OF_LETTERS)-1) {\r\n    const index = Math.floor(columnNumber % NUM_OF_LETTERS);\r\n    const letter = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"[index];\r\n    columnLettersArray.push(letter);\r\n  }\r\n\r\n  //Return back the \"reversed\" column letters\r\n  return columnLettersArray.reverse().join(\"\");\r\n};\r\n\r\nexport const convertColumnLetterToColumnNumber = columnLetters=>{\r\n  const NUM_OF_LETTERS = 26;\r\n\r\n  const columnNumber = [...columnLetters].reduce((number,columnLetter,i)=>{\r\n    const index = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".indexOf(columnLetter);\r\n\r\n    //Increment the column number by 1 (1-based, not 0-based)\r\n    return number += (index+1) * (NUM_OF_LETTERS**i);\r\n  }, 0);\r\n\r\n  //Return back the \"reversed\" column letters\r\n  return columnNumber;\r\n};\r\n\r\nexport const convertArrayToA1Notation = (rowsColumnsArray, startingCell=\"A1\")=>{\r\n  const startingColumnLetter = startingCell.match(/(^[A-Z]+)/)[1];\r\n  const startingRow = Number(startingCell.match(/(\\d)/)[1]);\r\n  const startingColumnIndex = convertColumnLetterToColumnNumber(startingColumnLetter);\r\n\r\n  const [rows, columns] = rowsColumnsArray;\r\n  const columnLetter = convertColumnNumberToColumnLetter(startingColumnIndex+columns-1);\r\n  const rowNumber = startingRow+rows-1;\r\n  return `${startingCell}:${columnLetter}${rowNumber}`;\r\n};\r\n\r\nexport const parseGoogleSheetsNumber = value=>{\r\n  const potentialNumber = Number(value);\r\n  return (value && !isNaN(potentialNumber) ? potentialNumber : null);\r\n};\r\n\r\nexport const parseGoogleSheetsDate = JSON=>{\r\n  const potentialDate = new Date(JSON);\r\n  return (JSON && !isNaN(potentialDate.getTime()) ? potentialDate : null);\r\n};\r\n","import {getSpreadsheetId, convertSheetsArraysToJSON, convertJSONToSheetsArray, getDynamicPropertyByArray, convertArrayToA1Notation} from './utilities.js'\r\n\r\nexport const callGoogleApiFunction = (googleApi, resourceType, method, optionsParam, pageToken)=>{\r\n  //Declare variables\r\n  let leftoverIds = null;\r\n  const listIdChunkLength = 50;\r\n  let params = [];\r\n  let options = optionsParam;\r\n\r\n  //Build the request options\r\n  if (googleApi === \"youtube\") {\r\n    options = {\r\n      ...optionsParam,\r\n      part: [\r\n        \"snippet\",\r\n        \"contentDetails\",\r\n        \"status\",\r\n      ],\r\n    };\r\n  }\r\n\r\n  //Check that, if provided SOMETHING as an id,\r\n  // it wasn't falsy\r\n  if (\r\n    options.id !== undefined &&  (\r\n      options.id === null ||\r\n      options.id.length === 0\r\n    )\r\n  ) return null;\r\n\r\n  //If this was a \"list\" call, add extra options\r\n  if (method === \"list\") {\r\n    //Set the maximum amount of results per call\r\n    options.maxResults = 50;\r\n\r\n    //Only set the pageToken option if we're provided one\r\n    if (pageToken) options.pageToken = pageToken;\r\n\r\n    //Check that no more than 50 ids are searched per call;\r\n    // Otherwise, query the first 50, and save the rest for\r\n    // a follow-up call\r\n    if (options.id && options.id instanceof Array && options.id.length > 50) {\r\n      leftoverIds = options.id.splice(listIdChunkLength, options.id.length);\r\n    }\r\n  }\r\n\r\n  //If more parameters were found in options, move them over\r\n  if (options.params) {\r\n    params = (options.params instanceof Array ? options.params : [options.params]);\r\n    delete options.params;\r\n  }\r\n\r\n  //Return a Promise to the Google API\r\n  return new Promise(async (resolve,reject)=>{\r\n    try {\r\n      //Get the resource object\r\n      const resource = getDynamicPropertyByArray(window.gapi.client[googleApi], resourceType);\r\n\r\n      //Make the resource method call\r\n      const response = await resource[method](options, ...params);\r\n      console.log(response);\r\n\r\n      //If a \"list\" query was performed\r\n      if (method === \"list\") {\r\n        //If there are more results, recurse using the nextPageToken\r\n        if (response.result.nextPageToken) return resolve([...response.result.items, ...await callGoogleApiFunction(googleApi, resourceType, method, options, response.result.nextPageToken)]);\r\n\r\n        //If more than 50 ids were provided,\r\n        // move to the next set of ids\r\n        if (leftoverIds) return resolve([...response.result.items, ...await callGoogleApiFunction(googleApi, resourceType, method, {...options, id: leftoverIds})]);\r\n\r\n        //If a single id was provided instead of an arary,\r\n        // respond with the single resource using the first item of\r\n        // response.result.items, instead of the array of items\r\n        if ((options.id && !(options.id instanceof Array)) || (resourceType === \"channels\" && options.mine === true)) return resolve(response.result.items[0]);\r\n\r\n        //Otherrwise, return the entire array of items\r\n        return resolve([...response.result.items]);\r\n      }\r\n\r\n      if (resourceType === \"spreadsheets.values\" && method === \"get\") {\r\n        //Return the values\r\n        return resolve(convertSheetsArraysToJSON(response.result.values));\r\n      }\r\n\r\n      //If an \"update\" or \"insert\" query was performed\r\n      if (method === \"update\" || method === \"insert\") return resolve(response.result);\r\n\r\n      //If a \"delete\" or some other query was performed\r\n      return resolve(response);\r\n    }\r\n    catch (errResponse) {\r\n      return reject(errResponse.result.error);\r\n    }\r\n  });\r\n};\r\n\r\n//Declare our specific functions\r\nexport const getSheetsSpreadsheet = async ()=>{\r\n  return callGoogleApiFunction(\"sheets\", \"spreadsheets\", \"get\", {spreadsheetId: getSpreadsheetId()});\r\n};\r\n\r\nexport const getSheetsSpreadsheetValues = async (sheetName, range)=>{\r\n  const {rowCount, columnCount} = (await getSheetsSpreadsheet()).result.sheets.find(s=>s.properties.title === sheetName).properties.gridProperties;\r\n  if (!range) range = convertArrayToA1Notation([rowCount, columnCount]);\r\n  if (typeof range === \"string\") range = [range]; //convert to an array of ranges if only one specified\r\n  range = range.map(r=>`'${sheetName}'!${range}`); //Add the sheet name to the range\r\n\r\n  return callGoogleApiFunction(\"sheets\", \"spreadsheets.values\", \"get\", {spreadsheetId: getSpreadsheetId(), range});\r\n};\r\n\r\nexport const updateSheetsSpreadsheetValues = async (sheetName, valuesJSON, range)=>{\r\n  const values = convertJSONToSheetsArray(valuesJSON);\r\n  const neededRowCount = values.length;\r\n  const neededColumnCount = values.reduce((maxCol,row)=>maxCol = Math.max(maxCol,row.length), 0);\r\n  if (!range) range = convertArrayToA1Notation([neededRowCount, neededColumnCount]);\r\n  if (typeof range === \"string\") range = [range]; //convert to an array of ranges if only one specified\r\n  range = range.map(r=>`'${sheetName}'!${range}`); //Add the sheet name to the range\r\n\r\n  return callGoogleApiFunction(\"sheets\", \"spreadsheets.values\", \"update\", {\r\n      spreadsheetId: getSpreadsheetId(),\r\n      range,\r\n      valueInputOption: \"USER_ENTERED\",\r\n      includeValuesInResponse: true,\r\n      responseValueRenderOption: \"FORMATTED_VALUE\",\r\n      resource: {\r\n        values: values,\r\n      }\r\n    });\r\n};\r\n","import {throwException} from './../utilities';\r\n\r\nconst scopes = [\r\n  //\"https://www.googleapis.com/auth/drive\",  //See, edit, create, and delete all or your drive files\r\n  //\"https://www.googleapis.com/auth/drive.file\",  //See, edit, create, and delete only the specific Google Drive files you use with this app\r\n  \"https://www.googleapis.com/auth/spreadsheets\",  //See, edit, create, all your Google sheets spreadsheets\r\n];\r\nconst discoveryDocs = [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"];\r\n\r\n//create helper function to retrieve authorization credentials stored outside of version control\r\nconst fetchAuthCredentials = ()=>{\r\n  console.info(\"Fetching authorization credentials...\");\r\n\r\n  try {\r\n    //Get & return the credentials from localStorage\r\n    const creds = JSON.parse(localStorage.getItem(\"creds\"));\r\n    if (creds && creds.clientId) return creds;\r\n\r\n    //If proper credentials weren't found, throw\r\n    const CredentialsNotFoundError = new Error(\"Failed to get authorization credentials.\")\r\n    CredentialsNotFoundError.name = \"CredentialsNotFoundError\";\r\n    throw CredentialsNotFoundError;\r\n  }\r\n  catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\n//Load the Google Client, OAuth2.0 libraries\r\nexport const initAuthorization = (loginCallback, logoutCallback)=>{\r\n  try {\r\n    //Attempt to get the credentials\r\n    const creds = fetchAuthCredentials();\r\n\r\n    //Load the Google APIs\r\n    loadGoogleApis(creds, loginCallback, logoutCallback)\r\n\r\n    return creds;\r\n  }\r\n  catch (err) {\r\n    return throwException(err);\r\n  }\r\n};\r\n\r\nconst loadGoogleApis = (creds, loginCallback, logoutCallback)=>{\r\n  try {\r\n    console.info(\"Loading Google Client, OAuth2.0 APIs...\");\r\n    window.gapi.load(\"client:auth2\", ()=>{initializeGoogleApis(creds, loginCallback, logoutCallback)});\r\n  }\r\n  catch (err) {\r\n    return throwException(err);\r\n  }\r\n};\r\n\r\n//Initialize Google Client library (which simultaneously initializes Google OAuth2.0 library) and set up sign in listeners\r\nconst initializeGoogleApis = async (creds, loginCallback, logoutCallback)=>{\r\n  console.info(\"Loaded Google Client, OAuth2.0 APIs.\");\r\n  console.info(\"Initializing Google Client API...\");\r\n  const {clientId} = creds;\r\n\r\n  //Attempt to initialize the Google API\r\n  window.gapi.client.init({\r\n    clientId: clientId,\r\n    scope: scopes.join(\" \"), //space delimited\r\n    discoveryDocs: discoveryDocs,\r\n  })\r\n  .then(()=>{\r\n    console.info(\"Initialized Google Client API.\");\r\n\r\n    //Listen for sign in state changes\r\n    window.gapi.auth2.getAuthInstance().isSignedIn.listen(\r\n      isSignedIn => updateSigninStatus(isSignedIn, loginCallback, logoutCallback)\r\n    );\r\n\r\n    //Handle initial sign in state\r\n    updateSigninStatus(window.gapi.auth2.getAuthInstance().isSignedIn.get(), loginCallback, logoutCallback);\r\n  })\r\n  .catch(err=>{\r\n    return throwException(err);\r\n  });\r\n};\r\n\r\n//Update UI sign in state changes\r\nconst updateSigninStatus = (isSignedIn, loginCallback, logoutCallback)=>{\r\n  console.info(\"Updating sign in status...\");\r\n  if (isSignedIn) {\r\n    // authorizeButton.style.display = \"none\";\r\n    // signoutButton.style.display = \"block\";\r\n    // signoutButton.removeAttribute(\"disabled\");\r\n\r\n    //Get profile information\r\n    const signInInfo = getProfileInformation();\r\n\r\n    //Run the callback functions\r\n    if (loginCallback) loginCallback(signInInfo);\r\n  }\r\n  else {\r\n    // authorizeButton.style.display = \"block\";\r\n    // signoutButton.style.display = \"none\";\r\n\r\n    //Run the callback functions\r\n    if (logoutCallback) logoutCallback(null);\r\n  }\r\n  console.info(\"Updated sign in status.\");\r\n};\r\n\r\nexport const signIn = async ()=>{\r\n  try {\r\n    await window.gapi.auth2.getAuthInstance().signIn();\r\n  }\r\n  catch (err) {\r\n    return throwException(err, false, false);\r\n  }\r\n};\r\n\r\nexport const signOut = async ()=>{\r\n  try {\r\n    await window.gapi.auth2.getAuthInstance().signOut();\r\n  }\r\n  catch (err) {\r\n    return throwException(err, false, false);\r\n  }\r\n};\r\n\r\nconst getProfileInformation = ()=>{\r\n  console.info(\"Getting profile info...\");\r\n  const profile = window.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile();\r\n  if (!profile) return null;\r\n  return {\r\n    id: profile.getId(),\r\n    name: profile.getName(),\r\n    firstName: profile.getGivenName(),\r\n    lastName: profile.getFamilyName(),\r\n    imageUrl: profile.getImageUrl(),\r\n    emailAddress: profile.getEmail(),\r\n  };\r\n};\r\n","import {isFalsy, nullCoalesce, convertNumberToCurrency, convertCSVToJSON, convertDateStringToDate, areObjectsEqual, getBudgetCycleFromDate, getBudgetCycleString} from './../utilities';\r\nimport {parseGoogleSheetsNumber, parseGoogleSheetsDate} from './../googleApi';\r\n\r\n//Declare private functions\r\nconst toPascalCase = phrase=>{\r\n  return phrase.split(\" \").map(word=>word[0].toUpperCase() + word.substring(1).toLowerCase()).join(\" \");\r\n};\r\n\r\n//Declare public functions\r\nexport const typeCheckTransactions = function (transactions) {\r\n  return transactions.map(transaction=>{\r\n    try {\r\n      return {\r\n        ...transaction,\r\n        PostedDate: parseGoogleSheetsDate(transaction.PostedDate),\r\n        TransactionDate: parseGoogleSheetsDate(transaction.TransactionDate),\r\n        Amount: parseGoogleSheetsNumber(isNaN(transaction.Amount) ? transaction.Amount.replace(/(\\$|,)/g, \"\") : transaction.Amount),\r\n        Tags: !isFalsy(transaction.Tags) ? transaction.Tags : [],\r\n        BudgetCycle: parseGoogleSheetsDate(transaction.BudgetCycle),\r\n        DateCreated: parseGoogleSheetsDate(transaction.DateCreated),\r\n        DateModified: parseGoogleSheetsDate(transaction.DateModified),\r\n      };\r\n    }\r\n    catch (err) {\r\n      console.error(transaction);\r\n      throw err;\r\n    }\r\n  });\r\n};\r\n\r\nexport const importTransactions = function(transactionsData, dataType) {\r\n  try {\r\n    //Get the current date\r\n    const importDate = new Date();\r\n\r\n    //if this is scraped from online app\r\n    if (dataType === \"scraped\") {\r\n      return transactionsData\r\n        /* Break out the text data into an Array of data lines */\r\n        .split(/(?:\\r\\n|\\r|\\n)/)\r\n        /* Filter out invalid transaction data lines */\r\n        .filter(transactionDataLine=>{\r\n          if (\r\n            !transactionDataLine ||\r\n            transactionDataLine.match(/(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{2}, \\d{4}/) ||\r\n            transactionDataLine.match(/Posted Balance: \\$[\\d,\\.]+/) ||\r\n            transactionDataLine.match(/^- view details for/)\r\n          ) {\r\n            console.warn(`Unable to read transaction line.\\r\\n${transactionDataLine}`);\r\n            return false;\r\n          }\r\n          return true;\r\n        })\r\n        /* Reduce the transaction data lines into composite transactions objects */\r\n        .reduce((transactions, transactionDataLine, i)=>{\r\n          //Make an array of the different pieces of\r\n          // transaction data this line could represent\r\n          const newTransactionDataParts = [\r\n            {\r\n              name: \"Description\",\r\n              isMatch: transactionDataLine.match(/(.+)/),\r\n              value: (transactionDataLine.match(/(.+)/) ? transactionDataLine.match(/(.+)/)[1] : null),\r\n            },\r\n            {\r\n              name: \"TransactionDate\",\r\n              isMatch: transactionDataLine.match(/(\\d{2}\\/\\d{2}\\/\\d{4})/),\r\n              value: (transactionDataLine.match(/(\\d{2}\\/\\d{2}\\/\\d{4})/) ? convertDateStringToDate(transactionDataLine.match(/(\\d{2}\\/\\d{2}\\/\\d{4})/)[1], \"MM/dd/yyyy\") : null),\r\n            },\r\n            {\r\n              name: \"Amount\",\r\n              isMatch: transactionDataLine.match(/(-?)\\$([\\d,]+\\.\\d{2})/),\r\n              value: (transactionDataLine.match(/(-?)\\$([\\d,]+\\.\\d{2})/) ? Number(`${transactionDataLine.match(/(-?)\\$([\\d,]+\\.\\d{2})/)[1]}${transactionDataLine.match(/(-?)\\$([\\d,]+\\.\\d{2})/)[2].replace(\",\",\"\")}`) : null),\r\n            },\r\n          ];\r\n\r\n          //Determine which piece of transaction data this line represents,\r\n          // based on the transaction data line number\r\n          const newTransactionDataPart = newTransactionDataParts[i%newTransactionDataParts.length];\r\n\r\n          //Determine whether this is a new transaction's data,\r\n          // based on the transaction data line number\r\n          const isNewTransaction = i%newTransactionDataParts.length===0;\r\n\r\n          //If the line doesn't match the expected transaction data regex,\r\n          // skip this transaction line with a warning\r\n          if(!newTransactionDataPart.isMatch) {\r\n            console.warn(`Unable to read transaction line.\\r\\n${transactionDataLine}`);\r\n            return transactions;\r\n          }\r\n\r\n          //Initialize the transaction data variables as all null,\r\n          // with the exception of the current data line\r\n          const newTransactionData = {\r\n            Description: null,\r\n            TransactionDate: null,\r\n            Amount: null,\r\n            [newTransactionDataPart.name]: newTransactionDataPart.value,\r\n          };\r\n\r\n          //Either build a new transaction object if this is a new transaction's data,\r\n          // or use a previously built one if still on the previous transaction's data\r\n          const transaction = (\r\n            !isNewTransaction ?\r\n            transactions[transactions.length-1] :\r\n            {\r\n              PostedDate: null,\r\n              TransactionDate: newTransactionData.TransactionDate,\r\n              AccountNumber: null,\r\n              Type: null,\r\n              Description: newTransactionData.Description,\r\n              DescriptionDisplay: null,\r\n              Amount: newTransactionData.Amount,\r\n              Category: null,\r\n              Notes: null,\r\n              Tags: [],\r\n              BudgetCycle: null,\r\n              IsAutoCategorized: false,\r\n              IsUpdatedByUser: false,\r\n              DateCreated: importDate,\r\n              DateModified: importDate,\r\n            }\r\n          );\r\n\r\n          //As the BudgetCycle depends on the TransactionDate,\r\n          // add it when the TransactionDate is found\r\n          if (newTransactionDataPart.name === \"TransactionDate\") transaction.BudgetCycle = getBudgetCycleFromDate(newTransactionData.TransactionDate);\r\n\r\n          //If this is a new transaction, add it to the transactions\r\n          if (isNewTransaction) return transactions.concat(transaction);\r\n\r\n          //Otherwise, modify the previous transaction\r\n          // with the new data and return the transactions\r\n          transaction[newTransactionDataPart.name] = newTransactionDataPart.value;\r\n          return transactions;\r\n        }, [])\r\n        /* Import transactions in ascending TransactionDate order */\r\n        .reverse();\r\n    }\r\n\r\n    //Otherwise, this is CSV or JSON data\r\n\r\n    //If CSV data, convert it to JSON first\r\n    if (dataType === \"csv\") transactionsData = transactionsData.map(csvData=>convertCSVToJSON(csvData)).flat();\r\n\r\n    //For each CSV file, convert the contents to JSON\r\n    return transactionsData.map(transaction=>{\r\n      const _Date = (transaction.Date ? transaction.Date.trim() : null);\r\n      const PostedDate = (transaction.PostedDate ? transaction.PostedDate.trim() : null);\r\n      const TransactionDate = (transaction.TransactionDate ? transaction.TransactionDate.trim() : null);\r\n      const AccountNumber = (transaction[\"Card No.\"] ? transaction[\"Card No.\"].trim() : null);\r\n      const TransactionType = (transaction[\"Transaction Type\"] ? transaction[\"Transaction Type\"].trim() : null);\r\n      const Description = (transaction.Description ? transaction.Description.trim() : null);\r\n      const Amount = (transaction.Amount ? transaction.Amount.trim() : null);\r\n      const Charges = (transaction.Charges ? transaction.Charges.trim() : null);\r\n      const Payments = (transaction.Payments ? transaction.Payments.trim() : null);\r\n      const Debit = (transaction.Debit ? transaction.Debit.trim() : null);\r\n      const Credit = (transaction.Credit ? transaction.Credit.trim() : null);\r\n\r\n      //Validate calculated values\r\n      const amountRegEx = Amount.match(/(\\()?\\$\\+?(\\d+(?:\\.\\d{1,2})?)(\\))?/);\r\n      const amountIsNegative = amountRegEx[1] && amountRegEx[3];\r\n      let amount = Number(amountIsNegative ? `-${amountRegEx[2]}` : amountRegEx[2]);\r\n\r\n      let type = TransactionType;\r\n\r\n      //If this is a credit card transaction,\r\n      // negate the amount and change the transaction type\r\n      if (\r\n        !amountIsNegative && type === \"Debit\" ||\r\n        amountIsNegative && type === \"Credit\"\r\n      )\r\n      {\r\n        amount *= -1;\r\n        type = (type===\"Debit\" ? \"Charges\" : (type===\"Credit\" ? \"Payments\" : null));\r\n      }\r\n\r\n      const transactionDate = convertDateStringToDate(nullCoalesce(TransactionDate, _Date), \"MM/dd/yyyy\");\r\n      if (isFalsy(type) || isFalsy(transactionDate)) {\r\n        console.error(transaction);\r\n        throw new Error(`Unable to read transaction.\\r\\n${Object.entries(transaction).map(([key,value])=>`${key}:${value}`).join(\", \")}`);\r\n      }\r\n\r\n\r\n      return {\r\n        PostedDate: (PostedDate ? convertDateStringToDate(PostedDate, \"MM/dd/yyyy\") : null),\r\n        TransactionDate: transactionDate,\r\n        AccountNumber: (AccountNumber ? `*${AccountNumber}` : null),\r\n        Type: type,\r\n        Description,\r\n        DescriptionDisplay: null,\r\n        Amount: amount,\r\n        Category: null,\r\n        Notes: null,\r\n        Tags: [],\r\n        BudgetCycle: getBudgetCycleFromDate(transactionDate),\r\n        IsAutoCategorized: false,\r\n        IsUpdatedByUser: false,\r\n        DateCreated: importDate,\r\n        DateModified: importDate,\r\n      };\r\n    });\r\n  }\r\n  catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const categorizeTransactionByDescription = function(transaction) {\r\n  const {DescriptionDisplay, Description, Category, Notes} = transaction;\r\n\r\n  //If\r\n  // 1) the transaction has already either\r\n  // been auto-categorized, or updated by the user, or\r\n  // 2) the transaction has no Description to categorized on,\r\n  // there is no need to auto-categorized this transaction,\r\n  // as either it has been auto-categorized, or the user\r\n  // manually updated the transaction data\r\n  if (\r\n    (isTransactionAutoCategorizedOrUpdatedByUser(transaction)) ||\r\n    !Description\r\n  ) return transaction;\r\n\r\n  //Define a base for categorized transaction data\r\n  let categorizedTransactionData = {};\r\n\r\n  //Define matches, if matched capture groups are needed\r\n  let matches;\r\n\r\n  //Income\r\n  // NOTE: Always sets budget cycle values to the next month's budget cycle\r\n       if (matches = Description.match(/(?:ELECTRONIC\\/ACH CREDIT (.+) PAYROLL \\d{10}|PAYROLL (.+) \\d+ [\\w ]+ ACH CREDIT)/i))  categorizedTransactionData = {Category: \"Infor payroll\", DescriptionDisplay: `${matches[1] ?? matches[2]}`, Notes: null, /*BudgetCycle: getBudgetCycleFromDate(new Date(TransactionDate.getUTCMonth()+1))*/};\r\n  else if (matches = Description.match(/INTEREST(?: PAYMENT)?(?: INTEREST)?(?: PAID THIS STATEMENT THRU (\\d{2})\\/(\\d{2}))?/i))  categorizedTransactionData = {Category: \"Other income\", DescriptionDisplay: `Interest paid${(matches[1] && matches[2] ? ` ${matches[1]}/${matches[2]}` : \"\")}`, Notes: null, /*BudgetCycle: getBudgetCycleFromDate(new Date(TransactionDate.getUTCMonth()+1))*/};\r\n\r\n  //Deposits\r\n  else if (Description.match(/MOBILE CHECK DEPOSIT/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"Mobile check deposit\", Notes: null};\r\n\r\n  //Withdrawals\r\n  else if (Description.match(/ATM CASH WITHDRAWAL (?:\\d{4} \\w{4} \\d{12}|[\\w ]+)/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"ATM withdrawal\", Notes: null};\r\n  else if (matches = Description.match(/CHECK #(\\d+)/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: `Check #${matches[1]}`, Notes: null};\r\n\r\n  //Transfers\r\n  else if (matches = Description.match(/(?:ONLINE (?:BANKING TRANSFER (?:CREDIT )?(?:MOBILE APP TRANSFER )?)?|MOBILE )(TO|FROM) (?:(?:\\d{4} )?\\d{9}|\\*{14}|\\*{4})(\\d{4})(?: (?:- )?DEPOSIT TRANSFER)?/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: `Transfer ${matches[1].toLowerCase()} *${matches[2]}`, Notes: null};\r\n  else if (matches = Description.match(/(?:AUTOMATIC TRANSFER DEBIT \\w+ \\w+ TRANSFER \\d{9}(\\d{4})-\\d \\d{10}|ACCOUNT NUMBER \\d{5}(\\d{4}) PREAUTHORIZED TRANSFER)/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: `Automatic transfer to *${matches[1] ?? matches[2]}`, Notes: null};\r\n  else if (matches = Description.match(/ZELLE TRANSFER (TO|FROM) ([\\w ]+) \\d{2}\\/\\d{2} ?\\w+/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: `Zelle transfer ${matches[1].toLowerCase()} ${toPascalCase(matches[2])}`, Notes: null};\r\n\r\n  //Payments\r\n  else if (matches = Description.match(/(?:MOBILE TO \\*{12}(\\d{4}) )?CREDIT CARD PAYMENT(?: (?:MOBILE APP PAYMENT|ONLINE BANKING TRANSFER) TO \\d{4} \\d{6}\\*{6}(\\d{4}))?/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: `Payment for CCD *${matches[1] ?? matches[2]}`, Notes: null};\r\n  else if (matches = Description.match(/PAYMENT - \\w{5} \\w{3} \\w{7} \\w{2}/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: `Credit card payment`, Notes: null};\r\n\r\n  //Bills\r\n  else if (Description.match(/(?:ELECTRONIC\\/ACH DEBIT )?PIEDMONT N\\. G\\.(?: DRAFT \\d{13} \\d{10})?/i))  categorizedTransactionData = {Category: \"Piedmont Natural Gas\", DescriptionDisplay: \"Piedmont Natural Gas\", Notes: null};\r\n  else if (Description.match(/(?:ELECTRONIC\\/ACH DEBIT )?(?:BILL PAY )?DUKE ?ENERGY(?:(?: BILL PAY \\d{12}| SE WEB PAY \\d{14}) \\w{10})?/i))  categorizedTransactionData = {Category: \"Duke Energy\", DescriptionDisplay: \"Duke Energy\", Notes: null};\r\n  else if (Description.match(/(?:ELECTRONIC\\/ACH DEBIT )?(?:RE PAYMENT )?SHARONVIEW FEDER(?: RE PAYMENT \\d{10} \\d{10})?/i))  categorizedTransactionData = {Category: \"Sharonview mortgage & escrow\", DescriptionDisplay: \"Sharonview mortgage\", Notes: null};\r\n  else if (Description.match(/(?:ELECTRONIC\\/ACH DEBIT )?SHARONVIEW FCU TRANSFER \\d{15} \\d{10}/i))  categorizedTransactionData = {Category: \"Sharonview auto loan \", DescriptionDisplay: \"Sharonview loan\", Notes: null};\r\n  else if (Description.match(/(?:ELECTRONIC\\/ACH DEBIT )?(?:PURCHASE )?THOMASEHANNAHYMC(?: PURCHASE \\d{10})?/i))  categorizedTransactionData = {Category: \"YMCA membership\", DescriptionDisplay: \"YMCA membership\", Notes: null};\r\n  else if (Description.match(/(?:ELECTRONIC\\/ACH DEBIT )?PLANET FIT CLUB FEES \\d{13} \\d{10}/i))  categorizedTransactionData = {Category: \"Planet Fitness membership\", DescriptionDisplay: \"Planet Fitness membership\", Notes: null};\r\n  else if (Description.match(/(?:ELECTRONIC\\/ACH DEBIT )?DEPT EDUCATION STUDENT LN \\w{11} \\d{10}/i))  categorizedTransactionData = {Category: \"Nelnet student loan\", DescriptionDisplay: \"Nelnet student loan\", Notes: null};\r\n  else if (Description.match(/Simplisafe 888-957-4675 Ma/i))  categorizedTransactionData = {Category: \"SimpliSafe (for mom)\", DescriptionDisplay: \"SimpliSafe\", Notes: null};\r\n  else if (Description.match(/SDC\\* ?Laurens Electric C Laurens SC/i))  categorizedTransactionData = {Category: \"Laurens Electric ProTec Security\", DescriptionDisplay: \"Laurens Electric ProTec Security\", Notes: null};\r\n  else if (Description.match(/SJWD Water District (?:8649492805|8888916064) SC/i))  categorizedTransactionData = {Category: \"SJWD Water District\", DescriptionDisplay: \"SJWD Water\", Notes: null};\r\n  else if (Description.match(/State Farm  ?Insurance 8009566310 Il/i))  categorizedTransactionData = {Category: \"State Farm auto insurance\", DescriptionDisplay: \"State Farm\", Notes: null};\r\n  else if (Description.match(/Spotify USA(?: New York NY)?/i))  categorizedTransactionData = {Category: \"Spotify Premium subscription\", DescriptionDisplay: \"Spotify Premium\", Notes: null};\r\n  else if (Description.match(/Netflix.Com Netflix.Com Ca/i))  categorizedTransactionData = {Category: \"Netflix Premium subscription\", DescriptionDisplay: \"Netflix Premium\", Notes: null};\r\n  else if (Description.match(/(?:Ddv \\*)?Discovery(?:plus|\\+) (?:Ad-Free )?0123456789 TN/i))  categorizedTransactionData = {Category: \"Discovery Plus subscription\", DescriptionDisplay: \"Discovery Plus\", Notes: null};\r\n  else if (Description.match(/Peacock 1D10D Premium New York NY/i))  categorizedTransactionData = {Category: \"Peacock Premium subscription\", DescriptionDisplay: \"Peacock\", Notes: null};\r\n  else if (Description.match(/Spectrum 855-707-7328 \\w{2}/i))  categorizedTransactionData = {Category: \"Spectrum Internet\", DescriptionDisplay: \"Spectrum Internet\", Notes: null};\r\n  else if (Description.match(/(?:AT&T \\*Payment|ATT\\*BILL PAYMENT) 800-288-2020 TX/i))  categorizedTransactionData = {Category: \"AT&T Internet\", DescriptionDisplay: \"AT&T Internet\", Notes: null};\r\n  else if (Description.match(/KIRBY SANITATION (?:\\/C&J E )?8648778887 SC/i))  categorizedTransactionData = {Category: \"Kirby Sanitation\", DescriptionDisplay: \"Kirby Sanitation\", Notes: null};\r\n  else if (Description.match(/Food for the Hungry 480-9983100 AZ/i))  categorizedTransactionData = {Category: \"Food for the Hungry\", DescriptionDisplay: \"Food for the Hungry\", Notes: null};\r\n\r\n  //Recurring expenses\r\n\r\n  //Gas\r\n  else if (Description.match(/QT \\d+ (?:INSIDE|OUTSIDE|\\w+ \\w{2})/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"QuikTrip\", Notes: null};\r\n  else if (Description.match(/CIRCLE K # \\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"Circle K\", Notes: null};\r\n  else if (Description.match(/7-ELEVEN \\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"7-Eleven\", Notes: null};\r\n  else if (Description.match(/SPINX #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"Spinx\", Notes: null};\r\n  else if (Description.match(/(?:LOVE S TRAVEL|LOVES COUNTRY) \\d+ [\\w ]+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"Love's\", Notes: null};\r\n  else if (Description.match(/SHELL OIL [\\d\\w]+ [\\w ]+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"Shell\", Notes: null};\r\n  else if (Description.match(/INGLES GAS EXP #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"Ingles Gas\", Notes: null};\r\n  else if (Description.match(/RACETRAC ?\\d+ \\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"RaceTrac\", Notes: null};\r\n  else if (Description.match(/TA \\w+ #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"TA Travel Centers of America\", Notes: null};\r\n  else if (Description.match(/SPEEDWAY \\d+ \\d+ \\w+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"Speedway\", Notes: null};\r\n  else if (Description.match(/BUC-EE[' ]S #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"Buc-ee's\", Notes: null};\r\n  else if (Description.match(/V GO #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"V-Go\", Notes: null};\r\n  else if (Description.match(/TEXACO \\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"Texaco\", Notes: null};\r\n  else if (Description.match(/EXXONMOBIL \\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"ExxonMobil\", Notes: null};\r\n\r\n  //Groceries & Necessities\r\n  else if (Description.match(/Walmart(?: Grocery|\\.com AA) \\d{3}-?\\d{3}-?\\d{4} AR/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Walmart Supercenter\", Notes: \"grocery pickup\"};\r\n  else if (Description.match(/(?:Wal-Mart|WM Supercenter) #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Walmart Supercenter\", Notes: null};\r\n  else if (Description.match(/Target #?\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Target\", Notes: null};\r\n  else if (Description.match(/Ingles Markets #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Ingles\", Notes: null};\r\n  else if (Description.match(/Publix #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Publix\", Notes: null};\r\n  else if (Description.match(/Food Lion #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Food Lion\", Notes: null};\r\n  else if (Description.match(/Winn-Dixie   #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Winn-Dixie\", Notes: null};\r\n  else if (Description.match(/(?:Sams ?Club #8142 Spartanburg SC|Sams Club #8142 864-574-3480 SC)/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Sam's Club\", Notes: null};\r\n  else if (Description.match(/SAMS MEMBERSHIP 888-433-7267 AR/i)) categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"Sam's Club club membership\", Notes: null};\r\n  else if (Description.match(/Lidl #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Lidl\", Notes: null};\r\n  else if (Description.match(/Aldi \\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Aldi\", Notes: null};\r\n  else if (Description.match(/Earth Fare \\w+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Earth Fare\", Notes: null};\r\n\r\n  else if (Description.match(/Kohl's #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Kohl's\", Notes: null};\r\n  else if (Description.match(/Once Upon A Child \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Once Upon A Child\", Notes: null};\r\n  else if (Description.match(/Gabriel Bros \\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Gabe's\", Notes: null};\r\n  else if (Description.match(/Roses Store #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Roses\", Notes: null};\r\n  else if (Description.match(/Dollar ?Tree \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Dollar Tree\", Notes: null};\r\n  else if (Description.match(/Dollar General #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Dollar General\", Notes: null};\r\n  else if (Description.match(/Walgreens #\\d+/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Walgreens\", Notes: null};\r\n  else if (Description.match(/(?:WWW\\.CVS\\.COM 800-746-7287 RI|CVS PHARMACY #\\d+ \\w+ \\w{2})/i))  categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"CVS Pharmacy\", Notes: null};\r\n  else if (Description.match(/FIRSTCHOICE PHARMACY L \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"FirstChoice Pharmacy\", Notes: null};\r\n  else if (Description.match(/(?:PP\\*)?INSTACART(?:\\*\\w+)? (?:SAN FRANCISCO ?CA|4029357733 CA)/i))  categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Instacart\", Notes: null};\r\n  else if (Description.match(/SHIPT\\* ORDER BIRMINGHAM AL/i))  categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Shipt\", Notes: null};\r\n\r\n  //Family Outings\r\n  else if (Description.match(/McDonald[' ]s (?:S )?\\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"McDonald's\", Notes: null};\r\n  else if (Description.match(/Burger King #\\d+(?: \\w+ \\w+ \\w{2})?/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Burger King\", Notes: null};\r\n  else if (Description.match(/Sonic Drive[- ]?In #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Sonic Drive-In\", Notes: null};\r\n  else if (Description.match(/Cook Out [\\w ]+(?: \\w+ \\w{2})?/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Cook Out\", Notes: null};\r\n  else if (Description.match(/Wendy ?s #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Wendy's\", Notes: null};\r\n  else if (Description.match(/Krystal [\\d\\w]+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Krystal\", Notes: null};\r\n  else if (Description.match(/Checkers (Drive In|\\d+) \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Checkers\", Notes: null};\r\n  else if (Description.match(/JACK'S #\\d+ \\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Jack's\", Notes: null};\r\n  else if (Description.match(/Jack in the Box \\d+ \\w+/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Jack In The Box\", Notes: null};\r\n  else if (Description.match(/Wayback Burgers \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Wayback Burgers\", Notes: null};\r\n  else if (Description.match(/Steak N Shake \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Steak 'n Shake\", Notes: null};\r\n  else if (Description.match(/RED ROBIN NO \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Red Robin\", Notes: null};\r\n  else if (Description.match(/Culvers [\\w ]+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Culver's\", Notes: null};\r\n  else if (Description.match(/Arbys - \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Arby's\", Notes: null};\r\n  else if (Description.match(/Jersey Mikes? \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Jersey Mike's Subs\", Notes: null};\r\n  else if (Description.match(/CHICKEN SALAD CHICK - \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Chicken Salad Chick\", Notes: null};\r\n  else if (Description.match(/PDQ  ?(?:\\d+( OLO)?|\\w+) \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"PDQ\", Notes: null};\r\n  else if (Description.match(/Chick-Fil-A #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Chick-fil-A\", Notes: null};\r\n  else if (Description.match(/Bojangles \\d+ \\w+/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Bojangles\", Notes: null};\r\n  else if (Description.match(/KFC \\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"KFC\", Notes: null};\r\n  else if (Description.match(/Popeyes (?:\\d+|- \\w+) \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Popeyes\", Notes: null};\r\n  else if (Description.match(/Zaxby's #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Zaxby's\", Notes: null};\r\n  else if (Description.match(/TST\\* Flock Shop - \\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Flock Shop\", Notes: null};\r\n  else if (Description.match(/Taco Bell #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Taco Bell\", Notes: null};\r\n  else if (Description.match(/(?:Chipotle \\d+ \\w+ \\w{2}|Chipotle Online 1800\\d{6} CA)/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Chipotle\", Notes: null};\r\n  else if (Description.match(/Taco Casa #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Taco Casa\", Notes: null};\r\n  else if (Description.match(/TST\\* Willy Taco - Hub Spartanburg SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Willy Taco\", Notes: null};\r\n  else if (Description.match(/El Tejano Mexican Rest/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"El Tejano\", Notes: null};\r\n  else if (Description.match(/La Fogata Mexican Rest Simpsonville Sc/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"La Fogata\", Notes: null};\r\n  else if (Description.match(/El Molcajete (?:Mexican )?Duncan Sc/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"El Molcajete\", Notes: null};\r\n  else if (Description.match(/Sr Salsa Greenville SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Sr Salsa Mexican Restaurant\", Notes: null};\r\n  else if (Description.match(/CKE\\*Taco Dog Spartanbu Spartanburg SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Taco Dog\", Notes: null};\r\n  else if (Description.match(/Tropical Grille \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Tropical Grille\", Notes: null};\r\n  else if (Description.match(/Califas \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Califas\", Notes: null};\r\n  else if (Description.match(/TIPSY TACO \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Tipsy Taco\", Notes: null};\r\n  else if (Description.match(/IHOP \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"IHOP\", Notes: null};\r\n  else if (Description.match(/Waffle House \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Waffle House\", Notes: null};\r\n  else if (Description.match(/TST\\* Eggs Up Grill - \\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Eggs Up Grill\", Notes: null};\r\n  else if (Description.match(/Chili's \\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Chili's\", Notes: null};\r\n  else if (Description.match(/Sweet Basil Thai Cusin Greenville SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Sweet Basil Thai Cusine\", Notes: null};\r\n  else if (Description.match(/Taste of Thai Spartanburg SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Taste of Thai\", Notes: null};\r\n  else if (Description.match(/Panda Hibachi Duncan SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Panda Hibachi\", Notes: null};\r\n  else if (Description.match(/PF Changs #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"PF Changs\", Notes: null};\r\n  else if (Description.match(/Lieu'?s (?:Chinese|Asian) Bistro \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Lieu's Chinese Bistro\", Notes: null};\r\n  else if (Description.match(/Ruby Thai \\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Ruby Thai\", Notes: null};\r\n  else if (Description.match(/Mandarin Express \\d+ \\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Mandarin Express\", Notes: null};\r\n  else if (Description.match(/Oriental House \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Oriental House\", Notes: null};\r\n  else if (Description.match(/Hibachi Grill And Buff \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Hibachi Grill & Buffet\", Notes: null};\r\n  else if (Description.match(/THE OLIVE GARD\\d{8} \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Olive Garden\", Notes: null};\r\n  else if (Description.match(/Paisanos Italian Resta/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Paisanos Italian Restaurant\", Notes: null};\r\n  else if (Description.match(/Pizza Hut \\d+ \\d+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Pizza Hut\", Notes: null};\r\n  else if (Description.match(/Pizza Inn \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Pizza Inn\", Notes: null};\r\n  else if (Description.match(/Antonio Bertolos Pizza \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Antonino Bertolo's Pizza\", Notes: null};\r\n  else if (Description.match(/La Taverna Spartanburg SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"La Taverna\", Notes: null};\r\n  else if (Description.match(/Sbarro \\d+ \\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Sbarro\", Notes: null};\r\n  else if (Description.match(/Boston Pizzeria \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Boston Pizzeria\", Notes: null};\r\n  else if (Description.match(/Tutti Frutti \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Tutti Frutti\", Notes: null};\r\n  else if (Description.match(/TCBY \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"TCBY\", Notes: null};\r\n  else if (Description.match(/SQ \\*Twisted Cup \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Twisted Cup\", Notes: null};\r\n  else if (Description.match(/Hub City Scoops \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Hub City Scoops\", Notes: null};\r\n  else if (Description.match(/Ritas # \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Rita's Italian Ice\", Notes: null};\r\n  else if (Description.match(/Krispy Kreme \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Krispy Kreme\", Notes: null};\r\n  else if (Description.match(/INSOMNIA COOKIES- \\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Insomnia Cookies\", Notes: null};\r\n  else if (Description.match(/Spill the Beans - \\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Spill the Beans\", Notes: null};\r\n  else if (Description.match(/Starbucks Store \\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Starbucks\", Notes: null};\r\n  else if (Description.match(/PP\\*Liquid Highway Greenville SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Liquid Highway\", Notes: null};\r\n  else if (Description.match(/Bella Latte Duncan SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Bella Latte\", Notes: null};\r\n  else if (Description.match(/Panera Bread #\\d+ P \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Panera Bread\", Notes: null};\r\n  else if (Description.match(/Denny[' ]s Inc 18007336 \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Denny's\", Notes: null};\r\n  else if (Description.match(/Applebees \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Applebee's\", Notes: null};\r\n  else if (Description.match(/Dunkin #\\d+ \\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Dunkin\", Notes: null};\r\n  else if (Description.match(/Shipwreck Cove Duncan SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Shipwreck Cove\", Notes: null};\r\n  else if (Description.match(/Theo s Family Restaurn Greer SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Theo's Family Restaurant\", Notes: null};\r\n  else if (Description.match(/New S And S Cafe Greenville SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"S & S Cafeteria\", Notes: null};\r\n  else if (Description.match(/The Blue Ridge Brewing Greenville SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"The Blue Ridge Brewing Company\", Notes: null};\r\n  else if (Description.match(/Carolina Ale House GRE Greenville SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Carolina Ale House\", Notes: null};\r\n  else if (Description.match(/Flavorshack Hot Chicke Duncan SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Flavorshack Hot Chicken & Ribs\", Notes: null};\r\n\r\n  else if (Description.match(/Fall For Greenville Greenville SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Fall For Greenville\", Notes: null};\r\n  else if (Description.match(/SpareTimeGreenville EC 8644120299 SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Spare Time Entertainment\", Notes: null};\r\n  else if (Description.match(/NCG SPARTANBURG CINEMA SPARTANBURG SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"NCG Cinema\", Notes: null};\r\n\r\n  //Church\r\n  else if (Description.match(/Brookwood Church Donat Simpsonville Sc/i))  categorizedTransactionData = {Category: \"Church\", DescriptionDisplay: \"Brookwood Church\", Notes: \"online giving\"};\r\n\r\n  //Personal Spending\r\n\r\n  //Childcare\r\n  else if (Description.match(/GIGGLES DROP IN CHILDC GREENVILLE SC/i))  categorizedTransactionData = {Category: \"Childcare\", DescriptionDisplay: \"Giggles Drop-In Childcare\", Notes: null};\r\n  else if (Description.match(/SQ \\*KIDSZONE DROP-IN H GREENVILLE SC/i))  categorizedTransactionData = {Category: \"Childcare\", DescriptionDisplay: \"KidsZone Drop-In Childcare\", Notes: null};\r\n\r\n  //Other\r\n  else if (matches = Description.match(/ELECTRONIC\\/ACH CREDIT IRS TREAS 310 ([\\w ]+) \\d{10}/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: `Internal Revenue Service ${matches[1]}`, Notes: null};\r\n  else if (matches = Description.match(/ELECTRONIC\\/ACH CREDIT SC STATE TREASUR ([\\w ]+) \\d{10}/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: `South Carolina Treasury ${matches[1]}`, Notes: null};\r\n  else if (Description.match(/ELECTRONIC\\/ACH CREDIT SHFECU SV WEBXFR \\w{3} \\d{10}/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"Sharonview\", Notes: null};\r\n  else if (Description.match(/HAMPTON INN \\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"Hampton by Hilton\", Notes: null};\r\n  else if (Description.match(/HOMES TO SUITES BY HIL \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"Homes2 Suites by Hilton\", Notes: null};\r\n  else if (Description.match(/THE HOME DEPOT #?\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"The Home Depot\", Notes: null};\r\n  else if (Description.match(/HARBOR FREIGHT TOOLS \\d \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"Harbor Freight\", Notes: null};\r\n  else if (Description.match(/(?:AMAZON\\.COM|AMZN MKTP US)\\*\\w+(?: A)? AMZN\\.COM\\/BILLWA/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"Amazon\", Notes: null};\r\n  else if (Description.match(/Hobby Lobby #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"Hobby Lobby\", Notes: null};\r\n  else if (Description.match(/BESTBUYCOM806539911409 888BESTBUY MN/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"Best Buy\", Notes: null};\r\n  else if (Description.match(/STAPLES \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"Staples\", Notes: null};\r\n  else if (Description.match(/BIG LOTS STORES - #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"Big Lots\", Notes: null};\r\n  else if (Description.match(/AT HOME STORE \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"At Home\", Notes: null};\r\n  else if (Description.match(/FIVE BELOW \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"Five Below\", Notes: null};\r\n  else if (Description.match(/2ND AND CHARLES \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"2nd & Charles\", Notes: null};\r\n  else if (Description.match(/SPARTANBURGCO TREAS 8645962603 SC/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"Spartanburg County Treasury\", Notes: null};\r\n  else if (Description.match(/9999 UMG MY CHART PT P 864-4542000 SC/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"Prisma Health MyChart\", Notes: null};\r\n  else if (Description.match(/Crescent Family Dentis Greer SC/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"Crescent Family Dentistry\", Notes: null};\r\n  else if (Description.match(/AIRBNB \\w+ 4158005959 CA/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"Airbnb\", Notes: null};\r\n  else if (Description.match(/SQ \\*Brown Roof Thrift \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"Brown Roof Thrift\", Notes: null};\r\n\r\n  //If there was no match, return the original transaction\r\n  else return transaction;\r\n\r\n  //Final categorizedTransactionData\r\n  categorizedTransactionData = {\r\n    //only add a category/displayed description/notes, based on the description, if one is not already present\r\n    Category: Category || categorizedTransactionData.Category,\r\n    DescriptionDisplay: DescriptionDisplay || categorizedTransactionData.DescriptionDisplay,\r\n    Notes: Notes || categorizedTransactionData.Notes,\r\n    //BudgetCycle: categorizedTransactionData.BudgetCycle,\r\n  };\r\n\r\n  //Return the transaction with updated categorization data\r\n  return {\r\n    ...transaction,\r\n    ...categorizedTransactionData,\r\n    IsAutoCategorized: true,\r\n  };\r\n};\r\n\r\nexport const getTransactionDefaultDescriptionDisplay = function(transaction) {\r\n  return nullCoalesce(transaction.DescriptionDisplay, `*${transaction.Description}`) || \"\";\r\n};\r\n\r\nexport const formatTransactionDisplay = function(transaction) {\r\n  return {\r\n    ...transaction,\r\n    BudgetCycle: (transaction.BudgetCycle ? getBudgetCycleString(transaction.BudgetCycle) : \"\"),\r\n    PostedDate: (transaction.PostedDate ? new Date(transaction.PostedDate).toLocaleDateString(\"en-US\", {timeZone: \"UTC\"}).toString() : \"\"),\r\n    TransactionDate: (transaction.TransactionDate ? new Date(transaction.TransactionDate).toLocaleDateString(\"en-US\", {timeZone: \"UTC\"}).toString() : \"\"),\r\n    AccountNumber: transaction.AccountNumber || \"\",\r\n    Type: transaction.Type || \"\",\r\n    Description: transaction.Description || \"\",\r\n    DescriptionDisplay: transaction.DescriptionDisplay || \"\",\r\n    Amount: convertNumberToCurrency(transaction.Amount) || \"\",\r\n    Category: transaction.Category || \"\",\r\n    Notes: transaction.Notes || \"\",\r\n  };\r\n};\r\n\r\nexport const isTransactionDuplicate = (potentialDuplicate, transactions)=>{\r\n  return transactions.find(transaction=>\r\n    areObjectsEqual({\r\n      TransactionDate: transaction.TransactionDate.toJSON(),\r\n      Description: transaction.Description,\r\n      Amount: transaction.Amount,\r\n    }, {\r\n      TransactionDate: potentialDuplicate.TransactionDate.toJSON(),\r\n      Description: potentialDuplicate.Description,\r\n      Amount: potentialDuplicate.Amount,\r\n    }\r\n  ));\r\n};\r\n\r\nexport const getBudgetCyclesFromTransactions = transactions=>{\r\n  return [\r\n    ...new Set(\r\n      transactions.map(({BudgetCycle})=>getBudgetCycleFromDate(BudgetCycle))\r\n    )\r\n  ].map(date=>new Date(date));\r\n};\r\n\r\nexport const isTransactionAutoCategorizedOrUpdatedByUser = transaction=>{\r\n  return transaction.IsAutoCategorized === true || transaction.IsUpdatedByUser === true;\r\n};\r\n\r\nexport const getTransactionsAmountTotal = transactions=>{\r\n  return transactions.reduce((total, transaction)=>total+=transaction.Amount, 0);\r\n};\r\n","export const isFalsy = function(value) {\r\n  return value !== 0 && (!value || value == false);\r\n};\r\n\r\nexport const nullCoalesce = function(value) {\r\n  if(isFalsy(arguments)) throw new Error(\"Function cannot accept 0 parameters.\");\r\n  return [...arguments].reduce((accumulator, value)=>accumulator = (isFalsy(accumulator) && !isFalsy(value) ? value : accumulator), null);\r\n};\r\n\r\nexport const convertNumberToCurrency = function(value) {\r\n  if (isNaN(value)) return null;\r\n  return Number(value)\r\n    .toFixed(2)\r\n    .toString()\r\n    .replace(/\\d{4,}/, (p0)=>p0.split('').reverse().join('').replace(/(\\d{3})(?=\\d)/g, \"$1,\").split('').reverse().join('')) //add commas\r\n    .replace(/(\\d)/, \"$$$1\") //add $\r\n};\r\n\r\nexport const convertCSVToJSON = function(csv, delimiter = \",\") {\r\n  //Initialize variables\r\n  const csvData = csv\r\n    //Break apart by new line\r\n    .split(/(?:\\r\\n|\\r|\\n)/)\r\n    //Begin breaking apart each line by the delimiter\r\n    .map(line=>(!line ? null : line.split(delimiter)))\r\n    //Remove the empty lines\r\n    .filter(line=>line);\r\n\r\n  //Get the headers\r\n  const headers = csvData.splice(0,1)[0];\r\n\r\n  //Get the data\r\n  const obj = csvData.map(line=>{\r\n    const lineObj = {};\r\n    line.forEach((value, i)=>{\r\n      lineObj[headers[i]] = value;\r\n    })\r\n    return lineObj;\r\n  });\r\n\r\n  return obj;\r\n};\r\n\r\nexport const getSumByProp = (array, prop)=>{\r\n  //Make sure the provided object is an array\r\n  if (!Array.isArray(array)) {\r\n    //If its not even a single object, return null\r\n    if(!typeof array === \"object\") return null;\r\n\r\n    //Otherwise, wrap the object in an array for processing\r\n    array = [array]\r\n  }\r\n\r\n  return Number(array.reduce((sum, item)=>{\r\n    //If this an object, use the property\r\n    if (typeof item === \"object\") {\r\n      if (!Number.isNaN(item[prop])) return sum+=item[prop];\r\n    }\r\n\r\n    //Otherwise, if a number, use the item directly\r\n    if (!Number.isNaN(item)) return sum+=item;\r\n  }, 0)) || null;\r\n};\r\n\r\nexport const areObjectsEqual = (a,b)=>{\r\n  //## typeof values\r\n  //\"undefined\"\r\n  //\"boolean\"\r\n  //\"number\"\r\n  //\"bigint\"\r\n  //\"string\"\r\n  //\"symbol\"\r\n  //\"function\" (non-primitive)\r\n  //\"object\"  (non-primitive) //includes null\r\n\r\n  //\r\n  if (a === null) {\r\n    if (b === null) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  //First, if not the same type, exit\r\n  const typeofA = typeof a;\r\n  const typeofB = typeof b;\r\n  if (typeofA !== typeofB) return false;\r\n\r\n  //If these are objects, recurse into them\r\n  if (typeofA === \"object\") {\r\n    const aValues = Object.entries(a);\r\n    const bValues = Object.entries(b);\r\n\r\n    //Short-circuit if the number of properties aren't the same\r\n    if(aValues.length !== bValues.length) return false;\r\n\r\n    for(let i = 0; i < aValues.length; i++) {\r\n      const [aKey, aValue] = aValues[i];\r\n      const [bKey, bValue] = bValues[i];\r\n      if(aKey !== bKey) return false;\r\n      if (!areObjectsEqual(aValue, bValue)) return false;\r\n    }\r\n\r\n    //If the objects properties/arrays values are all the same, return true\r\n    return true;\r\n  }\r\n\r\n  //Otherwise, compare the values\r\n  return a === b;\r\n};\r\n\r\nexport const isDescendantOf = (element, potentialParent) => {\r\n  if (\r\n    element.parentElement &&\r\n    potentialParent &&\r\n    element.parentElement !== potentialParent\r\n  ) return isDescendantOf(element.parentElement, potentialParent);\r\n\r\n  return element.parentElement != null &&\r\n    potentialParent != null &&\r\n    element.parentElement === potentialParent;\r\n};\r\n\r\nexport const matchValueAgainstValue = (value, matchedValue)=>{\r\n  //Perform validations\r\n  if (!value) value = \"\";\r\n  if (value instanceof Date) value = value.toJSON(); //perform Date before Number (as Date() is not NaN)\r\n  if (!isNaN(value)) value = value.toString();\r\n\r\n  if (!matchedValue) matchedValue = \"\";\r\n  if (matchedValue instanceof Date) matchedValue = matchedValue.toJSON(); //perform Date before Number (as Date() is not NaN)\r\n  if (!isNaN(matchedValue)) matchedValue = matchedValue.toString();\r\n\r\n  //Escape the matched value to prepare for RegExp\r\n  const escapedMatchedValue = matchedValue.replace(/([-\\/\\\\^$*+?.()|[\\]{}])/g, '\\\\$1');\r\n\r\n  return value.match(new RegExp(`(${escapedMatchedValue})`, \"i\"));\r\n};\r\n","import {getSumByProp} from './utilities.js';\r\nimport {parseGoogleSheetsNumber, parseGoogleSheetsDate} from './../googleApi';\r\n\r\nexport const isCreditCardPaymentTransaction = transaction=>{\r\n  return transaction.Description.match(/PAYMENT - THANK YOU ATLANTA GA/i);\r\n};\r\n\r\nexport const isIncomeTransaction = transaction=>{\r\n  return transaction.Description.match(/ELECTRONIC\\/ACH CREDIT INFOR US , INC\\. PAYROLL 3203469219/i);\r\n};\r\n\r\nexport const getBudgetAmountSpentFromTransactions = (budgetName, transactions)=>{\r\n  const check = transaction=>{\r\n    return (\r\n      //For the Miscellaneous budget, include non-income transactions with no category\r\n      budgetName === \"Miscellaneous\" ?\r\n      [budgetName, null].includes(transaction.Category) && !isCreditCardPaymentTransaction(transaction) && !isIncomeTransaction(transaction) :\r\n      transaction.Category === budgetName\r\n    )\r\n  };\r\n  return getSumByProp(transactions.filter(transaction=>check(transaction)), \"Amount\");\r\n};\r\n\r\nexport const typeCheckBudgetsData = budgetsData=>{\r\n  return budgetsData.map(budgetData=>({\r\n      ...budgetData,\r\n      Amount: parseGoogleSheetsNumber(budgetData.Amount),\r\n      BudgetCycle: parseGoogleSheetsDate(budgetData.BudgetCycle),\r\n    })\r\n  );\r\n};\r\n","import {getMonthFromNumber, getNumberFromMonth, getBudgetCyclesFromTransactions} from './../utilities';\r\n\r\nexport const getBudgetCycleFromDate = date=>{\r\n  return new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth()));\r\n};\r\n\r\nconst ALL_TRANSACTIONS_BUDGET_CYCLE = getBudgetCycleFromDate(new Date(8640000000000000)); //8640000000000000 (8.64e+15, max Date epoch)\r\n\r\nexport const getBudgetCycleFromBudgetCycleString = budgetCycleString=>{\r\n  const [matches, monthString, yearString] = budgetCycleString.match(/(\\w+) (\\d{4})/);\r\n  const year = Number(yearString);\r\n  const month = getNumberFromMonth(monthString);\r\n\r\n  return new Date(Date.UTC(year, month));\r\n};\r\n\r\nexport const getBudgetCycleString = budgetCycle=>{\r\n  //Short-circut for \"All Transactions\" budget cycle\r\n  if (isAllTransactionsBudgetCycle(budgetCycle)) return \"All Transactions\";\r\n\r\n  return `${getMonthFromNumber(budgetCycle.getUTCMonth())} ${budgetCycle.getUTCFullYear()}`;\r\n};\r\n\r\nexport const getBudgetCycleDescription = (budgetCycle, todayBudgetCycle=(new Date()))=>{\r\n  //Short-circut for \"All Transactions\" budget cycle\r\n  if (isAllTransactionsBudgetCycle(budgetCycle)) return null;\r\n\r\n  const fullYearDifference = todayBudgetCycle.getUTCFullYear() - budgetCycle.getUTCFullYear();\r\n  const monthDifference = (fullYearDifference*12) + (todayBudgetCycle.getUTCMonth() - budgetCycle.getUTCMonth());\r\n  if (monthDifference <= -12) return `${Math.abs(Math.floor(monthDifference/12))} year${Math.abs(Math.floor(monthDifference/12))===1?\"\":\"s\"} later`;\r\n  if (monthDifference < -1) return `${Math.abs(Math.floor(monthDifference))} month${Math.abs(Math.floor(monthDifference))===1?\"\":\"s\"} later`;\r\n  if (monthDifference === -1) return \"next month\";\r\n  if (monthDifference === 0) return \"current\";\r\n  if (monthDifference === 1) return \"last month\";\r\n  if (monthDifference < 12) return `${monthDifference} month${monthDifference===1?\"\":\"s\"} ago`;\r\n  const yearDifference = Math.floor(monthDifference/12);\r\n  return `${yearDifference} year${yearDifference===1?\"\":\"s\"} ago`;\r\n};\r\n\r\nexport const getAllBudgetCycles = transactions=>{\r\n  if (!transactions.length) return [];\r\n\r\n  const todayBudgetCycle = getBudgetCycleFromDate(new Date());\r\n\r\n  return [\r\n    ...new Set([\r\n      ALL_TRANSACTIONS_BUDGET_CYCLE,\r\n      todayBudgetCycle, //assure the current month is an option as well\r\n      ...getBudgetCyclesFromTransactions(transactions),\r\n    ].map(date=>date.getTime()))\r\n  ]\r\n    .sort((a,b)=>b-a)\r\n    .map(epochTime=>new Date(epochTime));\r\n};\r\n\r\nexport const isAllTransactionsBudgetCycle = budgetCycle=>{\r\n  return (!(budgetCycle instanceof Date) ? null : budgetCycle.getTime() === ALL_TRANSACTIONS_BUDGET_CYCLE.getTime());\r\n};\r\n","export const throwException = (err, throwEx=true, alertWindow=true)=>{\r\n  //Build an exception to throw\r\n  let exception = {};\r\n  let errorMsg = null;\r\n\r\n  //If this is a Javascript exception\r\n  if (err instanceof Error) {\r\n    errorMsg = err.message;\r\n\r\n    exception.name = err.name\r\n    if (err.description === 0 || err.description) exception.description = err.description;\r\n    if (err.number === 0 || err.number) exception.number = err.number;\r\n    if (err.fileName === 0 || err.fileName) exception.fileName = err.fileName;\r\n    if (err.lineNumber === 0 || err.lineNumber) exception.lineNumber = err.lineNumber;\r\n    if (err.columnNumber === 0 || err.columnNumber) exception.columnNumber = err.columnNumber;\r\n    if (err.stack === 0 || err.stack) exception.stack = err.stack;\r\n  }\r\n  else if (typeof err === \"object\") {\r\n    if (err.message) {\r\n      errorMsg = err.message;\r\n      delete err.message;\r\n    }\r\n    exception = {\r\n      ...exception,\r\n      ...err,\r\n    }\r\n  }\r\n  else if (typeof err === \"string\") {\r\n    errorMsg = err;\r\n  }\r\n\r\n  //Log the original error, for investigation\r\n  console.error(\"throwException()\", err);\r\n\r\n  //Send a prettified version of the error to the screen\r\n  const exceptionMsg = `${errorMsg}\\r\\n${Object.entries(exception).length ? Object.entries(exception).map(([key, value])=>`  + ${key}: ${value}\\r\\n`).join(\"\") : ''}\\r\\nThe application failed.`;\r\n\r\n  if (alertWindow) window.alert(exceptionMsg);\r\n\r\n  //Throw the original error\r\n  if (throwEx) throw err;\r\n}\r\n","export const getMonthFromNumber = number=>{\r\n  if (number === 0) return \"January\";\r\n  if (number === 1) return \"February\";\r\n  if (number === 2) return \"March\";\r\n  if (number === 3) return \"April\";\r\n  if (number === 4) return \"May\";\r\n  if (number === 5) return \"June\";\r\n  if (number === 6) return \"July\";\r\n  if (number === 7) return \"August\";\r\n  if (number === 8) return \"September\";\r\n  if (number === 9) return \"October\";\r\n  if (number === 10) return \"November\";\r\n  if (number === 11) return \"December\";\r\n  return null;\r\n};\r\n\r\nexport const getNumberFromMonth = month=>{\r\n  if (month === \"January\") return 0;\r\n  if (month === \"February\") return 1;\r\n  if (month === \"March\") return 2;\r\n  if (month === \"April\") return 3;\r\n  if (month === \"May\") return 4;\r\n  if (month === \"June\") return 5;\r\n  if (month === \"July\") return 6;\r\n  if (month === \"August\") return 7;\r\n  if (month === \"September\") return 8;\r\n  if (month === \"October\") return 9;\r\n  if (month === \"November\") return 10;\r\n  if (month === \"December\") return 11;\r\n  return null;\r\n};\r\n\r\nexport const convertDateStringToDate = (dateString, dateStringFormat)=>{\r\n  //Declare variables\r\n  const yearSymbol = \"y\";\r\n  const monthSymbol = \"M\";\r\n  const daySymbol = \"d\";\r\n\r\n  const yearFormatRegEx = new RegExp(`(${yearSymbol}{1,4})`, \"g\");\r\n  const monthFormatRegEx = new RegExp(`(${monthSymbol}{1,4})`, \"g\");\r\n  const dayFormatRegEx = new RegExp(`(${daySymbol}{1,2})`, \"g\");\r\n\r\n  const getDatePartByFormat = (dateString, dateStringFormat, datePartFormatRegex, getDatePartCallback)=>{\r\n    //Match against the provided format\r\n    const isMatch = [...dateStringFormat.matchAll(datePartFormatRegex)];\r\n\r\n    //If none were found, or more than one match is found, throw\r\n    if (!isMatch || isMatch.length > 1) throw new Error(`Error: Format \"${dateStringFormat}\" matched RegExp ${datePartFormatRegex.toString()} ${(isMatch ? isMatch.length : 0)} time${(isMatch ? \"s\" : \"\")}.`);\r\n\r\n    const matchStartingIndex = isMatch[0].index;\r\n    const matchedFormat = isMatch[0][1];\r\n    const matchEndingIndex = matchedFormat.length + matchStartingIndex;\r\n    const matchedString = dateString.substring(matchStartingIndex, matchEndingIndex);\r\n\r\n    //Return back the month index based on the format\r\n    return getDatePartCallback(matchedString, matchedFormat);\r\n  };\r\n\r\n  const getYearByFormat = (yearString, yearFormat)=>{\r\n    if (Number.isNaN(yearString)) return null;\r\n\r\n    if (yearFormat === \"yy\") return Number((new Date()).getUTCFullYear().toString().substring(0,2)+yearString);\r\n    if (yearFormat === \"yyyy\") return Number(yearString);\r\n\r\n    return null;\r\n  };\r\n\r\n  const getMonthIndexByFormat = (monthString, monthFormat)=>{\r\n    if (monthFormat === \"M\") {\r\n      if (monthString === \"1\") return 0;\r\n      if (monthString === \"2\") return 1;\r\n      if (monthString === \"3\") return 2;\r\n      if (monthString === \"4\") return 3;\r\n      if (monthString === \"5\") return 4;\r\n      if (monthString === \"6\") return 5;\r\n      if (monthString === \"7\") return 6;\r\n      if (monthString === \"8\") return 7;\r\n      if (monthString === \"9\") return 8;\r\n      if (monthString === \"10\") return 9;\r\n      if (monthString === \"11\") return 10;\r\n      if (monthString === \"12\") return 11;\r\n    }\r\n    if (monthFormat === \"MM\") {\r\n      if (monthString === \"01\") return 0;\r\n      if (monthString === \"02\") return 1;\r\n      if (monthString === \"03\") return 2;\r\n      if (monthString === \"04\") return 3;\r\n      if (monthString === \"05\") return 4;\r\n      if (monthString === \"06\") return 5;\r\n      if (monthString === \"07\") return 6;\r\n      if (monthString === \"08\") return 7;\r\n      if (monthString === \"09\") return 8;\r\n      if (monthString === \"10\") return 9;\r\n      if (monthString === \"11\") return 10;\r\n      if (monthString === \"12\") return 11;\r\n    }\r\n    if (monthFormat === \"MMM\") {\r\n      if (monthString === \"Jan\") return 0;\r\n      if (monthString === \"Feb\") return 1;\r\n      if (monthString === \"Mar\") return 2;\r\n      if (monthString === \"Apr\") return 3;\r\n      if (monthString === \"May\") return 4;\r\n      if (monthString === \"Jun\") return 5;\r\n      if (monthString === \"Jul\") return 6;\r\n      if (monthString === \"Aug\") return 7;\r\n      if (monthString === \"Sep\") return 8;\r\n      if (monthString === \"Oct\") return 9;\r\n      if (monthString === \"Nov\") return 10;\r\n      if (monthString === \"Dec\") return 11;\r\n    }\r\n    if (monthFormat === \"MMMM\") {\r\n      if (monthString === \"January\") return 0;\r\n      if (monthString === \"February\") return 1;\r\n      if (monthString === \"March\") return 2;\r\n      if (monthString === \"April\") return 3;\r\n      if (monthString === \"May\") return 4;\r\n      if (monthString === \"June\") return 5;\r\n      if (monthString === \"July\") return 6;\r\n      if (monthString === \"August\") return 7;\r\n      if (monthString === \"September\") return 8;\r\n      if (monthString === \"October\") return 9;\r\n      if (monthString === \"November\") return 10;\r\n      if (monthString === \"December\") return 11;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const getDayByFormat = (monthString, monthFormat)=>{\r\n    if (Number.isNaN(monthString) || Number(monthString) < 1 || Number(monthString) > 31) return null;\r\n\r\n    return Number(monthString);\r\n  };\r\n\r\n  return new Date(\r\n    Date.UTC(\r\n      getDatePartByFormat(dateString, dateStringFormat, yearFormatRegEx, getYearByFormat),\r\n      getDatePartByFormat(dateString, dateStringFormat, monthFormatRegEx, getMonthIndexByFormat),\r\n      getDatePartByFormat(dateString, dateStringFormat, dayFormatRegEx, getDayByFormat)\r\n    )\r\n  );\r\n};\r\n\r\nexport const convertDateToFullLocaleDateString = date=>{\r\n  return `${getMonthFromNumber(date.getUTCMonth())} ${date.getUTCDate()}, ${date.getUTCFullYear()}`;\r\n};\r\n","import {getSheetsSpreadsheetValues, updateSheetsSpreadsheetValues} from './../googleApi';\r\nimport {throwException} from './../utilities';\r\n\r\nexport const getTransactions = async ()=>{\r\n  try {\r\n    return await getSheetsSpreadsheetValues(\"Transactions Data\");\r\n  }\r\n  catch (err) {\r\n    throwException(err, false);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const updateTransactions = async transactions=>{\r\n  try {\r\n    return await updateSheetsSpreadsheetValues(\"Transactions Data\", transactions);\r\n  }\r\n  catch (err) {\r\n    throwException(err, false);\r\n    return [];\r\n  }\r\n};\r\n","import {getSheetsSpreadsheetValues} from './../googleApi';\r\nimport {throwException} from './../utilities';\r\n\r\nexport const getBudgetsData = async ()=>{\r\n  try {\r\n    return await getSheetsSpreadsheetValues(\"Budgets Data\");\r\n  }\r\n  catch (err) {\r\n    throwException(err, false);\r\n    return [];\r\n  }\r\n};\r\n","import {getSheetsSpreadsheetValues} from './../googleApi';\r\nimport {throwException} from './../utilities';\r\n\r\nexport const getAccountsData = async ()=>{\r\n  try {\r\n    return await getSheetsSpreadsheetValues(\"Accounts Data\");\r\n  }\r\n  catch (err) {\r\n    throwException(err, false);\r\n    return [];\r\n  }\r\n};\r\n","import {getSheetsSpreadsheetValues} from './../googleApi';\r\nimport {throwException} from './../utilities';\r\n\r\nexport const getAccountData = async ()=>{\r\n  try {\r\n    return await getSheetsSpreadsheetValues(\"Account Data\");\r\n  }\r\n  catch (err) {\r\n    throwException(err, false);\r\n    return [];\r\n  }\r\n};\r\n","import {useEffect} from 'react';\r\n\r\nconst useConsoleLog = (object, ...args)=>{\r\n  return useEffect(()=>console.log(args[0], object, ...args.slice(1)), [object, args])\r\n};\r\n\r\nexport default useConsoleLog;\r\n","import {useState, useEffect} from 'react';\r\n\r\nconst useScript = (src, optionsParam)=>{\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    new Promise((resolve, reject)=>{\r\n      //Create default options\r\n      const defaultOptions = {\r\n        async: true,\r\n      };\r\n\r\n      //Create the script tag that will be attached to the DOM\r\n      const script = document.createElement(\"script\");\r\n\r\n      //Combine the options, overwriting the defaults\r\n      const options = {\r\n        ...defaultOptions,\r\n        ...optionsParam,\r\n      };\r\n\r\n      //Attach the options to the script tag\r\n      Object.entries(options).forEach(([option, value])=>script[option] = value);\r\n\r\n      //Attach the src to the script tag\r\n      script.src = src;\r\n\r\n      const onLoad = event=>{\r\n        setIsLoaded(true)\r\n        return resolve(event);\r\n      };\r\n\r\n      const onError = event=>{\r\n        return reject(event);\r\n      };\r\n\r\n      //Create onload & onerror callbacks\r\n      script.addEventListener(\"load\", onLoad)\r\n      script.addEventListener(\"error\", onError);\r\n\r\n      document.body.appendChild(script);\r\n\r\n      return ()=>{\r\n        document.body.removeChild(script);\r\n        setIsLoaded(false);\r\n      }\r\n    });\r\n  }, [src, optionsParam]);\r\n\r\n  return isLoaded;\r\n};\r\n\r\nexport default useScript;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport {getBudgetCycleFromDate, isAllTransactionsBudgetCycle} from './../utilities';\r\n\r\nconst isTransactionWithinBudgetCycle = (transaction, budgetCycle)=>{\r\n  return getBudgetCycleFromDate(transaction.BudgetCycle || transaction.TransactionDate).getTime() === budgetCycle.getTime();\r\n};\r\n\r\nconst useBudgetCycleTransactions = (transactions, budgetCycle)=>{\r\n  //Declare functions\r\n  const isPaymentTransaction = transaction=>{\r\n    return (\r\n      transaction.Type === \"Payment\" ||\r\n      transaction.Description.match(/(?:MOBILE TO \\*{12}(\\d{4}) )?CREDIT CARD PAYMENT(?: (?:MOBILE APP PAYMENT|ONLINE BANKING TRANSFER) TO \\d{4} \\d{6}\\*{6}(\\d{4}))?/i) ||\r\n      transaction.Description.match(/PAYMENT - \\w{5} \\w{3} \\w{7} \\w{2}/i)\r\n    )\r\n  };\r\n\r\n  const isTransferWithCorrespondingNegativeTransfer = transaction=>{\r\n    //Removes transactions that are transfers with corresponding credit/debit transfers in a different account\r\n    return (\r\n      [\"Transfer\", \"Deposit\"].includes(transaction.Type) &&\r\n      transactions.find(transaction2=>\r\n        transaction.TransactionDate.getTime()===transaction2.TransactionDate.getTime() &&\r\n        transaction.Amount===-transaction2.Amount &&\r\n        (typeof transaction.DescriptionDisplay === \"string\" && transaction.DescriptionDisplay.match(/\\*(\\d{4})/)[1]) === (transaction2.AccountNumber && transaction2.AccountNumber.match(/\\*(\\d{4})/)[1]) &&\r\n        (typeof transaction.AccountNumber === \"string\" && transaction.AccountNumber.match(/\\*(\\d{4})/)[1]) === (transaction2.DescriptionDisplay && transaction2.DescriptionDisplay.match(/\\*(\\d{4})/)[1])\r\n      )\r\n    )\r\n  };\r\n\r\n  const isIncome = transaction=>{\r\n    return [\"Infor payroll\", \"Other income\"].includes(transaction.Category);\r\n  };\r\n\r\n  const isIncomeTransaction = transaction=>{\r\n    return transaction.Amount >= 0 && !isPaymentTransaction(transaction);\r\n  };\r\n\r\n  const isExpenseTransaction = transaction=>{\r\n    return transaction.Amount < 0 && !isPaymentTransaction(transaction);\r\n  };\r\n\r\n  const getLastBudgetCycleIncomeTransactions = transactions=>{\r\n    //Get income transactions from last budget cycle\r\n    if (!transactions.length) return [];\r\n\r\n    return transactions.filter(transaction=>isIncome(transaction));\r\n  };\r\n\r\n  const getCurrentBudgetCycleIncomeTransactions = transactions=>{\r\n    //Get other income transactions from this budget cycle\r\n    if (!transactions.length) return [];\r\n\r\n    return transactions.filter(transaction=>!isIncome(transaction) && isIncomeTransaction(transaction));\r\n  };\r\n\r\n  const getCurrentBudgetCycleExpenseTransactions = transactions=>{\r\n    //Get expense transactions from this budget cycle\r\n    if (!transactions.length) return [];\r\n\r\n    return transactions.filter(transaction=>![\"Infor payroll\", \"Other income\"].includes(transaction.Category) && isExpenseTransaction(transaction));\r\n  };\r\n\r\n  const getBudgetCycleTransactions = (transactions, budgetCycle)=>{\r\n    //Get transactions marked with this budgetCycle\r\n    // (or with a Date of this budget cycle, if no BudgetCycle)\r\n    const currentBudgetCycleTransactions = (\r\n      //If \"All transactions\", use all transactions, instead of current budgetCycleTransactions\r\n      isAllTransactionsBudgetCycle(budgetCycle) ?\r\n      transactions.filter(transaction=>\r\n        //Remove corresponding credit/debit transfers\r\n        !isTransferWithCorrespondingNegativeTransfer(transaction)\r\n      ) :\r\n      transactions.filter(transaction=>\r\n        //Transactions with this budget cycle\r\n        isTransactionWithinBudgetCycle(transaction, budgetCycle)\r\n        &&\r\n        //Remove corresponding credit/debit transfers\r\n        !isTransferWithCorrespondingNegativeTransfer(transaction)\r\n      )\r\n    );\r\n\r\n    console.log(\r\n      \"useBudgetCycleTransactions filtered corresponding credit/debit transfers\",\r\n      transactions.filter(transaction=>\r\n        isTransactionWithinBudgetCycle(transaction, budgetCycle)\r\n        &&\r\n        //Remove payment transactions\r\n        !(transaction.Type === \"Payment\")\r\n        &&\r\n        isTransferWithCorrespondingNegativeTransfer(transaction)\r\n      )\r\n    );\r\n\r\n    //Get last budget cycle's income\r\n    const lastBudgetCycleIncomeTransactions = getLastBudgetCycleIncomeTransactions(currentBudgetCycleTransactions, budgetCycle);\r\n\r\n    //Get this budget cycle's other income\r\n    const currentBudgetCycleIncomeTransactions = getCurrentBudgetCycleIncomeTransactions(currentBudgetCycleTransactions, budgetCycle);\r\n\r\n    //Get this month's transactions (minus income)\r\n    const currentBudgetCycleExpenseTransactions = getCurrentBudgetCycleExpenseTransactions(currentBudgetCycleTransactions, budgetCycle);\r\n\r\n    const budgetCycleTransactionsReturn = {\r\n      income: [...lastBudgetCycleIncomeTransactions, ...currentBudgetCycleIncomeTransactions],\r\n      expenses: currentBudgetCycleExpenseTransactions,\r\n      get all() {return [...this.income, ...this.expenses].flat()},\r\n    };\r\n\r\n    console.log(\"budgetCycleTransactions\", budgetCycleTransactionsReturn);\r\n\r\n    return budgetCycleTransactionsReturn;\r\n  };\r\n\r\n  //Initialize state\r\n  const [budgetCycleTransactions, setBudgetCycleTransactions] = useState(getBudgetCycleTransactions(transactions, budgetCycle));\r\n\r\n  //Whenever transactions or budgetCycle changes,\r\n  // update state\r\n  useEffect(()=>\r\n    setBudgetCycleTransactions(getBudgetCycleTransactions(transactions, budgetCycle))\r\n  , [transactions, budgetCycle]);\r\n\r\n  //Return the state\r\n  return budgetCycleTransactions;\r\n};\r\n\r\nexport default useBudgetCycleTransactions;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport {getBudgetCycleFromDate} from './../utilities';\r\n\r\nconst useBudgetCycleBudgets = (budgetsData, budgetCycle)=>{\r\n  //Declare functions\r\n  const getBudgetCycleBudgets = (budgetsData, budgetCycle)=>{\r\n    const filteredBudgets = budgetsData.filter(b=>b.BudgetCycle.getTime() === budgetCycle.getTime());\r\n    console.log(\"budgetCycleBudgets\", filteredBudgets);\r\n    return filteredBudgets;\r\n  };\r\n\r\n  //Initialize state\r\n  const [budgetCycleBudgets, setBudgetCycleBudgets] = useState(getBudgetCycleBudgets(budgetsData, budgetCycle));\r\n\r\n  //Whenever transactions or budgetCycle changes,\r\n  // update state\r\n  useEffect(()=>\r\n    setBudgetCycleBudgets(getBudgetCycleBudgets(budgetsData, budgetCycle))\r\n  , [budgetsData, budgetCycle]);\r\n\r\n  //Return the state\r\n  return budgetCycleBudgets;\r\n};\r\n\r\nexport default useBudgetCycleBudgets;\r\n","import {Link} from 'react-router-dom';\r\nimport {useState, useEffect, useRef} from 'react';\r\n\r\nimport './index.scss';\r\n\r\nconst Logo = ({ light, scrollIn, onLogoTextScrollIn })=>{\r\n  //Declare variables\r\n  const [isLogoTextScrolledIn, setIsLogoTextScrolledIn] = useState(scrollIn === true ? false : undefined)\r\n  const [isLoadingAnimationComplete, setIsLoadingAnimationComplete] = useState(scrollIn === true && false)\r\n\r\n  let isLoadingAnimationCompleteTimeout = useRef(null);\r\n  let textScrollInTimeout = useRef(null);\r\n  const logoText = useRef(null);\r\n\r\n  //\r\n  useEffect(()=>{\r\n    if (!(isLoadingAnimationComplete === true)) return;\r\n    if (onLogoTextScrollIn) onLogoTextScrollIn();\r\n  }, [isLoadingAnimationComplete]);\r\n\r\n  //When the component mounts, scroll the log in, if requested\r\n  useEffect(()=>{\r\n    if (!(scrollIn === true))return;\r\n    isLoadingAnimationCompleteTimeout.current = window.setTimeout(()=>setIsLoadingAnimationComplete(true), 2000);\r\n    textScrollInTimeout.current = window.setTimeout(()=>{\r\n      if (!logoText.current) return;\r\n      setIsLogoTextScrolledIn(true);\r\n    }, 1000);\r\n\r\n    return ()=>{\r\n      window.clearTimeout(isLoadingAnimationCompleteTimeout.current);\r\n      window.clearTimeout(textScrollInTimeout.current);\r\n    };\r\n  }, [scrollIn, logoText.current]);\r\n\r\n  return (\r\n    <Link className={`logo navbar-brand d-flex align-items-center me-0 ${(light !== undefined ? \"text-light\" : \"\")}`} to=\"/\">\r\n      <i className={`logo-icon dashboard-header-logo fas fa-sliders-h  ${(light !== undefined ? \"\" : \"text-primary\")} fs-3`}></i>\r\n      <h1 className={`logo-text display-5 ms-2 mb-0 ${(isLogoTextScrolledIn===false ? \"hidden\" : (isLogoTextScrolledIn===true ? \"scrolled-in\" : \"\"))}`} ref={logoText}>ldgr</h1>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import {signIn} from './../../googleApi'\r\n\r\nimport './index.scss';\r\n\r\nconst GoogleApiSigninButton = ({ isReadyForSignIn })=>{\r\n  return (\r\n    <button className=\"btn btn-primary\" type=\"button\" onClick={signIn} disabled={!isReadyForSignIn}>Sign in with Google</button>\r\n  );\r\n};\r\n\r\nexport default GoogleApiSigninButton;\r\n","import Logo from './../Logo';\r\nimport GoogleApiSignInButton from './../GoogleApiSignInButton';\r\n\r\nimport './index.scss';\r\n\r\nconst SignInView = ({ isReadyForSignIn })=>{\r\n  return (\r\n    <div className=\"view signin-view container-fluid\">\r\n      <div className=\"signin-view-container container-fluid d-flex flex-column justify-content-center align-items-center\">\r\n        <Logo />\r\n        <GoogleApiSignInButton isReadyForSignIn={isReadyForSignIn} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignInView;\r\n","// # MONTH PICKER\r\n//\r\n// Month date picker that will return the UTC Date of the chosen month (i.e. 2022-03-01T00:00:00.000Z)\r\n// In month (default) view, you will see the 12 months to choose from, along with the current value's month highlighted (if also on the current value's year)\r\n// When going into year view, you will see the 10-year span of the currently selected year, as well as the currently selected year (not the current value's year) highlighted\r\n\r\n\r\nimport {useState, useEffect} from 'react';\r\n\r\nimport {getBudgetCycleFromDate, getBudgetCycleString, getBudgetCycleFromBudgetCycleString} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst MonthPicker = ({value:initialValue, onChange:onChangeProp, onToggle:onToggleProp})=>{\r\n  const isValidInitialDate = initialValue instanceof Date && !isNaN(initialValue.getTime());\r\n\r\n  const MIN_DATE = new Date(-8640000000000000);\r\n  const MAX_DATE = new Date(8640000000000000);\r\n\r\n  const getYearRangeMin = year=>{\r\n    return Math.floor(year/10)*10;\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  const startingValue = (isValidInitialDate ? initialValue : currentDate);\r\n\r\n  const [value, setValue] = useState(getBudgetCycleFromDate(startingValue));\r\n  const [selectedYear, setSelectedYear] = useState(startingValue.getUTCFullYear());\r\n  const [selectedMonth, setSelectedMonth] = useState(startingValue.getUTCMonth());\r\n  const [isInYearView, setIsInYearView] = useState(false);\r\n  const [yearRangeMin, setYearRangeMin] = useState(getYearRangeMin(selectedYear));\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const startYear = Math.floor(selectedYear/10)*10-1;\r\n  const endYear = Math.ceil(selectedYear/10)*10;\r\n\r\n  const months = [\r\n    {name: \"January\", monthIndex: 0},\r\n    {name: \"February\", monthIndex: 1},\r\n    {name: \"March\", monthIndex: 2},\r\n    {name: \"April\", monthIndex: 3},\r\n    {name: \"May\", monthIndex: 4},\r\n    {name: \"June\", monthIndex: 5},\r\n    {name: \"July\", monthIndex: 6},\r\n    {name: \"August\", monthIndex: 7},\r\n    {name: \"September\", monthIndex: 8},\r\n    {name: \"October\", monthIndex: 9},\r\n    {name: \"November\", monthIndex: 10},\r\n    {name: \"December\", monthIndex: 11},\r\n  ];\r\n\r\n  //Create helper functions\r\n  const getMonthAsDate = (year, month)=>{\r\n    return getBudgetCycleFromDate(new Date(year, month));\r\n  };\r\n\r\n  const setSelectedYearWrapper = value=>{\r\n    setSelectedYear(previousSelectedYear=>{\r\n      if(typeof value === \"function\") value = value(previousSelectedYear);\r\n      return Math.max(Math.min(value, MAX_DATE.getUTCFullYear()), MIN_DATE.getUTCFullYear());\r\n    });\r\n  };\r\n\r\n  const isGrayedYear = selectedYear=>{\r\n    return selectedYear === yearRangeMin-1 || selectedYear === yearRangeMin+10;\r\n  };\r\n\r\n  const setYearRangeMinWrapper = value=>{\r\n    setYearRangeMin(previousYearRangeMin=>{\r\n      if(typeof value === \"function\") value = value(previousYearRangeMin);\r\n      return Math.max(Math.min(value, MAX_DATE.getUTCFullYear()), MIN_DATE.getUTCFullYear());\r\n    });\r\n  }\r\n\r\n\r\n  //Create event listeners\r\n  const onArrowClick = event=>{\r\n    if (!isInYearView) {\r\n      const increment = Number(event.target.getAttribute(\"data-increment\"));\r\n      if (isNaN(increment)) return;\r\n      return setSelectedYearWrapper(previousSelectedYear=>previousSelectedYear+increment);\r\n    }\r\n\r\n    const increment = Number(event.target.getAttribute(\"data-increment\"));\r\n    if (isNaN(increment)) return;\r\n    return setYearRangeMinWrapper(previousYearRangeMin=>previousYearRangeMin+(increment*10));\r\n  };\r\n\r\n  const onSelectedYearClick = event=>{\r\n    //Whether we were or weren't in year mode already, set (or keep) true\r\n    setIsInYearView(true);\r\n  };\r\n\r\n  const onToggle = event=>{\r\n    setIsOpen(previousIsOpen=>!previousIsOpen);\r\n  };\r\n\r\n  const onChange = event=>{\r\n    const datePart = event.target.getAttribute(\"data-datepart\");\r\n\r\n    //If no month or year value can be determined,\r\n    // just close the month picker\r\n    if (![\"year\",\"month\"].includes(datePart)) return setIsOpen(false);\r\n\r\n    //Otherwise, get the newly selected value\r\n    const newSelection = Number(event.target.getAttribute(`data-${datePart}`));\r\n\r\n    //If in month view, select & forward the new date value\r\n    if (!isInYearView) {\r\n      //Update the selected month\r\n      setSelectedMonth(newSelection);\r\n\r\n      //Close the month picker\r\n      setIsOpen(false);\r\n\r\n      //Also, update the current value in state\r\n      const newValue = getMonthAsDate(datePart === \"year\" ? newSelection : selectedYear, datePart === \"month\" ? newSelection : selectedMonth);\r\n      setValue(newValue);\r\n      //console.log(newValue.toJSON());\r\n\r\n      //Forward the newly selected value\r\n      if(onChangeProp) onChangeProp(newValue);\r\n      return;\r\n    }\r\n\r\n    //Otherwise, a year was clicked on\r\n\r\n    //If clicked on a grayed out year, scroll the year range\r\n    if (isGrayedYear(newSelection))\r\n      //Update the value\r\n      return setYearRangeMinWrapper(Math.floor(newSelection/10)*10);\r\n\r\n    //Otherwise, a new year has been selected\r\n    setSelectedYearWrapper(newSelection);\r\n    setIsInYearView(false);\r\n    return;\r\n  };\r\n\r\n  //Create side effects\r\n\r\n  //WHen the inital value passed in changes, update the value in state\r\n  useEffect(()=>{\r\n    if(!initialValue) return;\r\n    const value = getBudgetCycleFromBudgetCycleString(initialValue);\r\n    if(!value) return;\r\n    setValue(value);\r\n  }, [initialValue]);\r\n\r\n  return (\r\n    <div className=\"month-picker-container\">\r\n      <button className=\"month-picker-toggle\" type=\"button\">\r\n        <i className={`month-picker-toggle-icon fas ${isOpen ? \"fa-calendar-minus\" : \"fa-calendar-plus\"}`} onClick={onToggle}>\r\n        </i>\r\n      </button>\r\n      {\r\n        !isOpen ?\r\n        null : (\r\n        <div className=\"month-picker\">\r\n          <div className=\"month-picker-header\">\r\n            <button className=\"month-picker-header-arrow\" type=\"button\" data-increment=\"-1\" {...(selectedYear <= MIN_DATE.getUTCFullYear() && {disabled: true})} onClick={onArrowClick}><i className=\"fas fa-chevron-left\"></i></button>\r\n            <button className=\"month-picker-header-year\" type=\"button\" {...(!isInYearView && {onClick: onSelectedYearClick})}>{!isInYearView ? selectedYear.toString() : `${yearRangeMin.toString()}-${(yearRangeMin+9).toString()}`}</button>\r\n            <button className=\"month-picker-header-arrow\" type=\"button\" data-increment=\"1\" {...(selectedYear >= MAX_DATE.getUTCFullYear() && {disabled: true})} onClick={onArrowClick}><i className=\"fas fa-chevron-right\"></i></button>\r\n          </div>\r\n          {\r\n            !isInYearView ?\r\n            (\r\n              <div className=\"grid month-picker-grid\">\r\n                {months.map(({name, monthIndex})=>(\r\n                  <div key={monthIndex} className={`grid-item month-picker-grid-month${monthIndex === value.getUTCMonth() && selectedYear === value.getUTCFullYear() ? \" selected\" : \"\"}`} data-datepart=\"month\" data-month={monthIndex} onClick={onChange}>{name}</div>\r\n                ))}\r\n              </div>\r\n            ) :\r\n            (\r\n              <div className=\"grid year-picker-grid\">\r\n                {Array(12).fill().map((el,i)=>{\r\n                    const y = yearRangeMin-1+i;\r\n                    return <div key={i} className={`grid-item year-picker-grid-year${y === selectedYear ? \" selected\" : \"\"}${isGrayedYear(y) ? \" grayed\" : \"\"}`} data-datepart=\"year\" data-year={y} onClick={onChange}>{y}</div>\r\n                  })}\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthPicker;\r\n","import {getBudgetCycleFromDate, getBudgetCycleString, getBudgetCycleDescription, isAllTransactionsBudgetCycle} from './../../utilities';\r\n\r\nimport MonthPicker from './../MonthPicker';\r\n\r\nimport './index.scss';\r\n\r\nconst DashboardBudgetCycleDropdown = ({ transactions, budgetCycle, allBudgetCycles, onChange:onChangeProp, squashed })=>{\r\n  const onClick = event=>{\r\n    const epochTimeAttribute = event.target.getAttribute(\"data-budget-cycle\");\r\n    if (!epochTimeAttribute || isNaN(epochTimeAttribute)) return;\r\n    const epochTime = Number(epochTimeAttribute);\r\n    const budgetCycle = getBudgetCycleFromDate(new Date(epochTime));\r\n    onChangeProp(budgetCycle);\r\n  };\r\n\r\n  const arrowOnClick = increment=>{\r\n    const allBudgetCyclesSorted = [...allBudgetCycles].sort((a,b)=>(a.getTime() === b.getTime() ? 0 : (a.getTime() < b.getTime() ? -1 : 1))); //sort() is in-place--create a new array using [...]\r\n    console.log(\"test1: \", allBudgetCyclesSorted)\r\n    console.log(\"test2: \", budgetCycle, allBudgetCyclesSorted.indexOf(budgetCycle), increment)\r\n    const newBudgetCycle = allBudgetCyclesSorted[(allBudgetCyclesSorted.indexOf(allBudgetCyclesSorted.find(b=>b.getTime() === budgetCycle.getTime()))+increment+allBudgetCyclesSorted.length)%allBudgetCyclesSorted.length];\r\n    console.log(\"test3: \", newBudgetCycle)\r\n    onChangeProp(newBudgetCycle);\r\n  };\r\n\r\n  const incrementBudgetCycle = ()=>{\r\n    return arrowOnClick(1);\r\n  };\r\n\r\n  const decrementBudgetCycle = ()=>{\r\n    return arrowOnClick(-1);\r\n  };\r\n\r\n  const onMonthPickerChange = value=>{\r\n    onChangeProp(value);\r\n  };\r\n\r\n  return (\r\n    <div className={`dashboard-month-dropdown ${squashed ? \"squashed\" : \"\"}`}>\r\n      <button className=\"dashboard-month-dropdown-arrow dashboard-month-dropdown-arrow-left\" type=\"button\" onClick={decrementBudgetCycle}>\r\n        <i className=\"fas fa-chevron-left\"></i>\r\n      </button>\r\n      <div className=\"dashboard-month-dropdown-container dropdown\">\r\n        <button id=\"dashboardMonthDropdown\" className=\"dashboard-month-dropdown-toggle btn dropdown-toggle container-fluid\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n          <strong className=\"dashboard-month-dropdown-month h2 mb-0\">\r\n            {getBudgetCycleString(budgetCycle)}\r\n          </strong>\r\n          <em className=\"dashboard-month-dropdown-month-description text-muted\">\r\n            {getBudgetCycleDescription(budgetCycle) ? ` (${getBudgetCycleDescription(budgetCycle)})` : \"\"}\r\n          </em>\r\n        </button>\r\n        <MonthPicker value={getBudgetCycleString(budgetCycle)} onChange={onMonthPickerChange} />\r\n        <ul className=\"dropdown-menu container-fluid\" onClick={onClick}>\r\n          {allBudgetCycles.map(budgetCycle=>(\r\n            <>\r\n              <li key={budgetCycle.getTime()}>\r\n                <a className=\"dropdown-item\" data-budget-cycle={budgetCycle.getTime()}>\r\n                  {getBudgetCycleString(budgetCycle)}\r\n                  <em className=\"text-muted\">\r\n                  {getBudgetCycleDescription(budgetCycle) ? ` (${getBudgetCycleDescription(budgetCycle)})` : \"\"}\r\n                  </em>\r\n                </a>\r\n              </li>\r\n              {\r\n                isAllTransactionsBudgetCycle(budgetCycle) &&\r\n                (\r\n                  <li>\r\n                    <hr className=\"dropdown-divider\" />\r\n                  </li>\r\n                )\r\n              }\r\n            </>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <button className=\"dashboard-month-dropdown-arrow dashboard-month-dropdown-arrow-right\" type=\"button\" onClick={incrementBudgetCycle}>\r\n        <i className=\"fas fa-chevron-right\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardBudgetCycleDropdown;\r\n","import {convertNumberToCurrency} from './../../utilities';\r\nimport {useBudgetCycleTransactions} from './../../hooks';\r\n\r\nimport DashboardBudgetCycleDropdown from './../DashboardBudgetCycleDropdown';\r\n\r\nimport './index.scss';\r\n\r\nconst DashboardTop = ({ transactions, accountsData, accountData, budgetCycle, allBudgetCycles, onBudgetCycleChange })=>{\r\n  const budgetCycleTransactions = useBudgetCycleTransactions(transactions, budgetCycle);\r\n\r\n  const currentBudgetCycleIncome = budgetCycleTransactions.income.length && budgetCycleTransactions.income.reduce((total, t)=>total+=t.Amount, 0);\r\n  const currentBudgetCycleExpenses = budgetCycleTransactions.expenses.length && budgetCycleTransactions.expenses.reduce((total, t)=>total+=t.Amount, 0);\r\n  const currentBudgetCycleRemaining = currentBudgetCycleIncome+currentBudgetCycleExpenses;\r\n\r\n  const getLastUpdatedDate = transactions=>{\r\n    if (!transactions.length) return null;\r\n\r\n    return new Date(Math.max(...transactions.map(t=>[t.DateCreated.getTime(), t.DateModified.getTime()]).flat()));\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-top\">\r\n      <div className=\"dashboard-account-overview container-fluid py-2 px-3\">\r\n        <div className=\"container-fluid text-end text-muted my-2\">\r\n          Last Updated:&nbsp;\r\n          <span className=\"dashboard-accounts-total d-inline\">{getLastUpdatedDate(transactions) ? getLastUpdatedDate(transactions).toLocaleDateString(/*\"en-US\", {timeZone: \"UTC\"}*/) : \"--\"}</span>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"dashboard-accounts-total-container col text-center fw-bold h4 d-flex flex-column border-end border-2\">\r\n            Month Remaining:\r\n            <span className=\"dashboard-accounts-total\">{currentBudgetCycleRemaining ? convertNumberToCurrency(currentBudgetCycleRemaining) : \"--\"}</span>\r\n          </div>\r\n          <div className=\"dashboard-credit-score-container col text-center fw-bold h4 d-flex flex-column\">\r\n            Credit Score:\r\n            <span className=\"dashboard-credit-score\">{(accountData.length ? accountData.sort((a,b)=>a.LastUpdated+b.LastUpdated)/*sort descending*/.filter(record=>record.CreditScore)[0].CreditScore /*most recent LastUpdated*/ : \"--\")}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <DashboardBudgetCycleDropdown transactions={transactions} budgetCycle={budgetCycle} allBudgetCycles={allBudgetCycles} onChange={onBudgetCycleChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardTop;\r\n","import './index.scss';\r\n\r\nconst DashboardInsight = ({ insight })=>{\r\n  let insightTypeIconClass = insight.insightTypeIconClass;\r\n  if (!insightTypeIconClass) {\r\n    if (insight.type === \"primary\") {\r\n      insightTypeIconClass = \"fas fa-xs fa-info-circle\";\r\n    }\r\n    else if (insight.type === \"success\") {\r\n      insightTypeIconClass = \"fas fa-xs fa-check-circle\";\r\n    }\r\n    else if (insight.type === \"warning\") {\r\n      insightTypeIconClass = \"fas fa-xs fa-exclamation-triangle\";\r\n    }\r\n    else if (insight.type === \"danger\") {\r\n      insightTypeIconClass = \"fas fa-xs fa-times-circle\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`dashboard-insight alert alert-${insight.type}`}>\r\n      <div>\r\n        <i className={`${insight.iconClass ?? \"fas fa-sliders-h\"} me-1`}></i>\r\n        <h3 className=\"d-inline-block\">{insight.title}</h3>\r\n      </div>\r\n      <i className={`${insightTypeIconClass} me-1`}></i>\r\n      <span>{insight.text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardInsight;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport DashboardInsight from './../DashboardInsight';\r\nimport {getSumByProp, convertNumberToCurrency, getBudgetAmountSpentFromTransactions} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst DashboardInsights = ({ budgetCycle, budgetCycleTransactions, budgetCycleBudgets })=>{\r\n  const [insights, setInsights] = useState([]);\r\n\r\n  const runInsights = ()=>{\r\n    if (!budgetCycleTransactions.all.length || !budgetCycleBudgets.length) return;\r\n\r\n    //First, remove all insights\r\n    setInsights([]);\r\n\r\n    //Declare variables\r\n    const budgetCycleBudgetsWithSpent = budgetCycleBudgets.map(b=>({\r\n      ...b,\r\n      Spent: getBudgetAmountSpentFromTransactions(b.Name, budgetCycleTransactions.all) || 0,\r\n    }));\r\n\r\n    /* Check if less was earned for this month than expected */\r\n    const incomeExpected = budgetCycleBudgets.find(budgetData=>budgetData.Name===\"Infor payroll\").Amount;\r\n    const incomebudgetCycleBudgets = budgetCycleBudgets.filter(budgetData=>budgetData.Type===\"income\");\r\n    const incomeEarned = incomebudgetCycleBudgets.reduce((total,b)=>total+=getBudgetAmountSpentFromTransactions(b.Name, budgetCycleTransactions.all), 0);\r\n    const incomeUnderEarned = (incomeEarned - incomeExpected)*-1;\r\n    if (incomeUnderEarned > 0) {\r\n      const insight = {\r\n        type: \"danger\",\r\n        iconClass: \"fas fa-chart-pie\",\r\n        title: \"Analysis\",\r\n        text: `You have under-earned ${convertNumberToCurrency(incomeUnderEarned)} for this month.`\r\n      };\r\n      setInsights(previousInsights=>[...previousInsights, insight]);\r\n    }\r\n\r\n    /* Check if the user is over on any budgets */\r\n    const budgetsOver = budgetCycleBudgetsWithSpent.filter(budgetDataWithSpent=>![\"income\",\"savings\"].includes(budgetDataWithSpent.Type) && budgetDataWithSpent.Amount !== 0 && budgetDataWithSpent.Spent < budgetDataWithSpent.Amount);\r\n    if (budgetsOver.length) {\r\n      const insight = {\r\n        type: \"danger\",\r\n        iconClass: \"fas fa-chart-pie\",\r\n        title: \"Analysis\",\r\n        text: `You are overspent on ${budgetsOver.length} budgets.`\r\n      };\r\n      setInsights(previousInsights=>[...previousInsights, insight]);\r\n    }\r\n\r\n    /* Check if there is money left in the \"Personal Spending\" or \"Bradley\" budget */\r\n    const personalSpendingBudgets = budgetCycleBudgets.filter(budgetData=>[\"Personal Spending\", \"Bradley\", \"Sarah\"].includes(budgetData.Name));\r\n    personalSpendingBudgets.forEach(personalSpendingBudget=>{\r\n      const personalSpendingBudgetLeft = getBudgetAmountSpentFromTransactions(personalSpendingBudget.Name, budgetCycleTransactions.all) - personalSpendingBudget.Amount;\r\n      if (personalSpendingBudgetLeft > 0) {\r\n        const insight = {\r\n          type: \"primary\",\r\n          iconClass: \"fas fa-chart-pie\",\r\n          title: \"Analysis\",\r\n          text: `You have ${convertNumberToCurrency(personalSpendingBudgetLeft)} remaining in \"${personalSpendingBudget.Name}\".`\r\n        };\r\n        setInsights(previousInsights=>[...previousInsights, insight]);\r\n      }\r\n    });\r\n\r\n    /* Check if any bills were overpaid */\r\n    const overspentBillsWithSpent = budgetCycleBudgetsWithSpent.filter(budgetWithSpent=>budgetWithSpent.Type === \"bill\" && budgetWithSpent.Spent < budgetWithSpent.Amount);\r\n    if (overspentBillsWithSpent.length) {\r\n      overspentBillsWithSpent.forEach(overspentBillWithSpent=>{\r\n        const insight = {\r\n          type: \"danger\",\r\n          iconClass: \"fas fa-exclamation\",\r\n          title: \"Higher Bill\",\r\n          text: `You overpaid bill ${overspentBillWithSpent.Name} by ${convertNumberToCurrency(Math.abs(overspentBillWithSpent.Spent)-Math.abs(overspentBillWithSpent.Amount))}.`\r\n        };\r\n        console.log(overspentBillWithSpent)\r\n        setInsights(previousInsights=>[...previousInsights, insight]);\r\n      });\r\n    }\r\n\r\n    /* Check if a bill has gone up */\r\n    const bills = budgetCycleBudgets.filter(budgetData=>budgetData.type===\"bill\");\r\n    bills.forEach(bill=>{\r\n      const amountSpent = getBudgetAmountSpentFromTransactions(bill.name, budgetCycleTransactions.all)\r\n      if (!amountSpent) return;\r\n      if (Math.abs(amountSpent) > Math.abs(bill.amount)) {\r\n        const insight = {\r\n          type: \"warning\",\r\n          iconClass: \"fas fa-chart-bar\",\r\n          title: \"Trends\",\r\n          text: `Bill \"${bill.name}\" has gone up ${convertNumberToCurrency(Math.abs(amountSpent)-Math.abs(bill.amount))}.`\r\n        };\r\n        setInsights(previousInsights=>[...previousInsights, insight]);\r\n      }\r\n    });\r\n\r\n    /* Check how much money flexible money is left this budget cycle */\r\n    const totalIncome = getSumByProp(budgetCycleTransactions.income, \"Amount\");\r\n    const totalExpenses = getSumByProp(budgetCycleTransactions.expenses, \"Amount\");\r\n    const remainingBillsToBePaid =\r\n      /* Add a \"Spent\" key to each budget data */\r\n      budgetCycleBudgetsWithSpent\r\n      /* filter to only bills that have NOT been paid */\r\n      .filter(b=>b.Type===\"bill\" && b.Spent===0)\r\n      /* Get the sum of all the remaining money AFTER paid bills */\r\n      .reduce((total,b)=>total+=((b.Amount-b.Spent)*-1), 0)\r\n      /* Return the inverse (negative is surplus) */\r\n      *-1;\r\n    const leftoverPaidBillsMoney =\r\n      /* Add a \"Spent\" key to each budget data */\r\n      budgetCycleBudgetsWithSpent\r\n      /* filter to only bills that have been paid */\r\n      .filter(b=>b.Type===\"bill\" && b.Spent!==0)\r\n      /* Get the sum of all the remaining money AFTER paid bills */\r\n      .reduce((total,b)=>total+=((b.Amount-b.Spent)*-1), 0)\r\n    const remainingSavingsToBeSaved =\r\n      /* Add a \"Spent\" key to each budget data */\r\n      budgetCycleBudgetsWithSpent\r\n      /* filter to only savings */\r\n      .filter(b=>b.Type===\"savings\")\r\n      /* Get the sum of all the remaining money AFTER paid bills */\r\n      .reduce((total,b)=>total+=((b.Amount-b.Spent)*-1), 0)\r\n      /* Return the inverse (negative is surplus) */\r\n      *-1;\r\n    const remainingFlexibleSpendingMoney = totalIncome + totalExpenses + leftoverPaidBillsMoney + remainingBillsToBePaid + remainingSavingsToBeSaved;\r\n    console.log(remainingFlexibleSpendingMoney, totalIncome, totalExpenses, leftoverPaidBillsMoney, remainingBillsToBePaid, remainingSavingsToBeSaved)\r\n    if (remainingFlexibleSpendingMoney > 0) {\r\n      const insight = {\r\n        type: \"primary\",\r\n        iconClass: \"fas fa-chart-line\",\r\n        title: \"Projection\",\r\n        text: `You have ${convertNumberToCurrency(remainingFlexibleSpendingMoney)} of flexible money remaining.`\r\n      };\r\n      setInsights(previousInsights=>[...previousInsights, insight]);\r\n    }\r\n    else {\r\n      const insight = {\r\n        type: \"warning\",\r\n        iconClass: \"fas fa-chart-line\",\r\n        title: \"Projection\",\r\n        text: `You are ${convertNumberToCurrency(remainingFlexibleSpendingMoney)} in the negative of \"flexible\" money.`\r\n      };\r\n      setInsights(previousInsights=>[...previousInsights, insight]);\r\n    }\r\n\r\n    /* Check if there is money left to put into Savings */\r\n    const savingsBudgetData = budgetCycleBudgets.find(budgetData=>budgetData.Name===\"Savings\");\r\n    const savingsBudgetLeft = getBudgetAmountSpentFromTransactions(\"Savings\", budgetCycleTransactions.all) - savingsBudgetData.Amount;\r\n    if (savingsBudgetLeft > 0) {\r\n      const insight = {\r\n        type: \"primary\",\r\n        iconClass: \"fas fa-chart-pie\",\r\n        title: \"Analysis\",\r\n        text: `You have ${convertNumberToCurrency(savingsBudgetLeft)} more to put into \"Savings\".`\r\n      };\r\n      setInsights(previousInsights=>[...previousInsights, insight]);\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n    runInsights();\r\n  }, [budgetCycleTransactions, budgetCycleBudgets]);\r\n\r\n  return (\r\n    <div className=\"dashboard-insights container mt-5\">\r\n      <h2 className=\"text-center mb-4\">Insights</h2>\r\n      {insights.map((insight,i)=>(\r\n        <DashboardInsight key={i} insight={insight} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardInsights;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport {getSumByProp, getBudgetCycleFromDate, getBudgetAmountSpentFromTransactions} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst DashboardShowcase = ({ budgetCycle, budgetCycleTransactions, budgetCycleBudgets })=>{\r\n  //Current statuses\r\n  const budgetCycleStatuses = [\r\n    {\r\n      heading: \"Over-budget 😔\",\r\n      description: \"You have majorly overspent this month.\",\r\n      test: (budgetCycle, budgetCycleTransactions, budgetCycleBudgets)=>{\r\n        const isCurrentBudgetCycle = budgetCycle.getTime() === getBudgetCycleFromDate(new Date()).getTime();\r\n        const totalIncome = getSumByProp(budgetCycleTransactions.income, \"Amount\");\r\n        const totalExpenses = getSumByProp(budgetCycleTransactions.expenses, \"Amount\");\r\n        return isCurrentBudgetCycle && (totalIncome + totalExpenses) < 0;\r\n\t\t\t}\r\n    },\r\n    {\r\n      heading: \"Looking bad 😬\",\r\n      description: \"You are projected to overspend this month.\",\r\n      test: (budgetCycle, budgetCycleTransactions, budgetCycleBudgets)=>{\r\n        const isCurrentBudgetCycle = budgetCycle.getTime() === getBudgetCycleFromDate(new Date()).getTime();\r\n        const totalIncome = getSumByProp(budgetCycleTransactions.income, \"Amount\");\r\n        const totalExpenses = getSumByProp(budgetCycleTransactions.expenses, \"Amount\");\r\n        const remainingBillsToBePaid =\r\n          /* Add a \"Spent\" key to each budget data */\r\n          budgetCycleBudgets.map(b=>({\r\n            ...b,\r\n            Spent: getBudgetAmountSpentFromTransactions(b.Name, budgetCycleTransactions.all) || 0,\r\n          }))\r\n          /* filter to only bills that have NOT been paid */\r\n          .filter(b=>b.Type===\"bill\" && b.Spent===0)\r\n          /* Get the sum of all the remaining money AFTER paid bills */\r\n          .reduce((total,b)=>total+=((b.Amount-b.Spent)*-1), 0)\r\n          /* Return the inverse (negative is surplus) */\r\n          *-1;\r\n        const leftoverPaidBillsMoney =\r\n          /* Add a \"Spent\" key to each budget data */\r\n          budgetCycleBudgets.map(b=>({\r\n            ...b,\r\n            Spent: getBudgetAmountSpentFromTransactions(b.Name, budgetCycleTransactions.all) || 0,\r\n          }))\r\n          /* filter to only bills that have been paid */\r\n          .filter(b=>b.Type===\"bill\" && b.Spent!==0)\r\n          /* Get the sum of all the remaining money AFTER paid bills */\r\n          .reduce((total,b)=>total+=((b.Amount-b.Spent)*-1), 0)\r\n        const remainingSavingsToBeSaved =\r\n          /* Add a \"Spent\" key to each budget data */\r\n          budgetCycleBudgets.map(b=>({\r\n            ...b,\r\n            Spent: getBudgetAmountSpentFromTransactions(b.Name, budgetCycleTransactions.all) || 0,\r\n          }))\r\n          /* filter to only savings */\r\n          .filter(b=>b.Type===\"savings\")\r\n          /* Get the sum of all the remaining money AFTER paid bills */\r\n          .reduce((total,b)=>total+=((b.Amount-b.Spent)*-1), 0)\r\n          /* Return the inverse (negative is surplus) */\r\n          *-1;\r\n          const remainingFlexibleSpendingMoney = totalIncome + totalExpenses + leftoverPaidBillsMoney + remainingBillsToBePaid + remainingSavingsToBeSaved;\r\n        console.log(\"Budget status: \", remainingFlexibleSpendingMoney, isCurrentBudgetCycle, totalIncome, totalExpenses, remainingBillsToBePaid, leftoverPaidBillsMoney, remainingSavingsToBeSaved)\r\n        return isCurrentBudgetCycle && remainingFlexibleSpendingMoney < 0;\r\n\t\t\t}\r\n    },\r\n    {\r\n      heading: \"Getting tight 😯\",\r\n      description: \"You are running low on money.\",\r\n      test: (budgetCycle, budgetCycleTransactions, budgetCycleBudgets)=>{\r\n        const isCurrentBudgetCycle = budgetCycle.getTime() === getBudgetCycleFromDate(new Date()).getTime();\r\n        const totalIncome = getSumByProp(budgetCycleTransactions.income, \"Amount\");\r\n        const totalExpenses = getSumByProp(budgetCycleTransactions.expenses, \"Amount\");\r\n        const remainingBillsToBePaid =\r\n          /* Add a \"Spent\" key to each budget data */\r\n          budgetCycleBudgets.map(b=>({\r\n            ...b,\r\n            Spent: getBudgetAmountSpentFromTransactions(b.Name, budgetCycleTransactions.all) || 0,\r\n          }))\r\n          /* filter to only bills that have NOT been paid */\r\n          .filter(b=>b.Type===\"bill\" && b.Spent===0)\r\n          /* Get the sum of all the remaining money AFTER paid bills */\r\n          .reduce((total,b)=>total+=((b.Amount-b.Spent)*-1), 0)\r\n          /* Return the inverse (negative is surplus) */\r\n          *-1;\r\n        const leftoverPaidBillsMoney =\r\n          /* Add a \"Spent\" key to each budget data */\r\n          budgetCycleBudgets.map(b=>({\r\n            ...b,\r\n            Spent: getBudgetAmountSpentFromTransactions(b.Name, budgetCycleTransactions.all) || 0,\r\n          }))\r\n          /* filter to only bills that have been paid */\r\n          .filter(b=>b.Type===\"bill\" && b.Spent!==0)\r\n          /* Get the sum of all the remaining money AFTER paid bills */\r\n          .reduce((total,b)=>total+=((b.Amount-b.Spent)*-1), 0)\r\n        const remainingSavingsToBeSaved =\r\n          /* Add a \"Spent\" key to each budget data */\r\n          budgetCycleBudgets.map(b=>({\r\n            ...b,\r\n            Spent: getBudgetAmountSpentFromTransactions(b.Name, budgetCycleTransactions.all) || 0,\r\n          }))\r\n          /* filter to only savings */\r\n          .filter(b=>b.Type===\"savings\")\r\n          /* Get the sum of all the remaining money AFTER paid bills */\r\n          .reduce((total,b)=>total+=((b.Amount-b.Spent)*-1), 0)\r\n          /* Return the inverse (negative is surplus) */\r\n          *-1;\r\n          const remainingFlexibleSpendingMoney = totalIncome + totalExpenses + leftoverPaidBillsMoney + remainingBillsToBePaid + remainingSavingsToBeSaved;\r\n        return isCurrentBudgetCycle && remainingFlexibleSpendingMoney < 250;\r\n\t\t\t}\r\n    },\r\n    {\r\n      heading: \"All good! 💃\",\r\n      description: \"You are on track for this month.\",\r\n      test: (budgetCycle, budgetCycleTransactions, budgetCycleBudgets)=>{\r\n        const isCurrentBudgetCycle = budgetCycle.getTime() === getBudgetCycleFromDate(new Date()).getTime();\r\n        const totalIncome = getSumByProp(budgetCycleTransactions.income, \"Amount\");\r\n        const totalExpenses = getSumByProp(budgetCycleTransactions.expenses, \"Amount\");\r\n        const remainingBillsToBePaid =\r\n          /* Add a \"Spent\" key to each budget data */\r\n          budgetCycleBudgets.map(b=>({\r\n            ...b,\r\n            Spent: getBudgetAmountSpentFromTransactions(b.Name, budgetCycleTransactions.all) || 0,\r\n          }))\r\n          /* filter to only bills that have NOT been paid */\r\n          .filter(b=>b.Type===\"bill\" && b.Spent===0)\r\n          /* Get the sum of all the remaining money AFTER paid bills */\r\n          .reduce((total,b)=>total+=((b.Amount-b.Spent)*-1), 0)\r\n          /* Return the inverse (negative is surplus) */\r\n          *-1;\r\n        const leftoverPaidBillsMoney =\r\n          /* Add a \"Spent\" key to each budget data */\r\n          budgetCycleBudgets.map(b=>({\r\n            ...b,\r\n            Spent: getBudgetAmountSpentFromTransactions(b.Name, budgetCycleTransactions.all) || 0,\r\n          }))\r\n          /* filter to only bills that have been paid */\r\n          .filter(b=>b.Type===\"bill\" && b.Spent!==0)\r\n          /* Get the sum of all the remaining money AFTER paid bills */\r\n          .reduce((total,b)=>total+=((b.Amount-b.Spent)*-1), 0)\r\n        const remainingSavingsToBeSaved =\r\n          /* Add a \"Spent\" key to each budget data */\r\n          budgetCycleBudgets.map(b=>({\r\n            ...b,\r\n            Spent: getBudgetAmountSpentFromTransactions(b.Name, budgetCycleTransactions.all) || 0,\r\n          }))\r\n          /* filter to only savings */\r\n          .filter(b=>b.Type===\"savings\")\r\n          /* Get the sum of all the remaining money AFTER paid bills */\r\n          .reduce((total,b)=>total+=((b.Amount-b.Spent)*-1), 0)\r\n          /* Return the inverse (negative is surplus) */\r\n          *-1;\r\n          const remainingFlexibleSpendingMoney = totalIncome + totalExpenses + leftoverPaidBillsMoney + remainingBillsToBePaid + remainingSavingsToBeSaved;\r\n        return isCurrentBudgetCycle && remainingFlexibleSpendingMoney >= 250;\r\n\t\t\t}\r\n    },\r\n    //Past statuses\r\n    {\r\n      heading: \"Over-budget 😔\",\r\n      description: \"You overspent this month.\",\r\n      test: (budgetCycle, budgetCycleTransactions, budgetCycleBudgets)=>{\r\n        const isPastBudgetCycle = budgetCycle.getTime() < getBudgetCycleFromDate(new Date()).getTime();\r\n        const totalIncome = getSumByProp(budgetCycleTransactions.income, \"Amount\");\r\n        const totalExpenses = getSumByProp(budgetCycleTransactions.expenses, \"Amount\");\r\n        return isPastBudgetCycle && (totalIncome + totalExpenses) < 0;\r\n\t\t\t}\r\n    },\r\n    {\r\n      heading: \"Done 😌\",\r\n      description: \"You were on track for this month.\",\r\n      test: (budgetCycle, budgetCycleTransactions, budgetCycleBudgets)=>{\r\n        const isPastBudgetCycle = budgetCycle.getTime() < getBudgetCycleFromDate(new Date()).getTime();\r\n        const totalIncome = getSumByProp(budgetCycleTransactions.income, \"Amount\");\r\n        const totalExpenses = getSumByProp(budgetCycleTransactions.expenses, \"Amount\");\r\n        return isPastBudgetCycle && (totalIncome + totalExpenses) >= 0;\r\n\t\t\t}\r\n    },\r\n    //Future statuses\r\n    {\r\n      heading: \" 😔\",\r\n      description: \"You're going to overspend this month.\",\r\n      test: (budgetCycle, budgetCycleTransactions, budgetCycleBudgets)=>{\r\n        const isFutureBudgetCycle = budgetCycle.getTime() > getBudgetCycleFromDate(new Date()).getTime();\r\n        const totalIncome = getSumByProp(budgetCycleTransactions.income, \"Amount\");\r\n        const totalExpenses = getSumByProp(budgetCycleTransactions.expenses, \"Amount\");\r\n        return isFutureBudgetCycle && (totalIncome + totalExpenses) < 0;\r\n\t\t\t}\r\n    },\r\n    {\r\n      heading: \"Looking good 😌\",\r\n      description: \"You're going to be on track for this month.\",\r\n      test: (budgetCycle, budgetCycleTransactions, budgetCycleBudgets)=>{\r\n        const isFutureBudgetCycle = budgetCycle.getTime() > getBudgetCycleFromDate(new Date()).getTime();\r\n        const totalIncome = getSumByProp(budgetCycleTransactions.income, \"Amount\");\r\n        const totalExpenses = getSumByProp(budgetCycleTransactions.expenses, \"Amount\");\r\n        return isFutureBudgetCycle && (totalIncome + totalExpenses) >= 0;\r\n\t\t\t}\r\n    },\r\n  ];\r\n\r\n  const getBudgetCycleStatus = (budgetCycle, budgetCycleTransactions, budgetCycleBudgets)=>{\r\n    if (!budgetCycle || !budgetCycleTransactions.all.length || !budgetCycleBudgets.length) return null;\r\n    return budgetCycleStatuses.find(status=>status.test(budgetCycle, budgetCycleTransactions, budgetCycleBudgets));\r\n  };\r\n\r\n  const [budgetCycleStatus, setBudgetCycleStatus] = useState(getBudgetCycleStatus(budgetCycle, budgetCycleTransactions, budgetCycleBudgets));\r\n\r\n  useEffect(()=>\r\n    setBudgetCycleStatus(getBudgetCycleStatus(budgetCycle, budgetCycleTransactions, budgetCycleBudgets))\r\n  , [budgetCycle, budgetCycleTransactions, budgetCycleBudgets]);\r\n\r\n  return (\r\n    <div className=\"dashboard-showcase container d-flex flex-column justify-content-center align-items-center bg-primary text-light my-3 mx-auto\">\r\n      <i className=\"dashboard-showcase-icon fas fa-check-circle fa-2x mb-4\"></i>\r\n      <h3 className=\"dashboard-showcase-heading fw-bold h2\">{budgetCycleStatus?.heading}</h3>\r\n      <span className=\"dashboard-showcase-description h6 text-center\">{budgetCycleStatus?.description}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardShowcase;\r\n","import {useEffect} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nimport {useBudgetCycleTransactions, useBudgetCycleBudgets} from './../../hooks';\r\n\r\nimport './index.scss';\r\n\r\nimport DashboardTop from './../DashboardTop';\r\nimport DashboardInsights from './../DashboardInsights';\r\nimport DashboardShowcase from './../DashboardShowcase';\r\n\r\nconst DashboardView = ({ signedInUser, transactions, accountsData, accountData, budgetsData, budgetCycle, allBudgetCycles, onBudgetCycleChange, setFooterNavbar })=>{\r\n  //Send the route to the footer navbar\r\n  const route = useLocation().pathname;\r\n  useEffect(()=>{\r\n    setFooterNavbar(route);\r\n  }, [route]);\r\n\r\n  const budgetCycleTransactions = useBudgetCycleTransactions(transactions, budgetCycle);\r\n  const budgetCycleBudgets = useBudgetCycleBudgets(budgetsData, budgetCycle);\r\n\r\n  return (\r\n    <div className=\"view dashboard-view d-flex flex-column\">\r\n      <main className=\"main flex-grow-1\">\r\n        <DashboardTop transactions={transactions} accountsData={accountsData} accountData={accountData} budgetCycle={budgetCycle} allBudgetCycles={allBudgetCycles} onBudgetCycleChange={onBudgetCycleChange} />\r\n        <DashboardShowcase budgetCycle={budgetCycle} budgetCycleTransactions={budgetCycleTransactions} budgetCycleBudgets={budgetCycleBudgets} />\r\n        <DashboardInsights budgetCycle={budgetCycle} budgetCycleTransactions={budgetCycleTransactions} budgetCycleBudgets={budgetCycleBudgets} />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardView;\r\n","import './index.scss';\r\n\r\nconst BudgetGraphStatusIcon = ({ budget, overBudget, overEarned })=> {\r\n  let iconClass;\r\n  let iconText;\r\n  let iconColor;\r\n\r\n  if (budget.Type === \"bill\") {\r\n    if (budget.amountSpent) {\r\n      if (!overBudget) {\r\n        iconClass = \"fas fa-check-circle\";\r\n        iconText = \"Paid\";\r\n        iconColor = \"success\";\r\n      }\r\n      else {\r\n        iconClass = \"fas fa-times-circle\";\r\n        iconText = \"Overpaid\";\r\n        iconColor = \"danger\";\r\n      }\r\n    }\r\n    else {\r\n      iconClass = \"\";\r\n      iconText = \"Pending\";\r\n      iconColor = \"secondary\";\r\n    }\r\n  }\r\n  if (budget.Type === \"income\") {\r\n    if (budget.amountSpent) {\r\n      //if (budget.amountSpent === budget.Amount) {\r\n      //Acount for floating-point errors\r\n      if (\r\n          0 <= Math.abs(budget.amountSpent-budget.Amount) &&\r\n          Math.abs(budget.amountSpent-budget.Amount) < 0.000000000001\r\n        ) {\r\n        iconClass = \"fas fa-check-circle\";\r\n        iconText = \"Earned\";\r\n        iconColor = \"success\";\r\n      }\r\n      else if (overEarned) {\r\n        iconClass = \"fas fa-check-circle\";\r\n        iconText = \"Over-earned\";\r\n        iconColor = \"success\";\r\n      }\r\n      else if (!overEarned) {\r\n        iconClass = \"fas fa-exclamation-triangle\";\r\n        iconText = \"Under-earned\";\r\n        iconColor = \"warning\";\r\n      }\r\n    }\r\n  }\r\n\r\n  //If there's an icon to render, render\r\n  if (iconText) {\r\n    return (\r\n      <div className={`budget-graph-status-icon-container d-inline-block badge rounded-pill text-${iconColor} bg-light ms-1 border border-${iconColor}`}>\r\n        <i className={`budget-graph-status-icon fas fa-xs ${iconClass} me-1`}></i>\r\n        <span>{iconText}</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //Otherwise, return null\r\n  return null;\r\n};\r\n\r\nexport default BudgetGraphStatusIcon;\r\n","import {convertNumberToCurrency} from './../../utilities';\r\n\r\nimport BudgetGraphStatusIcon from './../BudgetGraphStatusIcon';\r\n\r\nimport './index.scss';\r\n\r\nconst BudgetGraph = ({ budget })=>{\r\n  const isExpenseBudget = budget.Type !== \"income\";\r\n  const overBudget = (isExpenseBudget ? budget.amountSpent < budget.Amount : false);\r\n  const overEarned = (!isExpenseBudget ? budget.amountSpent > budget.Amount : false);\r\n\r\n  return (\r\n    <div className=\"budget-graph-container my-4\">\r\n      <h5 className=\"budget-graph-title d-inline-block\">{budget.Name}</h5>\r\n      <BudgetGraphStatusIcon budget={budget} overBudget={overBudget} overEarned={overEarned} />\r\n      <div className=\"budget-graph-bar-outer\">\r\n        <h6 className=\"budget-graph-bar-stats\" style={\r\n          {\r\n            color: (!overBudget\r\n              ? \"black\" //\"rgb(245,245,245)\"\r\n              : \"darkred\"\r\n            ),\r\n          }\r\n        }>\r\n          {convertNumberToCurrency(Math.abs(budget.amountSpent))} of {convertNumberToCurrency(Math.abs(budget.Amount))} {(isExpenseBudget ? \"spent\" : \"earned\")}\r\n        </h6>\r\n        <h6 className=\"budget-graph-bar-remaining text-muted\" >\r\n          {convertNumberToCurrency(budget.Amount - budget.amountSpent)} {(overBudget ? \"overspent\" : \"remaining\")}\r\n        </h6>\r\n        <div className=\"budget-graph-bar-inner\" style={\r\n          {\r\n            backgroundColor: (!isExpenseBudget ? \"green\" :  (overBudget ? \"red\" : budget.color)),\r\n            width: (overBudget\r\n              ? `calc(100% * ${(budget.amountSpent - budget.Amount)/budget.Amount})`\r\n              : `calc(100% * ${budget.amountSpent/budget.Amount})`\r\n            ),\r\n            left: (overBudget\r\n              ? \"unset\"\r\n              : 0\r\n            ),\r\n            right: (overBudget\r\n              ? 0\r\n              : \"unset\"\r\n            ),\r\n          }\r\n        }></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BudgetGraph;\r\n","import {useEffect} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nimport BudgetGraph from './../BudgetGraph';\r\nimport DashboardBudgetCycleDropdown from './../DashboardBudgetCycleDropdown';\r\n\r\nimport {getBudgetAmountSpentFromTransactions} from './../../utilities';\r\n\r\nimport {useBudgetCycleTransactions, useBudgetCycleBudgets} from './../../hooks';\r\n\r\nimport './index.scss';\r\n\r\nconst BudgetsView = ({ transactions, budgetsData, budgetCycle, allBudgetCycles, onBudgetCycleChange, setFooterNavbar })=>{\r\n  //Send the route to the footer navbar\r\n  const route = useLocation().pathname;\r\n  useEffect(()=>{\r\n    setFooterNavbar(route);\r\n  }, [route]);\r\n\r\n  const budgetCycleTransactions = useBudgetCycleTransactions(transactions, budgetCycle);\r\n  const budgetCycleBudgets = useBudgetCycleBudgets(budgetsData, budgetCycle);\r\n\r\n  return (\r\n    <div className=\"view budgets-view\">\r\n      <DashboardBudgetCycleDropdown transactions={transactions} budgetCycle={budgetCycle} allBudgetCycles={allBudgetCycles} onChange={onBudgetCycleChange} squashed />\r\n      <div className=\"container\">\r\n        <h1 className=\"page-title display-3\">Month Overview</h1>\r\n        <div className=\"budget-graphs\">\r\n\r\n          {\r\n            (\r\n              !budgetCycleBudgets ?\r\n              '' :\r\n              budgetCycleBudgets.map(budgetData=>\r\n                <BudgetGraph key={budgetData.Name} budget={{...budgetData, color: \"#2196f3\", amountSpent: getBudgetAmountSpentFromTransactions(budgetData.Name, budgetCycleTransactions.all)}}/>\r\n              )\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BudgetsView;\r\n","import {useState} from 'react';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionsImportForm = ({ isOpen, onSubmit:onSubmitProp, onFileInputChange:onFileInputChangeProp })=>{\r\n  const [scrapedTransactionsData, setScrapedTransactionsData] = useState(\"\");\r\n\r\n  const onTransactionsImportFormInputChange = event=>{\r\n    const scrapedText = event.target.value;\r\n    setScrapedTransactionsData(scrapedText);\r\n  };\r\n\r\n  const onTransactionsImportFormFileInputChange = async event=>{\r\n    //Prevent default behavior\r\n    event.preventDefault();\r\n\r\n    const transactionsDataFiles = [...event.target.files];\r\n\r\n    //Get the transactions data\r\n    const transactionsDataArray = [];\r\n    await Promise.all(  //Promise.all handles an array of Promises\r\n      transactionsDataFiles.map(async file=>{\r\n        const fileContent = await file.text();\r\n        transactionsDataArray.push(fileContent);\r\n      })\r\n    );\r\n\r\n    //Reset the file input\r\n    event.target.value = \"\";\r\n\r\n    //Call the parent handler\r\n    onFileInputChangeProp(transactionsDataArray);\r\n  };\r\n\r\n  const onSubmit = event=>{\r\n    //Prevent form submission\r\n    event.preventDefault();\r\n\r\n    //Save the current value\r\n    const scrapedTransactionsDataValue = scrapedTransactionsData;\r\n\r\n    //Reset the input\r\n    setScrapedTransactionsData(\"\");\r\n\r\n    //Send it to the parent\r\n    onSubmitProp(scrapedTransactionsDataValue);\r\n  };\r\n\r\n  return (\r\n    !isOpen ?\r\n    null :\r\n    <form className=\"transaction-import-form\" onSubmit={onSubmit}>\r\n      <div>\r\n        <label className=\"form-label\">Transactions</label>\r\n        <div className=\"input-group mb-2\">\r\n          <textarea id=\"transaction-import-input\" className=\"transaction-import-input form-control\" rows=\"1\" onChange={onTransactionsImportFormInputChange}></textarea>\r\n          <button className=\"btn btn-primary input-group-text\" type=\"submit\">Import</button>\r\n        </div>\r\n        <p className=\"form-text\">Paste transactions data for parsing.</p>\r\n        <div>\r\n          <label className=\"form-label\">Or, import a comma-separated values (*.csv) file.</label>\r\n          <input className=\"transaction-import-form-input-file form-control\" type=\"file\" accept=\".csv\" multiple onChange={onTransactionsImportFormFileInputChange} />\r\n        </div>\r\n        <div id=\"transaction-import-form-status\"></div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TransactionsImportForm;\r\n","// ## FEATUERS\r\n// - InputDropdown list opens when:\r\n//    * clicked anywhere inside of\r\n//    * when the .input-dropdown-input receives input\r\n//    * when the \"Up\" or \"Down\" keys are pressed with the .input-dropdown-input focused\r\n// - InputDropdown list closes when:\r\n//    * a selection is clicked or chosen with the \"Enter\" key\r\n//    * a click occurs outside of the InputDropdown\r\n//    * the InputDropdown loses focus (activates after 100ms, to not conflict with cilck events)\r\n//    * another element is focused on\r\n//    * the \"Esc\" key is pressed\r\n//    * the chevron is clicked while the InputDropdown is open\r\n// - InputDropdown list items can be selected by:\r\n//    * clicking on a list item using\r\n//    * using the \"Up\" and \"Down\" keys along with the \"Enter\" key (when .input-dropdown-input focused)\r\n// - InputDropdown list items can be filtered/highlighted by inputting into .input-dropdown-input\r\n// ## DESIGN\r\n// - .input-dropdown-input takes 100% of InputDropdown width\r\n// - .input-dropdown-list height maxes out and scrolls afterward\r\n// - .input-dropdown-list will scroll as selection moves\r\n// - .input-dropdown-list will only move the selection if the InputDropdown list was already open--if the .input-dropdown-list was opened using the \"Up\" or \"Down\" key, the selection will remain on the current value\r\n// ## OPTIONS\r\n// - setToStartingValueOnInputDropdownClose\r\n// - selectTopListItemOnInputDropdownInputChange\r\n\r\n\r\nimport {useState, useEffect, useRef} from 'react';\r\n\r\nimport {isDescendantOf, matchValueAgainstValue} from './../../utilities';\r\n\r\n//import './InputDropdown.js';\r\nimport './InputDropdown.css';\r\nimport './index.scss';\r\n\r\nconst InputDropdown = (props)=>{\r\n  const { name, value:initialValue=\"\", items:initialItems=[], placeholder, tabIndex, inputDropdownInputRef, className, onSubmit:onSubmitProp } = props;\r\n\r\n  const options = {\r\n    setToStartingValueOnInputDropdownClose: false,\r\n    selectTopListItemOnInputDropdownInputChange: false,\r\n  };\r\n\r\n  const inputDropdownInputListeners = Object.entries(props)\r\n    .filter(([propName, propValue])=>propName.match(\"onInputDropdownInput[A-Z]\"))\r\n    .filter(([propName])=>![\"onInputDropdownInputChange\", \"onInputDropdownInputFocus\"].includes(propName)) //remove listeners that will be attached to component-level listeners\r\n    .map(([propName, propValue])=>{const matches = propName.match(/onInputDropdownInput(\\w+)/);\r\n      return [\r\n        (matches ? `on${matches[1]}` : propName),\r\n        propValue,\r\n      ];\r\n    })\r\n    .reduce((acc, [propName, propValue])=>({\r\n      ...acc,\r\n      [propName]: propValue,\r\n    }), {});\r\n\r\n  const filterListItems = (items, searchFilter)=>{\r\n    if (!searchFilter) return items;\r\n\r\n    //Add .hidden to unmatched items\r\n    return items.filter(item=>matchValueAgainstValue(item, searchFilter));\r\n  };\r\n\r\n  const [value, setValue] = useState(initialValue);\r\n  const [startingValue, setStartingValue] = useState(null);\r\n  const [searchFilter, setSearchFilter] = useState(null)\r\n  const [filteredListItems, setFilteredListItems] = useState(filterListItems(initialItems, searchFilter));\r\n  const [selectedListItem, setSelectedListItem] = useState(null);\r\n  const [isInputDropdownOpen, setIsInputDropdownOpen] = useState(false);\r\n  const [wasInputDropdownOpen, setWasInputDropdownOpen] = useState(false);\r\n\r\n  const inputDropdownListRef = useRef(null);\r\n  const inputDropdownRef = useRef(null);\r\n\r\n  //Declare helper functions\r\n  const isDescendantOfDropdown = element => {\r\n    if (\r\n      !element.classList.contains(\"input-dropdown\") &&\r\n      element.parentElement\r\n    ) return isDescendantOfDropdown(element.parentElement);\r\n\r\n    if (element.classList.contains(\"input-dropdown\")) return element;\r\n\r\n    return false;\r\n  };\r\n\r\n  //Declare functions\r\n  const checkInputDropdownListSelectionScroll = ()=>{\r\n    //If there is no selected item, exit\r\n    if(!selectedListItem) return;\r\n\r\n    //Find the selected list item's DOM node\r\n    const selectedListItemNode = [...inputDropdownListRef.current.querySelectorAll(\".input-dropdown-list-item\")].find(item=>item.innerText === selectedListItem);\r\n\r\n    if (!selectedListItemNode) return;\r\n\r\n    const selectedListItemNodeRect = selectedListItemNode.getBoundingClientRect();\r\n    const inputDropdownListViewport = inputDropdownListRef.current.getBoundingClientRect();\r\n    const topIsBelowNotAboveViewportTop = selectedListItemNodeRect.top >= inputDropdownListViewport.top;\r\n    const bottomIsAboveNotBelowViewportBottom = selectedListItemNodeRect.bottom <= inputDropdownListViewport.bottom;\r\n\r\n    //Shift the view of the dropdown list (via scroll), if necessary\r\n\r\n    //If the top is above the viewport, attempt to scroll the viewport to the top of the selection (or to the bottom scrollable area, if selection is at the bottom)\r\n    if (!topIsBelowNotAboveViewportTop) {\r\n      return inputDropdownListRef.current.scroll({top: inputDropdownListRef.current.scrollTop + (selectedListItemNodeRect.top - inputDropdownListViewport.top)});\r\n    }\r\n\r\n    //Or, if the bottom is below the viewport, scroll the viewport down 1 height unit until we can see the selection bottom\r\n    if (!bottomIsAboveNotBelowViewportBottom) {\r\n      //return inputDropdownListRef.current.scroll({top: inputDropdownListRef.current.scrollTop + (selectedListItemNodeRect.height * (Math.floor((selectedListItemNodeRect.bottom - inputDropdownListViewport.bottom)/selectedListItemNodeRect.height)+1))});\r\n      return inputDropdownListRef.current.scroll({top: inputDropdownListRef.current.scrollTop + (selectedListItemNodeRect.bottom - inputDropdownListViewport.bottom)});\r\n    }\r\n  };\r\n\r\n  const addInputDropdownListItemSelection = (text, selectedListItem)=>{\r\n    if (!selectedListItem) return \"\";\r\n\r\n    //Add .hidden to unmatched items\r\n    return (\r\n      text === selectedListItem ?\r\n      \"selected\" :\r\n      \"\"\r\n    );\r\n  };\r\n\r\n  const getInputDropdownListItemFilteredText = (text, searchFilter)=>{\r\n    //If no value was passed, exit\r\n    if(!searchFilter) return text;\r\n\r\n    const match = matchValueAgainstValue(text, searchFilter);\r\n    if (!match) return text;\r\n    return text.replace(match[1], `<mark className=\"input-dropdown-list-item-highlight\">$&</mark>`);\r\n  };\r\n\r\n  const openInputDropdown = ()=>{\r\n    setIsInputDropdownOpen(previouslyOpen=>{\r\n      setWasInputDropdownOpen(previouslyOpen);\r\n      if (previouslyOpen) return true;\r\n\r\n      //If opening from a closed state, save the starting value\r\n      setStartingValue(value);\r\n\r\n      //Set the selected value to the current value\r\n      setSelectedListItem(value);\r\n\r\n      return true;\r\n    });\r\n  };\r\n\r\n  const closeInputDropdown = ()=>{\r\n    //Reset the search filter\r\n    setSearchFilter(null);\r\n\r\n    //Reset the selected list item\r\n    setSelectedListItem(null);\r\n\r\n    //Close the input dropdown\r\n    setIsInputDropdownOpen(false);\r\n  };\r\n\r\n  const onOutsideClick = ()=>{\r\n    //Reset the value\r\n    if (options.setToStartingValueOnInputDropdownClose) setValue(startingValue);\r\n\r\n    //Close the input dropdown\r\n    closeInputDropdown();\r\n  };\r\n\r\n  //Declare event listeners\r\n  const onInputDropdownInputChange = event=>{\r\n    const newValue = event.target.value;\r\n\r\n    //Update the component's state\r\n    setValue(newValue);\r\n\r\n    //Update the search filter\r\n    setSearchFilter(newValue);\r\n\r\n    //Assure the input dropdown is open\r\n    openInputDropdown();\r\n\r\n    //Call the passed listener, if provided\r\n    if (props.onInputDropdownInputChange) props.onInputDropdownInputChange(event);\r\n  };\r\n\r\n  const onInputDropdownInputFocus = event=>{\r\n    //Assure the input dropdown is open\r\n    openInputDropdown();\r\n\r\n    //Call the passed listener, if provided\r\n    if (props.onInputDropdownInputFocus) props.onInputDropdownInputFocus(event);\r\n  };\r\n\r\n  const onInputDropdownListItemMouseDown = event=>{\r\n    //NOTE: Switching from onClick to onMouseDown due to browser issue\r\n    // where onClick is not registered due to list items disappearing\r\n    // from component re-render on onBlur\r\n    // https://github.com/facebook/react/issues/4210\r\n    const newValue = event.target.innerText;\r\n\r\n    //Set the value\r\n    setValue(newValue);\r\n\r\n    //Close the input dropdown\r\n    closeInputDropdown();\r\n\r\n    onSubmit({\r\n      ...event,\r\n      isSelectedListItem: true,\r\n    }, newValue);\r\n  };\r\n\r\n  const onInputDropdownListItemMouseMove = event=>{\r\n    const newSelectedListItem = event.target.innerText;\r\n\r\n    //Set the selected list item\r\n    setSelectedListItem(newSelectedListItem);\r\n  };\r\n\r\n  const onInputDropdownListMouseLeave = event=>{\r\n    //Clear the selected list item\r\n    setSelectedListItem(null);\r\n  };\r\n\r\n  const onClick = event=>{\r\n    const newValue = event.target.innerText;\r\n    const inputDropdownInput = event.target.closest(\".input-dropdown-input\");\r\n\r\n    //If the input dropdown was already open,\r\n    // and the click was not on the input,\r\n    // close the input dropdown\r\n    if (isInputDropdownOpen && !inputDropdownInput) return closeInputDropdown();\r\n\r\n    //Otherwise, open the input dropdown\r\n    openInputDropdown();\r\n  };\r\n\r\n  const onKeyDown = event=>{\r\n    //If the user pressed the \"Up\" or \"Down\" arrow,\r\n    //  \"Home\" or \"End\" keys\r\n    if (\r\n      event.keyCode === 38 /* Up */ ||\r\n      event.keyCode === 40 /* Down */ ||\r\n      event.keyCode === 36 /* Home */ ||\r\n      event.keyCode === 35 /* End */\r\n    ) {\r\n      event.preventDefault();\r\n\r\n      //If the user pressed the \"Up\" or \"Down\" arrow,\r\n      // and the input dropdown is not already open, open it\r\n      if (event.keyCode === 38 /* Up */ || event.keyCode === 40 /* Down */) {\r\n        if (!isInputDropdownOpen) return openInputDropdown();\r\n      }\r\n\r\n      //If the input dropdown is already open,\r\n      // select the next or previous dropdown list item\r\n      // based on the key pressed\r\n      let newSelectedListItemIndex;\r\n      if (event.keyCode === 38 /* Up */ || event.keyCode === 40 /* Down */) {\r\n        //If no list item is found for the current value,\r\n        // default to the top (\"Down\") or bottom (\"Up\"),\r\n        // or move one up or down from the current selection\r\n        const upOrDown = (event.keyCode === 38 ? -1 : 1);\r\n        const wrapAround = (event.keyCode === 38 ? filteredListItems.length : -1);\r\n        const selectedListItemIndex = (filteredListItems.indexOf(selectedListItem) === -1 ? wrapAround : filteredListItems.indexOf(selectedListItem));\r\n        newSelectedListItemIndex = (selectedListItemIndex + upOrDown + filteredListItems.length)%filteredListItems.length;\r\n      }\r\n      else if (event.keyCode === 36 /* Home */ || event.keyCode === 35 /* End */) {\r\n        //Select the first or last list item\r\n        newSelectedListItemIndex = (event.keyCode === 36 ? 0 : filteredListItems.length-1);\r\n      }\r\n\r\n      //Move the selection\r\n      const newSelectedListItem = filteredListItems[newSelectedListItemIndex];\r\n      setSelectedListItem(newSelectedListItem);\r\n\r\n      return;\r\n    }\r\n\r\n    //If the user hit the \"Esc\" key\r\n    if (event.keyCode === 27 /* Esc */) {\r\n      event.preventDefault();\r\n\r\n      //Reset the value\r\n      if (options.setToStartingValueOnInputDropdownClose) setValue(startingValue);\r\n\r\n      //Close the input dropdown\r\n      closeInputDropdown();\r\n\r\n      return;\r\n    }\r\n\r\n    //If the user hit the \"Enter\" key\r\n    if (event.keyCode === 13 /* Enter */) {\r\n      event.preventDefault();\r\n\r\n      //Set the value if we selected one\r\n      const newValue = (selectedListItem ? selectedListItem : value);\r\n\r\n      if (selectedListItem) setValue(selectedListItem);\r\n\r\n      //Reset the search filter\r\n      setSearchFilter(null);\r\n\r\n      //Close the input dropdown\r\n      closeInputDropdown();\r\n\r\n      //Act as though a form was submitted with a given value\r\n      onSubmit({\r\n        ...event,\r\n        isSelectedListItem: (selectedListItem ? true : false),\r\n      }, newValue);\r\n\r\n      return;\r\n    }\r\n  };\r\n\r\n  const onBlur = event=>{\r\n    //Close the input dropdown\r\n    window.setTimeout(()=>closeInputDropdown(), 100);\r\n  };\r\n\r\n  const onSubmit = (event, value)=>{\r\n    if (onSubmitProp) onSubmitProp(event, value);\r\n  };\r\n\r\n  //Update the dropdown value whenever a new value or items are passed\r\n  useEffect(()=>setValue(initialValue), [initialValue, initialItems]);\r\n\r\n  //Update the filtered list items whenever the search filter updates\r\n  // and set the selection to the top item\r\n  useEffect(()=>\r\n    setFilteredListItems(()=>{\r\n      //Filter the items\r\n      const newFilteredListItems = filterListItems(initialItems, searchFilter);\r\n\r\n      //Set the selected value to the first option\r\n      if (options.selectTopListItemOnInputDropdownInputChange)\r\n        setSelectedListItem(newFilteredListItems[0]);\r\n      else\r\n        setSelectedListItem(null);\r\n\r\n      return newFilteredListItems;\r\n    })\r\n  , [searchFilter, initialItems]);\r\n\r\n  //While the dropdown is open,\r\n  // when the selected list item changes,\r\n  // check the scroll on the dropdown list\r\n  // to assure the newly selected item is visible\r\n  useEffect(()=>{\r\n    checkInputDropdownListSelectionScroll();\r\n  }, [selectedListItem]);\r\n\r\n  //Add/remove onOutsideClick event listeners\r\n  useEffect(()=>{\r\n    const checkIfClickedOrFocusedOutsideOfDropdown = event=>{\r\n      //If we click outside of the dropdown or its children, close it\r\n      if (!isDescendantOf(event.target, inputDropdownRef.current)) onOutsideClick();\r\n    };\r\n\r\n    const addOnOutsideClick = ()=>{\r\n      document.addEventListener(\"click\", checkIfClickedOrFocusedOutsideOfDropdown);\r\n      document.addEventListener(\"focus\", checkIfClickedOrFocusedOutsideOfDropdown);\r\n    };\r\n\r\n    const removeOnOutsideClick = ()=>{\r\n      document.removeEventListener(\"click\", checkIfClickedOrFocusedOutsideOfDropdown);\r\n      document.removeEventListener(\"focus\", checkIfClickedOrFocusedOutsideOfDropdown);\r\n    };\r\n\r\n    //If closed, or was previously open, do not add the listener\r\n    if (!isInputDropdownOpen) return;\r\n\r\n    //Otherwise, if opening for the first time, add the onOutsideClick listener\r\n    addOnOutsideClick();\r\n\r\n    //Return side effect cleanup\r\n    return ()=>removeOnOutsideClick();\r\n  }, [isInputDropdownOpen, wasInputDropdownOpen]);\r\n\r\n  //useEffect(()=>console.log(`value: ${value}\\r\\nsearchFilter: ${searchFilter}\\r\\nselectedListItem: ${selectedListItem}\\r\\nfilteredListItems`, filteredListItems), [value, searchFilter, selectedListItem, filteredListItems])\r\n\r\n  return (\r\n    <div className={`input-dropdown ${className} ${isInputDropdownOpen ? \"open\" : \"\"}`} onClick={onClick} onKeyDown={onKeyDown} ref={inputDropdownRef} onBlur={onBlur} >\r\n      <input className=\"input-dropdown-input\" name={name} value={value} placeholder={placeholder} tabIndex={tabIndex} ref={inputDropdownInputRef} autoComplete=\"off\" onChange={onInputDropdownInputChange} onFocus={onInputDropdownInputFocus} {...inputDropdownInputListeners}/>\r\n      <div className=\"input-dropdown-chevron-container\">\r\n        <i className=\"input-dropdown-chevron\"></i>\r\n      </div>\r\n      <ul className=\"input-dropdown-list\" ref={inputDropdownListRef} onMouseLeave={onInputDropdownListMouseLeave} >\r\n        {filteredListItems.map(item=>\r\n          <li key={item} className={`input-dropdown-list-item ${addInputDropdownListItemSelection(item, selectedListItem)}`} onMouseDown={onInputDropdownListItemMouseDown} onMouseMove={onInputDropdownListItemMouseMove} dangerouslySetInnerHTML={{__html: getInputDropdownListItemFilteredText(item, searchFilter)}}></li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputDropdown;\r\n","import {useState, useEffect, useRef} from 'react';\r\n\r\nimport InputDropdown from './../InputDropdown';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionsDataSearchForm = ({ budgetCycleTransactions, transactionProperties, searchFilters, onSubmit:onSubmitProp, onFilterClick:onFilterClickProp })=>{\r\n  const [search, setSearch] = useState(\"\");\r\n  const [isSearchSuggestionsOpen, setIsSearchSuggestionsOpen] = useState(false);\r\n  const [activeSearchSuggestion, setActiveSearchSuggestion] = useState(null);\r\n\r\n  const transactionsDataSearchFormInput = useRef(null);\r\n\r\n  const getUniqueTransactionsPropertiesValues = (budgetCycleTransactions, property)=>{\r\n    return [\r\n      ...new Set(\r\n        budgetCycleTransactions.map(t=>{\r\n          const value = t[property];\r\n          return (value instanceof Date ? value.toJSON() : value)\r\n        })\r\n        .filter(t=>(Array.isArray(t) ? t.length : t))\r\n      )\r\n    ]\r\n      .sort((a,b)=>a<b ? -1 : b<a ? 1 : 0);\r\n  };\r\n\r\n  const getSearchSuggestions = ()=>{\r\n    const escapedSearch = (\r\n      search ?\r\n      search.replace(/([-\\/\\\\^$*+?.()|[\\]{}])/g, '\\\\$1') :\r\n      \"\"\r\n    );\r\n\r\n    if (!activeSearchSuggestion) return transactionProperties.filter(p=>p.match(new RegExp(\"^\"+escapedSearch, \"i\")));\r\n\r\n    return getUniqueTransactionsPropertiesValues(budgetCycleTransactions.all, activeSearchSuggestion);\r\n  };\r\n\r\n  const onTransactionsDataSearchFormActiveSearchSuggestionClick = event=>{\r\n    setActiveSearchSuggestion(null);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const onTransactionsDataSearchFormInputDropdownKeyDown = event=>{\r\n    if(activeSearchSuggestion && event.target.value === \"\" && event.keyCode === 8 /* Backspace */) {\r\n      setActiveSearchSuggestion(null);\r\n      setSearch(\"\");\r\n      return;\r\n    }\r\n  };\r\n\r\n  const onTransactionsDataSearchFormInputDropdownSubmit = (event, newSearch)=>{\r\n    //If an active search filter has not yet been applied,\r\n    // and a list item was selected, apply a search filter\r\n    if (!activeSearchSuggestion && event.isSelectedListItem) {\r\n      setActiveSearchSuggestion(newSearch);\r\n      setSearch(\"\"); //set to \"\" so it will propagate down to InputDropdown\r\n      transactionsDataSearchFormInput.current.focus();\r\n      return;\r\n    }\r\n\r\n    //Otherwise, set the new search value\r\n    transactionsDataSearchFormInput.current.focus();\r\n    onSubmit(newSearch);\r\n  };\r\n\r\n  const onSubmit = searchValue=>{\r\n    //Reset the search value\r\n    setSearch(\"\");\r\n\r\n    //Reset the active search suggestion\r\n    setActiveSearchSuggestion(null);\r\n\r\n    const searchObject = {\r\n      key: activeSearchSuggestion,\r\n      value: searchValue,\r\n    };\r\n\r\n    //Send the search value to the parent\r\n    onSubmitProp(searchObject);\r\n  };\r\n\r\n  const onFilterClick = removedSearchFilter=>{\r\n    onFilterClickProp(removedSearchFilter);\r\n  };\r\n\r\n  return (\r\n    <form className=\"transactions-data-search-form\" onSubmit={onSubmit}>\r\n      <div className=\"transactions-data-search-form-input-container\">\r\n        <i className=\"transactions-data-search-form-icon fas fa-search\"></i>\r\n        {\r\n          activeSearchSuggestion ?\r\n          (\r\n            <span className=\"transactions-data-search-form-active-search-suggestion badge rounded-pill\" onClick={onTransactionsDataSearchFormActiveSearchSuggestionClick}>\r\n              <i className=\"transactions-data-search-form-active-search-suggestion-x fas fa-xs fa-times me-1\"></i>\r\n              {activeSearchSuggestion}\r\n            </span>\r\n          ) :\r\n          null\r\n        }\r\n        <InputDropdown className=\"transactions-data-search-form-input\" value={search} items={getSearchSuggestions()} placeholder=\"Search...\" inputDropdownInputRef={transactionsDataSearchFormInput} onSubmit={onTransactionsDataSearchFormInputDropdownSubmit} onInputDropdownInputKeyDown={onTransactionsDataSearchFormInputDropdownKeyDown} />\r\n      </div>\r\n      <div className=\"transactions-data-search-form-search-filters\">\r\n        {searchFilters.map(({key:searchKey, value:searchValue}, i)=>(\r\n          <span key={i} className=\"transactions-data-search-form-search-filter badge rounded-pill bg-secondary\" onClick={event=>onFilterClick(searchValue)}><i className=\"transactions-data-search-form-filter-x fas fa-xs fa-times me-1\"></i>{searchKey ? `${searchKey}:` : \"\"}{searchValue}</span>\r\n        ))}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TransactionsDataSearchForm;\r\n","import {convertDateToFullLocaleDateString} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionRowDateSeparator = ({ date, count })=>{\r\n  return (\r\n    <div key={date.getTime()} className=\"transaction-row-date-separator d-flex justify-content-between p-1 px-3\">\r\n      <div>{convertDateToFullLocaleDateString(date)}</div>\r\n      <div>({count})</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionRowDateSeparator;\r\n","import {useState, useEffect, useRef} from 'react';\r\n\r\nimport {isDescendantOf, getTransactionDefaultDescriptionDisplay, formatTransactionDisplay} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionRow = ({ transaction, onTransactionEditButtonClick:onTransactionEditButtonClickProp, onTransactionDeleteButtonClick:onTransactionDeleteButtonClickProp })=>{\r\n  const [startingX, setStartingX] = useState(0);\r\n  const [startingTouch, setstartingTouch] = useState({});\r\n  const [translateX, setTranslateX] = useState(0);\r\n  const [stickyX, setStickyX] = useState(0);\r\n  const [isBeingDragged, setIsBeingDragged] = useState(false);\r\n  const [isFirstDrag, setIsFirstDrag] = useState(false);\r\n  const [isScrollingNotDragging, setIsScrollingNotDragging] = useState(false);\r\n\r\n  const maxNecessaryDragX = -84; //px, how far over the user must drag to activate the delete button\r\n  const minAllowableDragX = null; //px, how far the user can drag to the left\r\n  const maxAllowableDragX = 0; //px, how far the user can drag to the right\r\n\r\n  const isDragFeatureActive = ()=>(stickyX !== 0);\r\n\r\n  const [transactionDisplay, setTransactionDisplay] = useState({\r\n    PostedDate: \"\",\r\n    TransactionDate: \"\",\r\n    AccountNumber: \"\",\r\n    Type: \"\",\r\n    Description: \"\",\r\n    Amount: \"\",\r\n    Category: \"\",\r\n    Notes: \"\",\r\n    Tags: [],\r\n  });\r\n\r\n  useEffect(()=>{\r\n    const formattedTransactionDisplay = formatTransactionDisplay(transaction);\r\n    setTransactionDisplay({\r\n      ...formattedTransactionDisplay,\r\n      Description: getTransactionDefaultDescriptionDisplay(transaction),\r\n      AccountNumber: formattedTransactionDisplay.AccountNumber || \"*----\",\r\n      Category: formattedTransactionDisplay.Category || \"[uncategorized]\"\r\n    })\r\n  }, [transaction]);\r\n\r\n  const onTransactionEditButtonClick = event=>{\r\n    if (isDragFeatureActive()) return;\r\n    onTransactionEditButtonClickProp(transaction);\r\n  };\r\n\r\n  const onTransactionDeleteButtonClick = event=>{\r\n    onTransactionDeleteButtonClickProp(transaction);\r\n  };\r\n\r\n  //Once the user drags over the necessary distance,\r\n  // set the sticky position\r\n  useEffect(()=>{\r\n\r\n  }, [translateX]);\r\n\r\n  const onTouchStart = event=>{\r\n    //Set where the touch starts\r\n    const touch = event.touches[0];\r\n    setstartingTouch(touch);\r\n\r\n    //Mark that the target is being dragged,\r\n    // so the smooth snapback can be deactivated\r\n    setIsBeingDragged(true);\r\n\r\n    //Also mark that this is the very first drag,\r\n    // so we can calculate whether to scroll or not\r\n    // based on the direction of the drag\r\n    setIsFirstDrag(true);\r\n  };\r\n\r\n  const onTouchMove = event=>{\r\n    //As the touch moves, calculate the drag distance,\r\n    // and set target's translateX to the drag distance,\r\n    // beginning at the target's start position\r\n    const touch = event.touches[0];\r\n    const dragDistanceX = touch.clientX - startingTouch.clientX;\r\n    const dragDistanceY = touch.clientY - startingTouch.clientY;\r\n    const potentialNewTranslateX = startingX + dragDistanceX;\r\n\r\n    //Check whether the target needs to be dragged, or\r\n    // if the drag was too vertical (i.e. a scroll attempt)\r\n    if (isFirstDrag) {\r\n      //Reset the first drag mark\r\n      setIsFirstDrag(false);\r\n\r\n      //If the scroll was too vertical, assume the user\r\n      // was scrolling, not dragging,\r\n      // set the isScrolling mark, and prematurely return\r\n      // from this listener\r\n      if (Math.abs(dragDistanceY) > Math.abs(dragDistanceX)) return setIsScrollingNotDragging(true);\r\n    }\r\n\r\n    //If the user is scrolling, don't drag\r\n    if (isScrollingNotDragging) return;\r\n\r\n    //Continue with the drag logic\r\n    event.preventDefault();\r\n\r\n    //Check that it is within the allowable drag bounds,\r\n    // and adjust accordingly if not\r\n    //And if we over-drag (drag past the max necessary position),\r\n    // decrease the drag\r\n    const newTranslateX = ((!!minAllowableDragX || minAllowableDragX === 0) && potentialNewTranslateX < minAllowableDragX ? minAllowableDragX : ((!!maxAllowableDragX || maxAllowableDragX === 0) && potentialNewTranslateX > maxAllowableDragX ? maxAllowableDragX : (\r\n      potentialNewTranslateX < maxNecessaryDragX ?\r\n      maxNecessaryDragX - ((maxNecessaryDragX - dragDistanceX)/5) :\r\n      potentialNewTranslateX\r\n    )));\r\n\r\n    setTranslateX(newTranslateX);\r\n  };\r\n\r\n  const onTouchEnd = event=>{\r\n    const newStickyX = (translateX <= maxNecessaryDragX ? maxNecessaryDragX : 0);\r\n\r\n    //Set the sticky position to either the \"open\" position,\r\n    // or back to 0, depending on where the drag ended\r\n    setStickyXWrapper(newStickyX);\r\n\r\n    //Assure the first drag mark is reset\r\n    setIsFirstDrag(false);\r\n\r\n    //Reset whether the user is scrolling or dragging\r\n    setIsScrollingNotDragging(false);\r\n  };\r\n\r\n  const endDragFeature = ()=>{\r\n    setStickyXWrapper(0);\r\n  };\r\n\r\n  const setStickyXWrapper = stickyX=>{\r\n    setStickyX(()=>{\r\n      //Reset the target's starting position, and\r\n      // the translated position, to the sticky position\r\n      setTranslateX(stickyX);\r\n      setStartingX(stickyX);\r\n\r\n      //Mark that the target is not being dragged,\r\n      // so the smooth snapback can be activated\r\n      setIsBeingDragged(false);\r\n\r\n      return stickyX;\r\n    });\r\n  };\r\n\r\n  //Save the component DOM node for reference\r\n  const transactionRow = useRef(null);\r\n\r\n  //Create an event listener to check if the user\r\n  // touches outside the dragged target\r\n  const onOutsideTouchStart = event=>{\r\n    if (isDescendantOf(event.target, transactionRow.current)) return;\r\n    if (isDragFeatureActive()) {\r\n      event.preventDefault();\r\n      endDragFeature();\r\n    }\r\n  };\r\n\r\n  //Remove & add the outside touch event listener on each render\r\n  useEffect(()=>{\r\n    document.addEventListener(\"touchstart\", onOutsideTouchStart, {passive: false});\r\n    if (transactionRow.current) transactionRow.current.addEventListener(\"touchmove\", onTouchMove);\r\n    return ()=>{\r\n      document.removeEventListener(\"touchstart\", onOutsideTouchStart);\r\n      if (transactionRow.current) transactionRow.current.removeEventListener(\"touchmove\", onTouchMove);\r\n    };\r\n  }, [transactionRow, onTouchMove, onOutsideTouchStart]);\r\n\r\n  return (\r\n    <div className={`transaction-row ${(!isBeingDragged ? \"released\" : '')}`} style={{transform: `translateX(${translateX}px)`}} onTouchStart={onTouchStart} /* onTouchMove={onTouchMove} //moved to useEffect() for {passive: false} (made default by Chrome) */ onTouchEnd={onTouchEnd} ref={transactionRow} >\r\n      <div className=\"transaction-row-container\" onClick={onTransactionEditButtonClick} >\r\n        <div className=\"transaction-row-description-container\">\r\n          <span className={`transaction-row-description ${(!transaction.DescriptionDisplay ? \"uncategorized\" : \"\")}`}>{transactionDisplay.Description}</span>\r\n          <span className={`transaction-row-amount${transaction.Amount >= 0 ? \" positive\" : \"\"}`}>{transactionDisplay.Amount}</span>\r\n        </div>\r\n        <div className=\"transaction-row-subdescription-container\">\r\n          <span className=\"transaction-row-account\">{transactionDisplay.AccountNumber}</span>\r\n          &nbsp;|&nbsp;\r\n          <span className=\"transaction-row-category\">{transactionDisplay.Category}</span>\r\n        </div>\r\n      </div>\r\n      <button className={\"transaction-row-delete-button\"} onClick={onTransactionDeleteButtonClick} tabIndex={-1}>\r\n        <span className=\"transaction-row-delete-button-text\">Delete</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionRow;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport TransactionsDataSearchForm from './../TransactionsDataSearchForm';\r\nimport TransactionRowDateSeparator from './../TransactionRowDateSeparator';\r\nimport TransactionRow from './../TransactionRow';\r\n\r\nimport {convertNumberToCurrency, getTransactionsAmountTotal, matchValueAgainstValue} from './../../utilities';\r\nimport {useConsoleLog} from './../../hooks';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionsDataRows = ({ filteredBudgetCycleTransactions, heading, searchFilters, onTransactionEditButtonClick, onTransactionDeleteButtonClick })=>{\r\n  //Temporary variable used to render date headings\r\n  let currentDateRendered;\r\n\r\n  return (\r\n    <div className=\"transaction-rows\">\r\n      {searchFilters.length ? null : (\r\n        <div className=\"transaction-rows-heading-container d-flex justify-content-between align-items-end mb-2\">\r\n          <h2 className=\"transaction-rows-heading mb-0\">{heading}</h2>\r\n          <div className=\"fw-bold\">\r\n            <span className=\"transaction-rows-heading-count\">{convertNumberToCurrency(getTransactionsAmountTotal(filteredBudgetCycleTransactions))}</span>\r\n            &nbsp;\r\n            <span className=\"transaction-rows-heading-count me-3\">({filteredBudgetCycleTransactions.length})</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {filteredBudgetCycleTransactions\r\n      //Sort remaining transactions\r\n      .sort((a,b)=>b.TransactionDate-a.TransactionDate)\r\n      //Add in the date separators\r\n      .reduce((transactions, transaction)=>{\r\n        if ((currentDateRendered ? currentDateRendered.Date.toJSON() : false) !== transaction.TransactionDate.toJSON()) {\r\n          const dateHeaderObject = {\r\n            Date: transaction.TransactionDate,\r\n            Count: 1,\r\n          };\r\n          transactions.push(dateHeaderObject);\r\n          currentDateRendered = dateHeaderObject;\r\n        }\r\n        else {\r\n          currentDateRendered.Count++;\r\n        }\r\n        return transactions.concat(transaction);\r\n      }, [])\r\n      .map((transaction, i)=>(\r\n        transaction.Date && transaction.Count ?\r\n        <TransactionRowDateSeparator key={i} date={transaction.Date} count={transaction.Count} /> :\r\n        <TransactionRow key={i} transaction={transaction} onTransactionEditButtonClick={onTransactionEditButtonClick} onTransactionDeleteButtonClick={onTransactionDeleteButtonClick} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TransactionsData = ({ budgetCycleTransactions, onTransactionEditButtonClick, onTransactionDeleteButtonClick })=>{\r\n  const defaultTransactionProperty = \"DescriptionDisplay\";\r\n\r\n  const filterTransactionsBySearchFilters = (budgetCycleTransactions, searchFilters)=>{\r\n    const filterBudgetCycleTransactions = budgetCycleTransactions=>{\r\n      return budgetCycleTransactions\r\n        .filter(t=>\r\n          searchFilters.map(({key:searchKey, value:searchValue})=>{\r\n            const value = t[searchKey ?? defaultTransactionProperty];\r\n            if (!value && !(searchKey === \"Category\" && searchValue === \"Miscellaneous\")) return false;\r\n\r\n            if (searchKey === \"Category\" && searchValue === \"Miscellaneous\") return value === null || value.match(new RegExp(searchValue, \"i\"));\r\n            return matchValueAgainstValue(value, searchValue);\r\n          })\r\n          .every(i=>i)\r\n        );\r\n    };\r\n\r\n    //Filter transactions (or render them all) based on current search filters\r\n    const newlyFilteredBudgetCycleTransactions = {\r\n      ...budgetCycleTransactions,\r\n      income: filterBudgetCycleTransactions(budgetCycleTransactions.income),\r\n      expenses: filterBudgetCycleTransactions(budgetCycleTransactions.expenses),\r\n    };\r\n    Object.defineProperty(newlyFilteredBudgetCycleTransactions, \"all\", Object.getOwnPropertyDescriptor(budgetCycleTransactions, \"all\"));\r\n    return newlyFilteredBudgetCycleTransactions;\r\n  };\r\n\r\n  const [searchFilters, setSearchFilters] = useState([]);\r\n  const [filteredBudgetCycleTransactions, setFilteredBudgetCycleTransactions] = useState(filterTransactionsBySearchFilters(budgetCycleTransactions, searchFilters));\r\n\r\n  const filteredRemainingTotal = convertNumberToCurrency(getTransactionsAmountTotal(filteredBudgetCycleTransactions.all));\r\n  const transactionProperties = (filteredBudgetCycleTransactions.all?.length ? Object.keys(filteredBudgetCycleTransactions.all[0]).filter(property=>![\"DateCreated\",\"DateModified\",\"IsAutoCategorized\",\"IsUpdatedByUser\"].includes(property)) : []);\r\n\r\n  const onTransactionsDataSearchFormSubmit = searchObject=>{\r\n    setSearchFilters(previousSearchFilters=>[...previousSearchFilters, searchObject]);\r\n  };\r\n\r\n  const onFilterClick = removedSearchFilter=>{\r\n    setSearchFilters(previousSearchFilters=>{\r\n      const newSearchFilters = [...previousSearchFilters];\r\n      return newSearchFilters.splice(newSearchFilters.indexOf(removedSearchFilter),1) && newSearchFilters;\r\n    });\r\n  };\r\n\r\n  //Keep filtered transactions updated\r\n  useEffect(()=>\r\n    setFilteredBudgetCycleTransactions(filterTransactionsBySearchFilters(budgetCycleTransactions, searchFilters))\r\n  , [budgetCycleTransactions, searchFilters]);\r\n\r\n  useConsoleLog(filteredBudgetCycleTransactions, \"filteredBudgetCycleTransactions\");\r\n\r\n  return (\r\n    <div className=\"transactions-data\">\r\n      <TransactionsDataSearchForm budgetCycleTransactions={budgetCycleTransactions} transactionProperties={transactionProperties} searchFilters={searchFilters} onSubmit={onTransactionsDataSearchFormSubmit} onFilterClick={onFilterClick} />\r\n      {\r\n        searchFilters.length ?\r\n        <TransactionsDataRows filteredBudgetCycleTransactions={filteredBudgetCycleTransactions.all} searchFilters={searchFilters} onTransactionEditButtonClick={onTransactionEditButtonClick} onTransactionDeleteButtonClick={onTransactionDeleteButtonClick}/> :\r\n        <>\r\n          <TransactionsDataRows filteredBudgetCycleTransactions={filteredBudgetCycleTransactions.income} heading=\"Income\" searchFilters={searchFilters} onTransactionEditButtonClick={onTransactionEditButtonClick} onTransactionDeleteButtonClick={onTransactionDeleteButtonClick}/>\r\n          <TransactionsDataRows filteredBudgetCycleTransactions={filteredBudgetCycleTransactions.expenses} heading=\"Expenses\" searchFilters={searchFilters} onTransactionEditButtonClick={onTransactionEditButtonClick} onTransactionDeleteButtonClick={onTransactionDeleteButtonClick}/>\r\n        </>\r\n      }\r\n      <div className=\"transactions-information d-flex justify-content-between mb-4 mr-2\">\r\n        <span className=\"transactions-count\">{(filteredBudgetCycleTransactions.all.length ? filteredBudgetCycleTransactions.all.length : 0)} transactions</span>\r\n        <div>\r\n          <div className=\"transactions-total\">{filteredRemainingTotal} total</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionsData;\r\n","import './index.scss';\r\n\r\nconst TagBadge = ({ tag, onClick })=>{\r\n  return (\r\n    <span key={tag} className=\"tag-badge badge rounded-pill\" onClick={onClick}>{tag}</span>\r\n  );\r\n};\r\n\r\nexport default TagBadge;\r\n","import TagBadge from './../TagBadge';\r\nimport InputDropdown from './../InputDropdown';\r\nimport MonthPicker from './../MonthPicker';\r\n\r\nimport {getBudgetCycleString} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionDetailModalInput = ({ transactionDetail, tabIndex, onChange:onChangeProp, onKeyPress, onTagBadgeClick})=>{\r\n  const onChange = value=>{\r\n    if(onChangeProp) onChangeProp(value);\r\n    return;\r\n  };\r\n\r\n  if (transactionDetail.name === \"Tags\")\r\n    return (\r\n      <div>\r\n        <div className=\"transaction-detail-modal-input-tags-container form-control\">\r\n          <input className=\"transaction-detail-modal-input-tags-hidden form-control\" type=\"hidden\" name=\"Tags\" value={transactionDetail.value.join(\",\")} />\r\n          <div className=\"transaction-detail-modal-input-tags-badge-container\">\r\n            {transactionDetail.value.map(tag=><TagBadge key={tag} tag={tag} onClick={event=>onTagBadgeClick(tag)} />)}\r\n          </div>\r\n          <transactionDetail.tag className=\"transaction-detail-modal-input transaction-detail-modal-input-tags form-control\" type={transactionDetail.tagType} placeholder={transactionDetail.placeholder} tabIndex={tabIndex} onKeyPress={onKeyPress}></transactionDetail.tag>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  if (transactionDetail.name === \"BudgetCycle\")\r\n    return (\r\n      <div className=\"position-relative d-flex align-items-stretch\">\r\n        <InputDropdown name={transactionDetail.name} value={transactionDetail.value} items={transactionDetail.items} placeholder={transactionDetail.placeholder} {...(transactionDetail.disabled && {disabled: true})} tabIndex={tabIndex} onInputDropdownInputChange={event=>onChange(event.target.value)} onInputDropdownInputKeyPress={onKeyPress}/>\r\n        <MonthPicker value={transactionDetail.value} onChange={value=>onChange(getBudgetCycleString(value))}/>\r\n      </div>\r\n    );\r\n\r\n  if ([\"Category\", \"Type\", \"BudgetCycle\"].includes(transactionDetail.name))\r\n    return (\r\n      <div>\r\n        <InputDropdown name={transactionDetail.name} value={transactionDetail.value} items={transactionDetail.items} placeholder={transactionDetail.placeholder} {...(transactionDetail.disabled && {disabled: true})} tabIndex={tabIndex} onInputDropdownInputChange={event=>onChange(event.target.value)} onInputDropdownInputKeyPress={onKeyPress}/>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <transactionDetail.tag className=\"transaction-detail-modal-input transaction-detail-modal-input-text form-control\" name={transactionDetail.name} value={transactionDetail.value} type={transactionDetail.tagType} placeholder={transactionDetail.placeholder} tabIndex={tabIndex} {...(transactionDetail.disabled && {disabled: true})} onChange={event=>onChange(event.target.value)} onKeyPress={onKeyPress}>{transactionDetail.tag !== \"input\" ? transactionDetail.value : null}</transactionDetail.tag>\r\n    </div> //disabled inputs don't fire events; wrap in something that will fire an event\r\n  );\r\n};\r\n\r\nexport default TransactionDetailModalInput;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport TransactionDetailModalInput from './../TransactionDetailModalInput';\r\n\r\nimport {nullCoalesce, formatTransactionDisplay, getBudgetCycleString, getBudgetCycleFromBudgetCycleString} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionDetailModal = ({ transaction, allBudgetCycles, categories, types, buttonsOptions, isOpen, onClose, onSubmit })=>{\r\n  const [BudgetCycle, setBudgetCycle] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [PostedDate, setPostedDate] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [TransactionDate, setTransactionDate] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [AccountNumber, setAccountNumber] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [Amount, setAmount] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [Description, setDescription] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [DescriptionDisplay, setDescriptionDisplay] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [Category, setCategory] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [Type, setType] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [Notes, setNotes] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [Tags, setTags] = useState([]);\r\n\r\n  const transactionDetails = [\r\n    {name: \"BudgetCycle\", placeholder: \"Select a budget cycle\", value: BudgetCycle, items: allBudgetCycles.map(b=>getBudgetCycleString(b)), tag: \"input\", tagType: \"text\", setState: setBudgetCycle, disabled: false},\r\n    {name: \"PostedDate\", placeholder: \"Posted Date\", value: PostedDate, tag: \"input\", tagType: \"text\", setState: setPostedDate, disabled: false},\r\n    {name: \"TransactionDate\", placeholder: \"Transaction Date\", value: TransactionDate, tag: \"input\", tagType: \"text\", setState: setTransactionDate, disabled: false},\r\n    {name: \"AccountNumber\", placeholder: \"Account Number\", value: AccountNumber, tag: \"input\", tagType: \"text\", setState: setAccountNumber, disabled: false},\r\n    {name: \"Amount\", placeholder: \"Amount\", value: Amount, tag: \"input\", tagType: \"text\", setState: setAmount, disabled: false},\r\n    {name: \"Description\", placeholder: \"Description\", value: Description, tag: \"input\", tagType: \"text\", setState: setDescription, disabled: true},\r\n    {name: \"DescriptionDisplay\", placeholder: \"Description\", value: DescriptionDisplay, tag: \"input\", tagType: \"text\", setState: setDescriptionDisplay, disabled: false},\r\n    {name: \"Category\", placeholder: \"Select a category...\", value: Category, items: categories, tag: \"input\", tagType: \"text\", setState: setCategory, disabled: false},\r\n    {name: \"Type\", placeholder: \"Select a type...\", value: Type, items: types, tag: \"input\", tagType: \"text\", setState: setType, disabled: false},\r\n    {name: \"Notes\", placeholder: \"Notes\", value: Notes, tag: \"textarea\", tagType: null, setState: setNotes, disabled: false},\r\n    {name: \"Tags\", placeholder: \"Tags\", value: Tags, tag: \"input\", tagType: \"text\", setState: setTags, disabled: false},\r\n  ];\r\n\r\n  //When the transaction changes,\r\n  // or the modal is opened or closed,\r\n  // reset the state\r\n  useEffect(()=>{\r\n    if(!transaction) return;\r\n\r\n    const transactionDisplay = formatTransactionDisplay(transaction);\r\n    setBudgetCycle(transactionDisplay.BudgetCycle);\r\n    setPostedDate(transactionDisplay.PostedDate);\r\n    setTransactionDate(transactionDisplay.TransactionDate);\r\n    setAccountNumber(transactionDisplay.AccountNumber);\r\n    setAmount(transactionDisplay.Amount);\r\n    setDescription(transactionDisplay.Description);\r\n    setDescriptionDisplay(transactionDisplay.DescriptionDisplay);\r\n    setCategory(transactionDisplay.Category);\r\n    setNotes(transactionDisplay.Notes);\r\n    setType(transactionDisplay.Type);\r\n    setTags(transactionDisplay.Tags);\r\n    console.log(\"Updating TransactionDetailModal state based on updated prop \\\"transaction\\\".\", transaction, PostedDate, TransactionDate, AccountNumber, Amount, Description, Category, Notes, Type, Tags)\r\n  }, [transaction, isOpen]);\r\n\r\n  const onTransactionDetailInputChange = (value, transactionDetail)=>{\r\n    return transactionDetail.setState(value);\r\n  };\r\n\r\n  const onTransactionDetailInputKeyPress = event=>{\r\n    const transactionDetailInput = event.target;\r\n\r\n    //If the \"Enter\" key is pressed on input[name=\"Tags\"],\r\n    // append the newly added tag\r\n    if (event.key === \"Enter\") {\r\n      if (transactionDetailInput.classList.contains(\"transaction-detail-modal-input-tags\")) {\r\n        event.preventDefault();\r\n\r\n        const newValue = transactionDetailInput.value;\r\n\r\n        //Add the additional tag\r\n        setTags([...Tags, transactionDetailInput.value]);\r\n\r\n        //Reset the input\r\n        transactionDetailInput.value = '';\r\n\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const transactionModalFormOnSubmit = event=>{\r\n    const transactionModalForm = event.target;\r\n    const formattedTransaction = formatTransactionDisplay(transaction);\r\n\r\n    //Prevent the form from submitting\r\n    event.preventDefault();\r\n\r\n    //Aggregate the form data into an object,\r\n    // and add that the transaction has been\r\n    // updated by the user\r\n    const data = [...transactionModalForm.querySelectorAll(\"[name]\")].reduce((accumulator,{name, value})=>{\r\n      //If the value has not changed, return\r\n      if (value === formattedTransaction[name]) return accumulator;\r\n\r\n      //Vaildate the value\r\n      value = (name === \"Tags\" ? (value ? value.split(/\\s*,\\s*/) : []) : value); //Tags validation\r\n      value = (name === \"BudgetCycle\" ? (value ? getBudgetCycleFromBudgetCycleString(value) : null) : value); //BudgetCycle validation\r\n      value = (value instanceof Array && value.length === 0 ? [] : nullCoalesce(value)) //Array validation\r\n\r\n      return {\r\n        ...accumulator,\r\n        [name]: value,\r\n      };\r\n    }, {\r\n      IsUpdatedByUser: true,\r\n      DateModified: new Date(),\r\n    });\r\n    console.log(\"Data submitted from TransactionDetailModal\", data);\r\n\r\n    //Update the transaction with the new form data\r\n    const updatedTransaction = {\r\n      ...transaction, //previous transaction data\r\n      ...data, //new transaction data from the form\r\n      Description: transaction.Description, //make sure to never change the actual Description\r\n    };\r\n\r\n    console.log(\"Updated transaction submitted from TransactionDetailModal\", updatedTransaction);\r\n\r\n    onSubmit(updatedTransaction);\r\n  };\r\n\r\n  const onTagBadgeClick = tag=>{\r\n    setTags(Tags.filter(t=>t!==tag));\r\n  };\r\n\r\n  return (\r\n    <Modal id=\"transaction-detail-modal\" show={isOpen} onHide={onClose}>\r\n      <Modal.Header>\r\n        <Modal.Title className=\"modal-title\">Transaction Detail</Modal.Title>\r\n        <button className=\"btn-close\" type=\"button\" onClick={onClose}></button>\r\n      </Modal.Header>\r\n      <form className=\"transaction-detail-modal-form\" onSubmit={transactionModalFormOnSubmit}>\r\n        <Modal.Body>\r\n          {transactionDetails.map((transactionDetail, i)=>(\r\n            <TransactionDetailModalInput key={transactionDetail.name} transactionDetail={transactionDetail} tabIndex={i+1} onChange={(value)=>onTransactionDetailInputChange(value, transactionDetail)} onKeyPress={onTransactionDetailInputKeyPress} onTagBadgeClick={onTagBadgeClick} />\r\n          ))}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-secondary\" type=\"button\" tabIndex={transactionDetails.length+1} onClick={onClose}>Cancel</button>\r\n          <button className=\"btn btn-primary\" type=\"submit\" tabIndex={transactionDetails.length+2}>Save</button>\r\n        </Modal.Footer>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TransactionDetailModal;\r\n","import Modal from 'react-bootstrap/Modal';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionDetailModal = ({ transaction, isOpen, onClose, onSubmit:onSubmitProp })=>{\r\n  const onSubmit = event=>{\r\n    event.preventDefault();\r\n\r\n    onSubmitProp(transaction);\r\n  };\r\n\r\n  return (\r\n    <Modal id=\"transaction-modal\" show={isOpen} onHide={onClose}>\r\n      <Modal.Header>\r\n        <Modal.Title className=\"modal-title\">Delete Transaction</Modal.Title>\r\n        <button className=\"btn-close\" type=\"button\" onClick={onClose}></button>\r\n      </Modal.Header>\r\n      <form className=\"transaction-modal-form\" onSubmit={onSubmit}>\r\n        <Modal.Body>\r\n          <p className=\"text-center\">Are you sure?</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-secondary\" type=\"button\" tabIndex=\"1\" onClick={onClose}>Cancel</button>\r\n          <button className=\"btn btn-primary\" type=\"submit\" tabIndex=\"2\">Delete</button>\r\n        </Modal.Footer>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TransactionDetailModal;\r\n","import {convertNumberToCurrency} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionsImportDuplicatesModalDuplicateCheckbox = ({ id, duplicateData, onChange:onChangeProp })=>{\r\n  const onChange = event=>{\r\n    //Update the duplicate's confirmation state in the parent\r\n    const updatedDuplicateData = {\r\n      ...duplicateData,\r\n      confirmed: !duplicateData.confirmed,\r\n    };\r\n\r\n    onChangeProp(duplicateData, updatedDuplicateData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-check\">\r\n      <input className=\"form-check-input\" type=\"checkbox\" id={id} checked={duplicateData.confirmed} onChange={onChange}/>\r\n      <label className=\"form-check-label\" htmlFor={id}>\r\n        {`${(duplicateData.duplicate.TransactionDate).toLocaleDateString(\"en-US\", {timeZone: \"UTC\"})} ${convertNumberToCurrency(duplicateData.duplicate.Amount)} ${duplicateData.duplicate.Description}`}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionsImportDuplicatesModalDuplicateCheckbox;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport TransactionsImportDuplicatesModalDuplicateCheckbox from './../TransactionsImportDuplicatesModalDuplicateCheckbox';\r\nimport {isTransactionDuplicate} from './../../utilities';\r\nimport {useConsoleLog} from './../../hooks';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionsImportDuplicatesModal = ({ newTransactions, duplicates, isOpen, onClose, onSubmit:onSubmitProp })=>{\r\n  const getDuplicatesDataFromDuplicates = duplicates=>{\r\n    return duplicates.map(duplicate=>({duplicate, confirmed: true}))\r\n  };\r\n\r\n  const [duplicatesData, setDuplicatesData] = useState(getDuplicatesDataFromDuplicates(duplicates));\r\n\r\n  useEffect(()=>\r\n    setDuplicatesData(getDuplicatesDataFromDuplicates(duplicates))\r\n  , [duplicates]);\r\n\r\n  useConsoleLog(duplicatesData, \"Duplicates data: \");\r\n\r\n  const onSubmit = event=>{\r\n    //Prevent the form from submitting\r\n    event.preventDefault();\r\n\r\n    //Get the checked duplicates\r\n    const confirmedDuplicates = duplicatesData.filter(duplicateData=>duplicateData.confirmed).map(duplicateData=>duplicateData.duplicate);\r\n\r\n    console.log(\"Duplicates confirmed from TransactionsImportDuplicatesModal\", confirmedDuplicates);\r\n\r\n    //Remove the true duplicates\r\n    const filteredNewTransactions = newTransactions.filter(newTransaction=>!isTransactionDuplicate(newTransaction, confirmedDuplicates));\r\n\r\n    onSubmitProp(filteredNewTransactions);\r\n  };\r\n\r\n  const onTransactionsImportDuplicatesModalDuplicateCheckboxChange = (oldDuplicateData, newDuplicateData)=>{\r\n    setDuplicatesData(previousDuplicatesData=>{\r\n      const newDuplicatesData = [...previousDuplicatesData];\r\n      const oldDuplicateDataIndex = previousDuplicatesData.indexOf(oldDuplicateData);\r\n      newDuplicatesData[oldDuplicateDataIndex] = newDuplicateData;\r\n      return newDuplicatesData;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal id=\"transaction-import-duplicate-modal\" show={isOpen} onHide={onClose}>\r\n      <Modal.Header>\r\n        <Modal.Title className=\"modal-title\">Duplicate transactions</Modal.Title>\r\n        <button className=\"btn-close\" type=\"button\" data-bs-dismiss=\"modal\" onClick={onClose}></button>\r\n      </Modal.Header>\r\n      <form className=\"transaction-import-duplicate-form\" onSubmit={onSubmit}>\r\n        <Modal.Body>\r\n          <p>{duplicates.length} possible duplicate transactions were found. Please confirm which are duplicates.</p>\r\n          <div className=\"overflow-auto\">\r\n            {\r\n              duplicatesData.map((duplicateData, i)=>(\r\n                <TransactionsImportDuplicatesModalDuplicateCheckbox key={i} id={i} duplicateData={duplicateData} onChange={onTransactionsImportDuplicatesModalDuplicateCheckboxChange} />\r\n              ))\r\n            }\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-secondary\" type=\"button\" tabIndex=\"1\" onClick={onClose}>Cancel import</button>\r\n          <button className=\"btn btn-primary\" type=\"submit\" tabIndex=\"2\">Confirm</button>\r\n        </Modal.Footer>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TransactionsImportDuplicatesModal;\r\n","import Modal from 'react-bootstrap/Modal';\r\n\r\nimport {convertNumberToCurrency} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionsImportConfirmedModal = ({ transactions, duplicates, isOpen, onClose, onSubmit:onSubmitProp })=>{\r\n  const onSubmit = event=>{\r\n    event.preventDefault();\r\n\r\n    onSubmitProp(transactions);\r\n  };\r\n\r\n  const longestTransactionDate = Math.max(...transactions.map(({TransactionDate})=>TransactionDate.toLocaleDateString(\"en-US\", {timeZone: \"UTC\"}).length));\r\n  const longestAmount = Math.max(...transactions.map(({Amount})=>`${Amount >= 0 ? \" \" : \"\"}${convertNumberToCurrency(Amount)}`.length));\r\n  const longestDescription = Math.max(...transactions.map(({Description})=>Description.length));\r\n\r\n  return (\r\n    <Modal className=\"transaction-import-confirmed-modal\" show={isOpen} onHide={onClose}>\r\n      <Modal.Header>\r\n        <Modal.Title className=\"modal-title\">Transactions imported!</Modal.Title>\r\n        <button className=\"btn-close\" type=\"button\" data-bs-dismiss=\"modal\" onClick={onClose}></button>\r\n      </Modal.Header>\r\n      <form className=\"transaction-import-confirmed-modal-form\" onSubmit={onSubmit}>\r\n        <Modal.Body>\r\n          <p>Successfully imported {transactions.length} transactions.</p>\r\n          <div className=\"overflow-auto\">\r\n            {\r\n              transactions.map((transaction, i)=>{\r\n                const transactionDateString = transaction.TransactionDate.toLocaleDateString(\"en-US\", {timeZone: \"UTC\"});\r\n                const amountString = `${transaction.Amount >= 0 ? \" \" : \"\"}${convertNumberToCurrency(transaction.Amount)}`;\r\n                const descriptionString = transaction.Description;\r\n\r\n                const transactionDateSpaces = Array(longestTransactionDate-transactionDateString.length).fill(\" \").join(\"\");\r\n                const amountSpaces = Array(longestAmount-amountString.length).fill(\" \").join(\"\");\r\n                const descriptionSpaces = Array(longestDescription-descriptionString.length).fill(\" \").join(\"\");\r\n\r\n                return (\r\n                  <div key={i} className=\"confirmed-transaction\">\r\n                    {`${transactionDateString}${transactionDateSpaces}  ${amountString}${amountSpaces}  ${descriptionString}${descriptionSpaces}`}\r\n                  </div>\r\n                );\r\n            })\r\n            }\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-secondary\" type=\"button\" tabIndex=\"1\" onClick={onClose}>Cancel import</button>\r\n          <button className=\"btn btn-primary\" type=\"submit\" tabIndex=\"2\">Finish import</button>\r\n        </Modal.Footer>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TransactionsImportConfirmedModal;\r\n","import './index.scss';\r\n\r\nconst TransactionsImportFormToggle = ({ onClick })=>{\r\n  return (\r\n    <div className=\"transaction-import-form-toggle bg-primary d-flex justify-content-center align-items-center\" onClick={onClick}>\r\n      <span className=\"transaction-import-form-toggle-icon\">+</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionsImportFormToggle;\r\n","import {useState, useEffect} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nimport DashboardBudgetCycleDropdown from './../DashboardBudgetCycleDropdown';\r\nimport TransactionsImportForm from './../TransactionsImportForm';\r\nimport TransactionsData from './../TransactionsData';\r\nimport TransactionDetailModal from './../TransactionDetailModal';\r\nimport TransactionDeleteModal from './../TransactionDeleteModal';\r\nimport TransactionsImportDuplicatesModal from './../TransactionsImportDuplicatesModal';\r\nimport TransactionsImportConfirmedModal from './../TransactionsImportConfirmedModal';\r\nimport TransactionsImportFormToggle from './../TransactionsImportFormToggle';\r\n\r\nimport {useBudgetCycleTransactions} from './../../hooks';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionsView = ({ transactions, budgetCycle, allBudgetCycles, transactionsImportDuplicatesModalNewTransactions, transactionsImportDuplicatesModalDuplicates, isTransactionsImportDuplicatesModalOpen, onTransactionsImportDuplicatesModalClose, onTransactionsImportDuplicatesModalSubmit, onTransactionsImportFormSubmit:onTransactionsImportFormSubmitProp, onTransactionsImportFormFileInputChange:onTransactionsImportFormFileInputChangeProp, onTransactionDetailModalSubmit:onTransactionDetailModalSubmitProp, onTransactionDeleteModalSubmit:onTransactionDeleteModalSubmitProp, transactionsImportConfirmedModalTransactions, isTransactionsImportConfirmedModalOpen, closeTransactionsImportConfirmedModal, onTransactionsImportConfirmedModalSubmit, onBudgetCycleChange, transactionCategories, transactionTypes, setFooterNavbar })=>{\r\n  //Send the route to the footer navbar\r\n  const route = useLocation().pathname;\r\n  useEffect(()=>{\r\n    setFooterNavbar(route);\r\n  }, [route]);\r\n\r\n  const [isTransactionImportFormOpen, setIsTransactionImportFormOpen] = useState(false);\r\n\r\n  const [transactionDetailModalTransaction, setTransactionDetailModalTransaction] = useState(null);\r\n  const [isTransactionDetailModalOpen, setIsTransactionDetailModalOpen] = useState(false);\r\n  const [transactionDeleteModalTransaction, setTransactionDeleteModalTransaction] = useState(null);\r\n  const [isTransactionDeleteModalOpen, setIsTransactionDeleteModalOpen] = useState(false);\r\n\r\n  const budgetCycleTransactions = useBudgetCycleTransactions(transactions, budgetCycle);\r\n\r\n  const onTransactionImportFormToggleClick = event=>{\r\n    setIsTransactionImportFormOpen(wasOpen=>!wasOpen);\r\n  };\r\n\r\n  const onTransactionsImportFormSubmit = scrapedTransactionsData=>{\r\n    //Re-close the form\r\n    setIsTransactionImportFormOpen(false);\r\n\r\n    onTransactionsImportFormSubmitProp(scrapedTransactionsData);\r\n  };\r\n\r\n  const onTransactionsImportFormFileInputChange = transactionsDataArray=>{\r\n    //Re-close the form\r\n    setIsTransactionImportFormOpen(false);\r\n\r\n    onTransactionsImportFormFileInputChangeProp(transactionsDataArray);\r\n  };\r\n\r\n  const openTransactionDetailModal = ()=>{\r\n    setIsTransactionDetailModalOpen(true);\r\n  };\r\n\r\n  const closeTransactionDetailModal = ()=>{\r\n    setIsTransactionDetailModalOpen(false);\r\n  };\r\n\r\n  const openTransactionDeleteModal = ()=>{\r\n    setIsTransactionDeleteModalOpen(true);\r\n  };\r\n\r\n  const closeTransactionDeleteModal = ()=>{\r\n    setIsTransactionDeleteModalOpen(false);\r\n  };\r\n\r\n  const onTransactionEditButtonClick = transaction=>{\r\n    setTransactionDetailModalTransaction(transaction);\r\n    openTransactionDetailModal();\r\n  };\r\n\r\n  const onTransactionDeleteButtonClick = transaction=>{\r\n    setTransactionDeleteModalTransaction(transaction);\r\n    openTransactionDeleteModal();\r\n  };\r\n\r\n  const onTransactionDetailModalSubmit = (updatedTransaction)=>{\r\n    onTransactionDetailModalSubmitProp(transactionDetailModalTransaction, updatedTransaction);\r\n    closeTransactionDetailModal();\r\n  };\r\n\r\n  const onTransactionDeleteModalSubmit = (deletedTransaction)=>{\r\n    onTransactionDeleteModalSubmitProp(transactionDeleteModalTransaction, deletedTransaction);\r\n    closeTransactionDeleteModal();\r\n  };\r\n\r\n  return (\r\n    <div className=\"view transactions-view\">\r\n      <DashboardBudgetCycleDropdown transactions={transactions} budgetCycle={budgetCycle} allBudgetCycles={allBudgetCycles} onChange={onBudgetCycleChange} squashed/>\r\n      <div className=\"container-fluid p-0\">\r\n        <h1 className=\"page-title display-3\">Transactions</h1>\r\n        <TransactionsImportForm isOpen={isTransactionImportFormOpen} onSubmit={onTransactionsImportFormSubmit} onFileInputChange={onTransactionsImportFormFileInputChange} />\r\n        <TransactionsData budgetCycleTransactions={budgetCycleTransactions} onTransactionEditButtonClick={onTransactionEditButtonClick} onTransactionDeleteButtonClick={onTransactionDeleteButtonClick} />\r\n        <TransactionsImportFormToggle onClick={onTransactionImportFormToggleClick} />\r\n        <TransactionDetailModal transaction={transactionDetailModalTransaction} allBudgetCycles={allBudgetCycles} categories={transactionCategories} types={transactionTypes} isOpen={isTransactionDetailModalOpen} onClose={closeTransactionDetailModal} onSubmit={onTransactionDetailModalSubmit} />\r\n        <TransactionDeleteModal transaction={transactionDeleteModalTransaction} isOpen={isTransactionDeleteModalOpen} onClose={closeTransactionDeleteModal} onSubmit={onTransactionDeleteModalSubmit} />\r\n        <TransactionsImportDuplicatesModal newTransactions={transactionsImportDuplicatesModalNewTransactions} duplicates={transactionsImportDuplicatesModalDuplicates} isOpen={isTransactionsImportDuplicatesModalOpen} onClose={onTransactionsImportDuplicatesModalClose} onSubmit={onTransactionsImportDuplicatesModalSubmit} />\r\n        <TransactionsImportConfirmedModal transactions={transactionsImportConfirmedModalTransactions} isOpen={isTransactionsImportConfirmedModalOpen} onClose={closeTransactionsImportConfirmedModal} onSubmit={onTransactionsImportConfirmedModalSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionsView;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport './index.scss';\r\n\r\nconst SettingsInput = ({ setting })=>{\r\n  const [name, setName] = useState(setting.name || \"\");\r\n  const [value, setValue] = useState(setting.value || \"\");\r\n\r\n  useEffect(()=>{\r\n    if (!setting) return;\r\n\r\n    setName(setting.name || \"\");\r\n    setValue(setting.value || \"\");\r\n  }, [setting]);\r\n\r\n  const onChange = event=>{\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"setting-input mb-3\">\r\n      <label htmlFor={name} className=\"form-label\">{name}</label>\r\n      <input id={name} className=\"form-control\" name={name} type=\"text\" value={value} onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsInput;\r\n","import SettingsInput from './../SettingsInput';\r\n\r\nimport './index.scss';\r\n\r\nconst SettingsForm = ({ settings, onSubmit:onSubmitProp })=>{\r\n  const onSubmit = event=>{\r\n    event.preventDefault();\r\n\r\n    const submittedSettings = [...event.target.querySelectorAll(\".setting-input [name]\")].reduce((data, {name, value})=>({...data, [name]: value}), {});\r\n\r\n    onSubmitProp(submittedSettings);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      {Object.entries(settings).map(([name, props])=>(<SettingsInput key={name} setting={{name, ...props}} />))}\r\n      <div className=\"d-flex justify-content-center mt-4\">\r\n        <button className=\"btn btn-primary\" type=\"submit\">Save</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SettingsForm;\r\n","import {useEffect} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nimport SettingsForm from './../SettingsForm';\r\n\r\nimport './index.scss';\r\n\r\nconst SettingsView = ({ setFooterNavbar, settings, onSubmit })=>{\r\n  //Send the route to the footer navbar\r\n  const route = useLocation().pathname;\r\n  useEffect(()=>{\r\n    setFooterNavbar(route);\r\n  }, [route]);\r\n\r\n  return (\r\n    <div className=\"view settings-view\">\r\n      <div className=\"container\">\r\n        <h1 className=\"page-title display-3\">Settings</h1>\r\n        <SettingsForm settings={settings} onSubmit={onSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsView;\r\n","import {useEffect, useRef} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './index.scss';\r\n\r\nconst FooterNavbar = ({ active })=>{\r\n  const footerNavbar = useRef(null);\r\n\r\n  const setActiveItem = (active, footerNavbar)=>{\r\n    if (!active) return;\r\n    const activePath = (process.env.NODE_ENV === \"production\" ? process.env.PUBLIC_URL : '')+(active === \"/\" ? \"/dashboard\" : active);\r\n    const navItems = [...footerNavbar.current.querySelectorAll(\".footer-nav-item\")];\r\n    const activeItem = navItems.find(navItem=>navItem.getAttribute(\"href\") === activePath);\r\n    navItems.forEach(navItem=>navItem.classList.remove(\"active\"));\r\n    if (activeItem) activeItem.classList.add(\"active\");\r\n  };\r\n\r\n  useEffect(()=>{\r\n    setActiveItem(active, footerNavbar)\r\n  }, [active]);\r\n\r\n  return (\r\n    <footer className=\"footer fixed-bottom\" ref={footerNavbar}>\r\n      <nav className=\"footer-nav nav nav-pills nav-justified\">\r\n        <Link className=\"footer-nav-item nav-link d-flex flex-column\" to=\"/dashboard\"><i className=\"footer-nav-item-icon fas fa-home pb-1\"></i>Dashboard</Link>\r\n        <Link className=\"footer-nav-item nav-link d-flex flex-column\" to=\"/budgets\"><i className=\"footer-nav-item-icon far fa-clipboard pb-1\"></i>Budgets</Link>\r\n        <Link className=\"footer-nav-item nav-link d-flex flex-column\" to=\"/transactions\"><i className=\"footer-nav-item-icon fas fa-list pb-1\"></i>Transactions</Link>\r\n        <Link className=\"footer-nav-item nav-link d-flex flex-column\" to=\"/settings\"><i className=\"footer-nav-item-icon fas fa-cogs pb-1\"></i>Settings</Link>\r\n      </nav>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default FooterNavbar;\r\n","import Modal from 'react-bootstrap/Modal';\r\nimport SettingsForm from './../SettingsForm';\r\n\r\nimport './index.scss';\r\n\r\nconst SignInSettingsModal = ({ settings, isOpen, onClose, onSubmit:onSubmitProp })=>{\r\n  const onSubmit = submittedSettings=>{\r\n    onSubmitProp(submittedSettings);\r\n\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal id=\"signin-settings-modal\" show={isOpen} onHide={onClose}>\r\n      <Modal.Header>\r\n        <Modal.Title className=\"modal-title\">Sign In Settings</Modal.Title>\r\n        <button className=\"btn-close\" type=\"button\" data-bs-dismiss=\"modal\" onClick={onClose}></button>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"alert alert-warning d-flex align-items-center\" role=\"alert\">\r\n          <i className=\"fas fa-exclamation-triangle me-2\"></i>\r\n          Please assure the following settings are valid.\r\n        </div>\r\n        <SettingsForm settings={settings} onSubmit={onSubmit} />\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SignInSettingsModal;\r\n","import {signOut} from './../../googleApi';\r\n\r\nimport './index.scss';\r\n\r\nconst GoogleApiUserButton = ({ signedInUser })=>{\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <button className=\"user-button btn bg-light\" type=\"button\" id=\"user-button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n        <img className=\"user-button-image\" src={signedInUser.imageUrl} alt=\"signed in user image\"/>\r\n        <span className=\"user-button-name\">{signedInUser.firstName}</span>\r\n      </button>\r\n      <ul className=\"dropdown-menu\" aria-labelledby=\"user-button\">\r\n        <li><a className=\"dropdown-item\" onClick={signOut}>Sign out</a></li>\r\n      </ul>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default GoogleApiUserButton;\r\n","import Logo from './../Logo';\r\nimport GoogleApiUserButton from './../GoogleApiUserButton';\r\n\r\nimport './index.scss';\r\n\r\nconst Header = ({ signedInUser })=>{\r\n  return (\r\n    <header className=\"dashboard-header navbar-text fixed-top bg-primary\">\r\n      <div className=\"container d-flex justify-content-between\">\r\n        <Logo light />\r\n        <div className=\"d-flex justify-content-center align-items-center\">\r\n          <GoogleApiUserButton signedInUser={signedInUser}/>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","//Import package dependencies\nimport {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\n//Import source code\nimport {getBudgetCycleFromDate, getBudgetCyclesFromTransactions, getAllBudgetCycles, typeCheckTransactions, isTransactionDuplicate, categorizeTransactionByDescription, importTransactions, typeCheckBudgetsData, typeCheckAccountsData, typeCheckAccountData, throwException} from './../../utilities';\nimport {getSpreadsheetId, setSpreadsheetId, getClientId, setClientId, initAuthorization} from './../../googleApi';\nimport {getTransactions, updateTransactions, getBudgetsData, getAccountsData, getAccountData} from './../../api';\nimport {useScript, useConsoleLog, useBudgetCycleBudgets} from './../../hooks';\n\n//Import custom components\nimport SignInView from './../SignInView';\nimport DashboardView from './../DashboardView';\nimport BudgetsView from './../BudgetsView';\nimport TransactionsView from './../TransactionsView';\nimport SettingsView from './../SettingsView';\nimport FooterNavbar from './../FooterNavbar';\nimport SignInSettingsModal from './../SignInSettingsModal';\nimport Header from './../Header';\nimport Logo from './../Logo';\n\n//Import styles\nimport './main.css';\nimport './index.scss';\n\n\nconst App = () => {\n  //Set application state\n  const [transactions, setTransactions] = useState([]);\n  const [budgetsData, setBudgetsData] = useState([]);\n  const [accountsData, setAccountsData] = useState([]);\n  const [accountData, setAccountData] = useState({});\n\n  const [footerNavbar, setFooterNavbar] = useState(null);\n  const [budgetCycle, setBudgetCycle] = useState(getBudgetCycleFromDate(new Date()));\n  const [transactionsImportDuplicatesModalNewTransactions, setTransactionsImportDuplicatesModalNewTransactions] = useState([]);\n  const [transactionsImportDuplicatesModalDuplicates, setTransactionsImportDuplicatesModalDuplicates] = useState([]);\n  const [isTransactionsImportDuplicatesModalOpen, setIsTransactionsImportDuplicatesModalOpen] = useState(false);\n  const [transactionsImportConfirmedModalTransactions, setTransactionsImportConfirmedModalTransactions] = useState([]);\n  const [isTransactionsImportConfirmedModalOpen, setIsTransactionsImportConfirmedModalOpen] = useState(false);\n  const [signedInUser, setSignedInUser] = useState(undefined);\n  const [isSignInSettingsModalOpen, setIsSignInSettingsModalOpen] = useState(false);\n  const [isLoadingAnimationComplete, setIsLoadingAnimationComplete] = useState(false);\n\n  //Declare settings\n  const settings = {\n    \"Client Id\": {\n      value: getClientId(),\n      update: clientId=>setClientId(clientId),\n    },\n    \"Spreadsheet id\": {\n      value: getSpreadsheetId(),\n      update: spreadsheetId=>setSpreadsheetId(spreadsheetId),\n    }\n  };\n\n  const transactionTypes = [\n    null,\n    //Credit card\n    \"Charges\",     //-\n    \"Payments\",    //+\n\n    //Checking/Savings\n    \"Debit\",       //-\n    \"Credit\",      //+\n    \"Withdrawal\",  //-\n    \"Deposit\",     //+\n    \"Transfer\",    //+/-\n    \"Payment\",     //-\n  ];\n\n  const [allBudgetCycles, setAllBudgetCycles] = useState(getAllBudgetCycles(transactions));\n  const budgetCycleBudgets = useBudgetCycleBudgets(budgetsData, budgetCycle);\n  const transactionCategories = [null, ...budgetCycleBudgets.map(b=>b.Name)];\n\n  //Check that the list of budget cycles remains updated with transaction data\n  useEffect(()=>\n    setAllBudgetCycles(getAllBudgetCycles(transactions))\n  , [transactions]);\n\n\n\n  //Log data\n  useConsoleLog(transactions, \"Transactions Data:\");\n  useConsoleLog(budgetsData, \"Budget Data:\");\n  useConsoleLog(accountsData, \"Accounts Data:\");\n  useConsoleLog(accountData, \"Account Data:\");\n  useConsoleLog(signedInUser, \"signedInUser:\");\n  useConsoleLog(allBudgetCycles, \"allBudgetCycles:\");\n  useConsoleLog(budgetCycle, \"budgetCycle:\");\n\n  const gapiLoaded = useScript(\"https://apis.google.com/js/api.js\");\n\n  //Create helper functions\n  const saveSettings = savedSettings=>{\n    //Call the update function for each setting\n    Object.entries(savedSettings).forEach(([settingName, settingValue])=>\n      settings[settingName].update(settingValue)\n    );\n  };\n\n  const connectToGoogleAPI = async ()=>{\n    if(!gapiLoaded) return;\n\n    //Try to initialize the Google API\n    try {\n      initAuthorization(onSignInChange, onSignInChange);\n    }\n    catch (err) {\n      //If credentials weren't found, prompt the user for the credentials\n      if (err.name === \"CredentialsNotFoundError\") {\n        return openSignInSettingsModal();\n        // throw new Error(\"Failed to get authorization credentials.\");\n      }\n      return throwException(err);\n    }\n  };\n\n  const onBudgetCycleChange = budgetCycle=>{\n    setBudgetCycle(budgetCycle);\n  };\n\n  //Create state handlers\n  const checkTransactionsForDuplicates = (previousTransactions, newTransactions)=>{\n    if(!previousTransactions.length) return newTransactions;\n\n    //Look for possible duplicate transactions,\n    // and confirm if they are duplicates (shouldn't be added),\n    // or not duplicates (should be added)\n    const duplicates = [];\n    newTransactions.forEach(newTransaction=>{\n      const duplicate = isTransactionDuplicate(newTransaction, previousTransactions);\n      if (duplicate) {\n        duplicates.push(duplicate);\n      }\n    });\n\n    //If there were no duplicates,\n    // open the confirmed imported transactions modal\n    if (!duplicates.length) {\n      console.log(\"confirmedTransactions: \", newTransactions);\n      setTransactionsImportConfirmedModalTransactions(newTransactions);\n      openTransactionsImportConfirmedModal();\n      return previousTransactions;\n    }\n\n    //Otherwise, ask user to confirm true duplicates,\n    // and just return the previous data for now\n    console.log(\"Duplicates: \", duplicates);\n    setTransactionsImportDuplicatesModalNewTransactions(newTransactions);\n    setTransactionsImportDuplicatesModalDuplicates(duplicates);\n    openTransactionsImportDuplicatesModal();\n\n    return previousTransactions;\n  };\n\n  const setTransactionsHandler = (previousTransactions, newTransactions, callback, oldTransaction)=>{\n    //If there are no new transactions, short-circuit\n    if ((Array.isArray(newTransactions) ? !newTransactions.length : newTransactions !== false && !newTransactions)) return previousTransactions;\n\n    //If there are new transactions, massage them\n    let transactions;\n    if (newTransactions) {\n      //Check that we have an array of transactions\n      let transactionsArray = newTransactions;\n      if (!(newTransactions instanceof Array)) transactionsArray = [newTransactions];\n\n      //Type check transactions data to convert from strings to the correct type\n      const typeCheckedTransactions = typeCheckTransactions(transactionsArray);\n\n      //Assign category & notes from description\n      transactions = typeCheckedTransactions.map(transaction=>categorizeTransactionByDescription(transaction));\n    }\n\n    //Return the data manipulation callback result, sorted\n    if (callback) return callback(previousTransactions, transactions, oldTransaction)\n      .sort((a,b)=>b.TransactionDate-a.TransactionDate);\n\n    //Otherwise, just return the transactions, sorted\n    return transactions.sort((a,b)=>b.TransactionDate-a.TransactionDate);\n  };\n\n  const setTransactionsWrapper = newTransactions=>{\n    //Import new transactions\n    setTransactions(previousTransactions=>{\n      //Run through transaction normalization\n      return setTransactionsHandler(previousTransactions, newTransactions);\n    });\n  };\n\n  const importTransactionsWrapper = newTransactions=>{\n    //Import new transactions\n    setTransactions(previousTransactions=>{\n      const callback = (previousTransactions, newTransactions)=>{\n        //Check for duplicates, and return depending if any were found\n        return checkTransactionsForDuplicates(previousTransactions, newTransactions);\n      };\n\n      //Run through transaction normalization\n      return setTransactionsHandler(previousTransactions, newTransactions, callback);\n    });\n  };\n\n  const insertTransactionsWrapper = newTransactions=>{\n    //Import new transactions\n    setTransactions(previousTransactions=>{\n      const callback = (previousTransactions, newTransactions)=>{\n        //Append the new transactions\n        return [...previousTransactions, ...newTransactions];\n      };\n\n      //Run through transaction normalization\n      return setTransactionsHandler(previousTransactions, newTransactions, callback);\n    });\n  };\n\n  const updateTransactionWrapper = (oldTransaction, newTransaction)=>{\n    //Update a single transaction\n    setTransactions(previousTransactions=>{\n      const callback = (previousTransactions, newTransactions, oldTransaction)=>{\n        //Get the single updated transaction wrapped in an array\n        const newTransaction = newTransactions[0];\n\n        //Update transactions with the new transaction\n        const transactions = [...previousTransactions]; //create deep copy\n        transactions[transactions.indexOf(oldTransaction)] = newTransaction;\n\n        return transactions;\n      };\n\n      //Run through transaction normalization\n      return setTransactionsHandler(previousTransactions, newTransaction, callback, oldTransaction);\n    });\n  };\n\n  const deleteTransactionWrapper = deletedTransaction=>{\n    //Delete a single transaction\n    setTransactions(previousTransactions=>{\n      const callback = (previousTransactions, transaction, deletedTransaction)=>{\n        //Update transactions with the new transaction\n        const transactions = [...previousTransactions]; //create deep copy\n        const index = transactions.indexOf(deletedTransaction);\n        transactions.splice(index, 1);\n\n        return transactions;\n      };\n\n      //Run through transaction normalization\n      return setTransactionsHandler(previousTransactions, false, callback, deletedTransaction);\n    });\n  };\n\n  const setBudgetsDataWrapper = newBudgetsData=>{\n    //Import new data\n    setBudgetsData(previousBudgetsData=>{\n      if (!newBudgetsData) return [];\n\n      const typeCheckedData = typeCheckBudgetsData(newBudgetsData);\n      return typeCheckedData;\n    });\n  };\n\n  const setAccountsDataWrapper = newAccountsData=>{\n    //Import new data\n    setAccountsData(previousAccountsData=>{\n      if (!newAccountsData) return [];\n\n      const typeCheckedData = typeCheckAccountsData(newAccountsData);\n      return typeCheckedData;\n    });\n  };\n\n  const setAccountDataWrapper = newAccountData=>{\n    //Import new data\n    setAccountData(previousAccountData=>{\n      if (!newAccountData) return {};\n\n      const typeCheckedData = typeCheckAccountData(newAccountData);\n      return typeCheckedData;\n    });\n  };\n\n\n  //Create event listeners\n  const onTransactionsImportFormSubmit = scrapedTransactionsData=>{\n    //Import the scraped transactions data\n    const transactions = importTransactions(scrapedTransactionsData, \"scraped\");\n\n    //Set the new transactions data\n    importTransactionsWrapper(transactions);\n  };\n\n  const onTransactionsImportFormFileInputChange = transactionsDataArray=>{\n    //Import the csv transactions data\n    const transactions = importTransactions(transactionsDataArray, \"csv\");\n\n    //Set the new transactions data\n    importTransactionsWrapper(transactions);\n  };\n\n  const onTransactionDetailModalSubmit = (oldTransaction, updatedTransaction)=>{\n    updateTransactionWrapper(oldTransaction, updatedTransaction);\n  };\n\n  const onTransactionDeleteModalSubmit = deletedTransaction=>{\n    deleteTransactionWrapper(deletedTransaction);\n  };\n\n  const openTransactionsImportDuplicatesModal = ()=>{\n    setIsTransactionsImportDuplicatesModalOpen(true);\n  };\n\n  const closeTransactionsImportDuplicatesModal = ()=>{\n    setIsTransactionsImportDuplicatesModalOpen(false);\n  };\n\n  const onTransactionsImportDuplicatesModalSubmit = (filteredNewTransactions)=>{\n    //Close the modal\n    closeTransactionsImportDuplicatesModal();\n\n    //Open the confirmed imported transactions modal\n    setTransactionsImportConfirmedModalTransactions(filteredNewTransactions);\n    openTransactionsImportConfirmedModal();\n  };\n\n  const openTransactionsImportConfirmedModal = ()=>{\n    setIsTransactionsImportConfirmedModalOpen(true);\n  };\n\n  const closeTransactionsImportConfirmedModal = ()=>{\n    setIsTransactionsImportConfirmedModalOpen(false);\n  };\n\n  const onTransactionsImportConfirmedModalSubmit = confirmedTransactions=>{\n    //Update transactions with the new transaction\n    insertTransactionsWrapper(confirmedTransactions);\n\n    //Close the modal\n    closeTransactionsImportConfirmedModal();\n  };\n\n  const onLogoTextScrollIn = ()=>{\n    setIsLoadingAnimationComplete(true);\n  };\n\n  const onSignInChange = signInInfo=>{\n    setSignedInUser(signInInfo);\n  };\n\n  const onSettingsViewSubmit = submittedSettings=>{\n    saveSettings(submittedSettings);\n  };\n\n  const openSignInSettingsModal = ()=>{\n    setIsSignInSettingsModalOpen(true);\n  };\n\n  const closeSignInSettingsModal = ()=>{\n    setIsSignInSettingsModalOpen(false);\n\n    //Re-attempt to initialize Google API again\n    connectToGoogleAPI();\n  };\n\n  const onSignInSettingsModalSubmit = submittedSettings=>{\n    saveSettings(submittedSettings);\n  };\n\n  //When the Google API JS library loads, initialize the Google API\n  useEffect(()=>\n    connectToGoogleAPI()\n    , [gapiLoaded]);\n\n  //Whenever the user gets logged in,\n  // attempt to query for data\n  useEffect(()=>{\n    //Run async function inside necessary useEffect sync function\n    (async ()=>{\n      if (!signedInUser) return;\n      setTransactionsWrapper(await getTransactions());\n      setBudgetsDataWrapper(await getBudgetsData());\n      setAccountsDataWrapper(await getAccountsData());\n      setAccountDataWrapper(await getAccountData());\n    })();\n  }, [signedInUser]);\n\n  //Whenever the transactions are updated, save them off as well\n  useEffect(()=>{\n    if (!transactions.length) return;\n    updateTransactions(transactions);\n  }, [transactions]);\n\n\n  //Return a \"loading page\" while determining if the user is signed in\n  if (!isLoadingAnimationComplete) return (\n    <div className=\"App\">\n      <Router basename={(process.env.NODE_ENV === \"production\" ? process.env.PUBLIC_URL : null)}>\n        <div className=\"d-flex justify-content-center align-items-center min-vh-100\">\n          <Logo scrollIn={true} onLogoTextScrollIn={onLogoTextScrollIn}/>\n        </div>\n      </Router>\n    </div>\n  );\n\n  //If the user has not signed in, send them to the sign in page,\n  // and while the Google API is loading, disable the sign in button\n  if (isLoadingAnimationComplete && !signedInUser) return (\n    <div className=\"App\">\n      <Router basename={(process.env.NODE_ENV === \"production\" ? process.env.PUBLIC_URL : null)}>\n        <SignInView isReadyForSignIn={!(signedInUser===undefined)}/>\n        <SignInSettingsModal settings={settings} isOpen={isSignInSettingsModalOpen} onClose={closeSignInSettingsModal} onSubmit={onSignInSettingsModalSubmit} />\n      </Router>\n    </div>\n  );\n\n  return (\n    <div className=\"App\">\n      <Router basename={(process.env.NODE_ENV === \"production\" ? process.env.PUBLIC_URL : null)}>\n        <Header signedInUser={signedInUser} />\n        <Switch>\n          <Route path={[\"/dashboard\", \"/\"]} exact>\n            <DashboardView signedInUser={signedInUser} transactions={transactions} accountsData={accountsData} accountData={accountData} budgetsData={budgetsData} budgetCycle={budgetCycle} allBudgetCycles={allBudgetCycles} onBudgetCycleChange={onBudgetCycleChange} setFooterNavbar={setFooterNavbar} />\n          </Route>\n          <Route path=\"/budgets\" exact>\n            <BudgetsView transactions={transactions} budgetsData={budgetsData} budgetCycle={budgetCycle} allBudgetCycles={allBudgetCycles} onBudgetCycleChange={onBudgetCycleChange} setFooterNavbar={setFooterNavbar} />\n          </Route>\n          <Route path=\"/transactions\" exact>\n            <TransactionsView transactions={transactions} budgetCycle={budgetCycle} allBudgetCycles={allBudgetCycles} transactionsImportDuplicatesModalNewTransactions={transactionsImportDuplicatesModalNewTransactions} transactionsImportDuplicatesModalDuplicates={transactionsImportDuplicatesModalDuplicates} isTransactionsImportDuplicatesModalOpen={isTransactionsImportDuplicatesModalOpen} onTransactionsImportDuplicatesModalClose={closeTransactionsImportDuplicatesModal} onTransactionsImportDuplicatesModalSubmit={onTransactionsImportDuplicatesModalSubmit} onTransactionsImportFormSubmit={onTransactionsImportFormSubmit} onTransactionsImportFormFileInputChange={onTransactionsImportFormFileInputChange} onTransactionDetailModalSubmit={onTransactionDetailModalSubmit} onTransactionDeleteModalSubmit={onTransactionDeleteModalSubmit} transactionsImportConfirmedModalTransactions={transactionsImportConfirmedModalTransactions} isTransactionsImportConfirmedModalOpen={isTransactionsImportConfirmedModalOpen} closeTransactionsImportConfirmedModal={closeTransactionsImportConfirmedModal} onTransactionsImportConfirmedModalSubmit={onTransactionsImportConfirmedModalSubmit} onBudgetCycleChange={onBudgetCycleChange} setFooterNavbar={setFooterNavbar} transactionCategories={transactionCategories} transactionTypes={transactionTypes}/>\n          </Route>\n          <Route path=\"/settings\" exact>\n            <SettingsView setFooterNavbar={setFooterNavbar} settings={settings} onSubmit={onSettingsViewSubmit}/>\n          </Route>\n        </Switch>\n        <FooterNavbar active={footerNavbar} />\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import {parseGoogleSheetsNumber} from './../googleApi';\r\n\r\nexport const typeCheckAccountsData = accountsData=>{\r\n  return accountsData.map(accountData=>({\r\n      ...accountData,\r\n      Balance: parseGoogleSheetsNumber(accountData.Balance),\r\n    })\r\n  );\r\n};\r\n","import {parseGoogleSheetsNumber, parseGoogleSheetsDate} from './../googleApi';\r\n\r\nexport const typeCheckAccountData = accountData=>{\r\n  return accountData.map(data=>({\r\n    ...data,\r\n    CreditScore: parseGoogleSheetsNumber(data.CreditScore),\r\n    LastUpdated: parseGoogleSheetsDate(data.LastUpdated),\r\n  }));\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}