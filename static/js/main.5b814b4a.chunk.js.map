{"version":3,"sources":["googleApi/utilities.js","googleApi/gapi.js","googleApi/authentication.js","utilities/transactions.js","utilities/utilities.js","utilities/budgetsData.js","utilities/dashboard.js","utilities/errorHandling.js","api/transactions.js","api/budgetsData.js","api/accountsData.js","api/accountData.js","hooks/useConsoleLog.js","hooks/useScript.js","hooks/useBudgetCycleTransactions.js","components/Logo/index.js","components/GoogleApiSignInButton/index.js","components/SignInView/index.js","components/DashboardBudgetCycleDropdown/index.js","components/DashboardTop/index.js","components/DashboardInsight/index.js","components/DashboardInsights/index.js","components/DashboardShowcase/index.js","components/DashboardContent/index.js","components/DashboardView/index.js","components/BudgetGraphStatusIcon/index.js","components/BudgetGraph/index.js","components/BudgetsView/index.js","components/TransactionsImportForm/index.js","components/TransactionDataSearchForm/index.js","components/TransactionRowDateSeparator/index.js","components/TagBadge/index.js","components/TransactionRow/index.js","components/TransactionsData/index.js","components/InputDropdown/InputDropdown.js","components/InputDropdown/index.js","components/TransactionDetailModalInput/index.js","components/TransactionDetailModal/index.js","components/TransactionDeleteModal/index.js","components/TransactionsImportDuplicatesModalDuplicateCheckbox/index.js","components/TransactionsImportDuplicatesModal/index.js","components/TransactionsImportConfirmedModal/index.js","components/TransactionsImportFormToggle/index.js","components/TransactionsView/index.js","components/SettingsInput/index.js","components/SettingsForm/index.js","components/SettingsView/index.js","components/FooterNavbar/index.js","components/SignInSettingsModal/index.js","components/GoogleApiUserButton/index.js","components/Header/index.js","components/App/index.js","utilities/accountsData.js","utilities/accountData.js","reportWebVitals.js","index.js"],"names":["getHeadersFromJSON","JSON","Array","reduce","headers","transaction","Object","keys","filter","key","includes","getSpreadsheetData","parse","localStorage","getItem","getSpreadsheetId","spreadsheetData","spreadsheetId","setSpreadsheetId","setItem","stringify","setSpreadsheetData","getCredentials","getClientId","creds","clientId","setClientId","credentials","newCreds","convertSheetsArraysToJSON","data","splice","map","line","obj","value","i","convertJSONToSheetsArray","object","header","isArray","join","getDynamicPropertyByArray","startingObject","dotSeparatedProperties","split","property","convertColumnNumberToColumnLetter","columnNumber","columnLettersArray","letter","Math","floor","push","reverse","convertColumnLetterToColumnNumber","columnLetters","number","columnLetter","indexOf","convertArrayToA1Notation","rowsColumnsArray","startingCell","startingColumnLetter","match","startingRow","Number","startingColumnIndex","rows","columns","rowNumber","parseGoogleSheetsNumber","potentialNumber","isNaN","parseGoogleSheetsDate","potentialDate","Date","getTime","callGoogleApiFunction","googleApi","resourceType","method","optionsParam","pageToken","leftoverIds","params","options","part","undefined","id","length","maxResults","Promise","resolve","reject","a","resource","window","gapi","client","response","console","log","result","nextPageToken","items","mine","values","error","getSheetsSpreadsheetValues","sheetName","range","r","updateSheetsSpreadsheetValues","valuesJSON","valueInputOption","includeValuesInResponse","responseValueRenderOption","scopes","discoveryDocs","initAuthorization","loginCallback","logoutCallback","info","CredentialsNotFoundError","Error","name","err","fetchAuthCredentials","loadGoogleApis","throwException","load","initializeGoogleApis","init","scope","then","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","get","catch","signInInfo","getProfileInformation","signIn","signOut","profile","currentUser","getBasicProfile","getId","getName","firstName","getGivenName","lastName","getFamilyName","imageUrl","getImageUrl","emailAddress","getEmail","importTransactions","transactionsData","dataType","transactionLine","currentDate","isMatch","warn","trim","TransactionDate","Description","IsNegativeAmount","Amount","PostedDate","convertDateStringToDate","AccountNumber","Type","DescriptionDisplay","replace","Category","Notes","Tags","BudgetCycle","getBudgetCycleFromDate","IsAutoCategorized","IsUpdatedByUser","DateCreated","DateModified","csvData","convertCSVToJSON","flat","_Date","Charges","Payments","Debit","Credit","type","nullCoalesce","transactionDate","isFalsy","getTransactionDefaultDescriptionDisplay","formatTransactionDisplay","toLocaleDateString","toString","convertNumberToCurrency","isTransactionDuplicate","potentialDuplicate","transactions","find","areObjectsEqual","toJSON","isTransactionAutoCategorizedOrUpdatedByUser","arguments","accumulator","toFixed","p0","csv","delimiter","lineObj","forEach","b","typeofA","aValues","entries","bValues","aKey","aValue","bKey","bValue","dateString","dateStringFormat","yearFormatRegEx","RegExp","monthFormatRegEx","dayFormatRegEx","getDatePartByFormat","datePartFormatRegex","getDatePartCallback","matchAll","matchStartingIndex","index","matchedFormat","matchEndingIndex","substring","yearString","yearFormat","getFullYear","monthString","monthFormat","isDescendantOf","element","potentialParent","parentElement","getBudgetAmountSpentFromTransactions","budgetName","array","prop","isCreditCardPaymentTransaction","isIncomeTransaction","check","sum","item","date","getMonth","getBudgetCycleString","budgetCycle","getMonthFromNumber","getBudgetCycleDescription","todayBudgetCycle","fullYearDifference","monthDifference","yearDifference","throwEx","alertWindow","exception","errorMsg","message","description","fileName","lineNumber","stack","exceptionMsg","alert","getTransactions","updateTransactions","getBudgetsData","getAccountsData","getAccountData","useConsoleLog","args","useEffect","slice","useScript","src","useState","isLoaded","setIsLoaded","script","document","createElement","async","option","addEventListener","event","body","appendChild","removeChild","useBudgetCycleTransactions","getBudgetCycleTransactions","currentBudgetCycleTransactions","transaction2","lastBudgetCycleIncomeTransactions","getLastBudgetCycleIncomeTransactions","currentBudgetCycleIncomeTransactions","getCurrentBudgetCycleIncomeTransactions","currentBudgetCycleExpenseTransactions","getCurrentBudgetCycleExpenseTransactions","income","expenses","this","budgetCycleTransactions","setBudgetCycleTransactions","Logo","light","className","to","GoogleApiSigninButton","isReadyForSignIn","onClick","disabled","SignInView","DashboardBudgetCycleDropdown","onChangeProp","onChange","getAllBudgetCycles","Set","getBudgetCyclesFromTransactions","allBudgetCycles","setAllBudgetCycles","data-bs-toggle","aria-expanded","budgetCycleJSON","target","getAttribute","href","data-budget-cycle","DashboardTop","accountData","accountsData","onBudgetCycleChange","currentBudgetCycleRemaining","total","t","sort","LastUpdated","record","CreditScore","DashboardInsight","insight","iconClass","title","text","DashboardInsights","budgetsData","insights","setInsights","all","personalSpendingBudgetData","budgetData","Name","personalSpendingBudgetLeft","previousInsights","bill","amountSpent","abs","amount","runInsights","DashboardShowcase","DashboardContent","DashboardView","signedInUser","setFooterNavbar","route","useLocation","pathname","BudgetGraphStatusIcon","iconText","iconColor","budget","overBudget","overEarned","BudgetGraph","isExpenseBudget","style","color","backgroundColor","width","left","right","BudgetsView","TransactionsImportForm","isOpen","onSubmitProp","onSubmit","onFileInputChangeProp","onFileInputChange","scrapedTransactionsData","setScrapedTransactionsData","onTransactionsImportFormFileInputChange","preventDefault","transactionsDataFiles","files","transactionsDataArray","file","fileContent","scrapedTransactionsDataValue","scrapedText","accept","multiple","TransactionDataSearchForm","searchFilters","onFilterClickProp","onFilterClick","search","setSearch","searchValue","placeholder","searchText","SearchFilter","TransactionRowDateSeparator","count","monthIndex","getDate","convertDateToDateHeaderString","TagBadge","tag","TransactionRow","onTransactionEditButtonClickProp","onTransactionEditButtonClick","onTransactionDeleteButtonClickProp","onTransactionDeleteButtonClick","isDeleteButtonVisible","startingX","setStartingX","startingTouch","setstartingTouch","translateX","setTranslateX","stickyX","setStickyX","isBeingDragged","setIsBeingDragged","isFirstDrag","setIsFirstDrag","isScrollingNotDragging","setIsScrollingNotDragging","maxNecessaryDragX","isDragFeatureActive","transactionDisplay","setTransactionDisplay","formattedTransactionDisplay","onTouchMove","touch","touches","dragDistanceX","clientX","dragDistanceY","clientY","potentialNewTranslateX","setStickyXWrapper","transactionRow","useRef","onOutsideTouchStart","current","passive","removeEventListener","transform","onTouchStart","onTouchEnd","ref","TransactionsDataRows","currentDateRendered","filteredBudgetCycleTransactions","heading","dateHeaderObject","Count","concat","TransactionsData","filterTransactionsBySearchFilters","newlyFilteredBudgetCycleTransactions","every","defineProperty","getOwnPropertyDescriptor","setSearchFilters","setFilteredBudgetCycleTransactions","filteredRemainingTotal","previousSearchFilters","removedSearchFilter","newSearchFilters","isDescendantOfDropdown","classList","contains","dropdownMasterEventListener","dropdown","eventListeners","dropdownItem","dropdownInput","querySelector","dropdownList","dropdownListItems","querySelectorAll","previousSelectedValue","unFilterDropdownItems","dropdownListItem","remove","innerHTML","innerText","setDropdownItemsSelection","selectedDropdownListItem","resetDropdownItemsSelection","add","setDropdownSelection","checkDropdownListSelectionScroll","newlySelectedDropdownListItemRect","getBoundingClientRect","dropdownListViewport","topIsBelowNotAboveViewportTop","top","bottomIsAboveNotBelowViewportBottom","bottom","scroll","scrollTop","height","dropdownIsOpen","openDropdown","checkIfClickedOrFocusedOutsideOfDropdown","dropdownListItemOnMouseEnter","closeDropdown","regEx","filterDropdownItems","keyCode","currentSelectedDropdownListItem","dropdownWasOpen","upOrDown","wrapAround","currentSelectedDropdownListItemIndex","newlySelectedDropdownListItem","listenerObj","callEventListeners","InputDropdown","initialValue","onKeyDown","setValue","autoComplete","TransactionDetailModalInput","transactionDetail","tabIndex","onBlur","onTagBadgeClick","tagType","TransactionDetailModal","categories","types","buttonsOptions","onClose","setPostedDate","setTransactionDate","setAccountNumber","setAmount","setDescription","setDescriptionDisplay","setCategory","setType","setNotes","setTags","transactionDetails","setState","onTransactionDetailInputContainerClick","transactionDetailInput","focus","onTransactionDetailInputContainerBlur","onTransactionDetailInputKeyDown","nextOrPrevious","shiftKey","inputsArray","nextInput","Modal","show","onHide","Header","Title","transactionModalForm","formattedTransaction","updatedTransaction","Body","onTransactionDetailInputChange","Footer","class","TransactionsImportDuplicatesModalDuplicateCheckbox","duplicateData","checked","confirmed","updatedDuplicateData","htmlFor","duplicate","TransactionsImportDuplicatesModal","newTransactions","duplicates","duplicatesData","setDuplicatesData","onTransactionsImportDuplicatesModalDuplicateCheckboxChange","oldDuplicateData","newDuplicateData","previousDuplicatesData","newDuplicatesData","data-bs-dismiss","confirmedDuplicates","filteredNewTransactions","newTransaction","TransactionsImportConfirmedModal","longestTransactionDate","max","longestAmount","longestDescription","transactionDateString","amountString","descriptionString","transactionDateSpaces","fill","amountSpaces","descriptionSpaces","TransactionsImportFormToggle","TransactionsView","transactionsImportDuplicatesModalNewTransactions","transactionsImportDuplicatesModalDuplicates","isTransactionsImportDuplicatesModalOpen","onTransactionsImportDuplicatesModalClose","onTransactionsImportDuplicatesModalSubmit","onTransactionsImportFormSubmitProp","onTransactionsImportFormSubmit","onTransactionsImportFormFileInputChangeProp","onTransactionDetailModalSubmitProp","onTransactionDetailModalSubmit","onTransactionDeleteModalSubmitProp","onTransactionDeleteModalSubmit","transactionsImportConfirmedModalTransactions","isTransactionsImportConfirmedModalOpen","closeTransactionsImportConfirmedModal","onTransactionsImportConfirmedModalSubmit","transactionCategories","transactionTypes","isTransactionImportFormOpen","setIsTransactionImportFormOpen","filteredTransactions","setFilteredTransactions","transactionDetailModalTransaction","setTransactionDetailModalTransaction","isTransactionDetailModalOpen","setIsTransactionDetailModalOpen","transactionDeleteModalTransaction","setTransactionDeleteModalTransaction","isTransactionDeleteModalOpen","setIsTransactionDeleteModalOpen","closeTransactionDetailModal","closeTransactionDeleteModal","wasOpen","deletedTransaction","SettingsInput","setting","setName","SettingsForm","settings","submittedSettings","props","SettingsView","FooterNavbar","active","footerNavbar","activePath","process","navItems","activeItem","navItem","setActiveItem","SignInSettingsModal","role","GoogleApiUserButton","aria-labelledby","App","setTransactions","setBudgetsData","setAccountsData","setAccountData","setBudgetCycle","setTransactionsImportDuplicatesModalNewTransactions","setTransactionsImportDuplicatesModalDuplicates","setIsTransactionsImportDuplicatesModalOpen","setTransactionsImportConfirmedModalTransactions","setIsTransactionsImportConfirmedModalOpen","setSignedInUser","isSignInSettingsModalOpen","setIsSignInSettingsModalOpen","update","gapiLoaded","saveSettings","savedSettings","settingName","settingValue","connectToGoogleAPI","onSignInChange","openSignInSettingsModal","setTransactionsHandler","previousTransactions","callback","oldTransaction","transactionsArray","typeCheckedTransactions","typeCheckTransactions","matches","phrase","categorizedTransactionData","toLowerCase","word","toUpperCase","categorizeTransactionByDescription","setTransactionsWrapper","importTransactionsWrapper","openTransactionsImportDuplicatesModal","openTransactionsImportConfirmedModal","checkTransactionsForDuplicates","setBudgetsDataWrapper","newBudgetsData","previousBudgetsData","typeCheckBudgetsData","setAccountsDataWrapper","newAccountsData","previousAccountsData","Balance","typeCheckAccountsData","setAccountDataWrapper","newAccountData","previousAccountData","typeCheckAccountData","closeTransactionsImportDuplicatesModal","basename","path","exact","updateTransactionWrapper","deleteTransactionWrapper","confirmedTransactions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5b814b4a.chunk.js","sourcesContent":["//Private Functions\r\nconst getHeadersFromJSON = JSON=>{\r\n  if (!JSON instanceof Array) JSON = [JSON];\r\n  return JSON.reduce((headers, transaction)=>\r\n    [\r\n      ...headers,\r\n      ...Object.keys(transaction).filter(key=>!headers.includes(key))\r\n    ]\r\n  , []);\r\n};\r\n\r\n//Public functions\r\nexport const getSpreadsheetData = ()=>{\r\n  return JSON.parse(localStorage.getItem(\"spreadsheet-data\"));\r\n};\r\n\r\nexport const setSpreadsheetData = spreadsheetData=>{\r\n  return localStorage.setItem(\"spreadsheet-data\", JSON.stringify(spreadsheetData));\r\n};\r\n\r\nexport const getSpreadsheetId = ()=>{\r\n  const spreadsheetData = getSpreadsheetData();\r\n  return (spreadsheetData ? spreadsheetData.spreadsheetId : null);\r\n};\r\n\r\nexport const setSpreadsheetId = spreadsheetId=>{\r\n  const spreadsheetData = getSpreadsheetData() || {};\r\n  const newSpreadsheetData = {\r\n    ...spreadsheetData,\r\n    spreadsheetId,\r\n  };\r\n  return setSpreadsheetData(newSpreadsheetData);\r\n};\r\n\r\nexport const getCredentials = ()=>{\r\n  return JSON.parse(localStorage.getItem(\"creds\"));\r\n};\r\n\r\nexport const setCredentials = credentials=>{\r\n  return localStorage.setItem(\"creds\", JSON.stringify(credentials));\r\n};\r\n\r\nexport const getClientId = ()=>{\r\n  const creds = getCredentials();\r\n  return (creds ? creds.clientId : null);\r\n};\r\n\r\nexport const setClientId = clientId=>{\r\n  const creds = getCredentials() || {};\r\n  const newCreds = {\r\n    ...creds,\r\n    clientId,\r\n  };\r\n  return setCredentials(newCreds);\r\n};\r\n\r\nexport const convertSheetsArraysToJSON = (data, delimiter=\",\")=>{\r\n  if (!data) return null;\r\n\r\n  //Get the object keys\r\n  const keys = data.splice(0,1)[0];\r\n\r\n  //Return the data\r\n  return data.map(line=>\r\n    line.reduce((obj, value, i)=>\r\n      ({\r\n        ...obj,\r\n        [keys[i]]: (\r\n          value === \"\" ?\r\n          null :\r\n          (value === \"TRUE\" ? true : (value === \"FALSE\" ? false : value))\r\n        ),\r\n      })\r\n  , {})\r\n  );\r\n};\r\n\r\nexport const convertJSONToSheetsArray = (JSON, delimiter=\",\")=>{\r\n  if (!JSON) return null;\r\n\r\n  const headers = getHeadersFromJSON(JSON);\r\n\r\n  return [\r\n    headers,\r\n    ...JSON.map(object=>\r\n      headers.map(header=>(\r\n        object[header] === null ?\r\n        \"\" :\r\n        (Array.isArray(object[header]) ? object[header].join(\",\") : object[header]))\r\n      )\r\n    )\r\n  ];\r\n};\r\n\r\nexport const getDynamicPropertyByArray = (startingObject, dotSeparatedProperties)=>{\r\n  if (!(typeof dotSeparatedProperties === \"string\")) return null;\r\n  if(!dotSeparatedProperties) return startingObject;\r\n  if (!dotSeparatedProperties.includes(\".\")) return startingObject[dotSeparatedProperties];\r\n\r\n  let object = startingObject;\r\n  for(let property of dotSeparatedProperties.split(\".\")) {\r\n    if (!property) continue;\r\n    object = object[property];\r\n  }\r\n  return object;\r\n};\r\n\r\nexport const convertColumnNumberToColumnLetter = columnNumber=>{\r\n  const NUM_OF_LETTERS = 26;\r\n  const columnLettersArray = [];\r\n\r\n  //Decrement the column number by 1 (1-based, not 0-based)\r\n  columnNumber--;\r\n\r\n  for(;columnNumber >= 0;columnNumber=(columnNumber/NUM_OF_LETTERS)-1) {\r\n    const index = Math.floor(columnNumber % NUM_OF_LETTERS);\r\n    const letter = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"[index];\r\n    columnLettersArray.push(letter);\r\n  }\r\n\r\n  //Return back the \"reversed\" column letters\r\n  return columnLettersArray.reverse().join(\"\");\r\n};\r\n\r\nexport const convertColumnLetterToColumnNumber = columnLetters=>{\r\n  const NUM_OF_LETTERS = 26;\r\n\r\n  const columnNumber = [...columnLetters].reduce((number,columnLetter,i)=>{\r\n    const index = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".indexOf(columnLetter);\r\n\r\n    //Increment the column number by 1 (1-based, not 0-based)\r\n    return number += (index+1) * (NUM_OF_LETTERS**i);\r\n  }, 0);\r\n\r\n  //Return back the \"reversed\" column letters\r\n  return columnNumber;\r\n};\r\n\r\nexport const convertArrayToA1Notation = (rowsColumnsArray, startingCell=\"A1\")=>{\r\n  const startingColumnLetter = startingCell.match(/(^[A-Z]+)/)[1];\r\n  const startingRow = Number(startingCell.match(/(\\d)/)[1]);\r\n  const startingColumnIndex = convertColumnLetterToColumnNumber(startingColumnLetter);\r\n\r\n  const [rows, columns] = rowsColumnsArray;\r\n  const columnLetter = convertColumnNumberToColumnLetter(startingColumnIndex+columns-1);\r\n  const rowNumber = startingRow+rows-1;\r\n  return `${startingCell}:${columnLetter}${rowNumber}`;\r\n};\r\n\r\nexport const parseGoogleSheetsNumber = value=>{\r\n  let potentialNumber;\r\n  return (value && (potentialNumber = Number(value)) && !isNaN(potentialNumber) ? potentialNumber : null);\r\n};\r\n\r\nexport const parseGoogleSheetsDate = value=>{\r\n  let potentialDate;\r\n  return (value && (potentialDate = (new Date(value))) && !isNaN(potentialDate.getTime()) ? potentialDate : null);\r\n};\r\n","import {getSpreadsheetId, setSpreadsheetId, convertSheetsArraysToJSON, convertJSONToSheetsArray, getDynamicPropertyByArray, convertColumnNumberToColumnLetter, convertColumnLetterToColumnNumber, convertArrayToA1Notation} from './utilities.js'\r\n\r\nexport const callGoogleApiFunction = (googleApi, resourceType, method, optionsParam, pageToken)=>{\r\n  //Declare variables\r\n  let leftoverIds = null;\r\n  const listIdChunkLength = 50;\r\n  let params = [];\r\n  let options = optionsParam;\r\n\r\n  //Build the request options\r\n  if (googleApi === \"youtube\") {\r\n    options = {\r\n      ...optionsParam,\r\n      part: [\r\n        \"snippet\",\r\n        \"contentDetails\",\r\n        \"status\",\r\n      ],\r\n    };\r\n  }\r\n\r\n  //Check that, if provided SOMETHING as an id,\r\n  // it wasn't falsy\r\n  if (\r\n    options.id !== undefined &&  (\r\n      options.id === null ||\r\n      options.id.length === 0\r\n    )\r\n  ) return null;\r\n\r\n  //If this was a \"list\" call, add extra options\r\n  if (method === \"list\") {\r\n    //Set the maximum amount of results per call\r\n    options.maxResults = 50;\r\n\r\n    //Only set the pageToken option if we're provided one\r\n    if (pageToken) options.pageToken = pageToken;\r\n\r\n    //Check that no more than 50 ids are searched per call;\r\n    // Otherwise, query the first 50, and save the rest for\r\n    // a follow-up call\r\n    if (options.id && options.id instanceof Array && options.id.length > 50) {\r\n      leftoverIds = options.id.splice(listIdChunkLength, options.id.length);\r\n    }\r\n  }\r\n\r\n  //If more parameters were found in options, move them over\r\n  if (options.params) {\r\n    params = (options.params instanceof Array ? options.params : [options.params]);\r\n    delete options.params;\r\n  }\r\n\r\n  //Return a Promise to the Google API\r\n  return new Promise(async (resolve,reject)=>{\r\n    try {\r\n      //Get the resource object\r\n      const resource = getDynamicPropertyByArray(window.gapi.client[googleApi], resourceType);\r\n\r\n      //Make the resource method call\r\n      const response = await resource[method](options, ...params);\r\n      console.log(response);\r\n\r\n      //If a \"list\" query was performed\r\n      if (method === \"list\") {\r\n        //If there are more results, recurse using the nextPageToken\r\n        if (response.result.nextPageToken) return resolve([...response.result.items, ...await callGoogleApiFunction(googleApi, resourceType, method, options, response.result.nextPageToken)]);\r\n\r\n        //If more than 50 ids were provided,\r\n        // move to the next set of ids\r\n        if (leftoverIds) return resolve([...response.result.items, ...await callGoogleApiFunction(googleApi, resourceType, method, {...options, id: leftoverIds})]);\r\n\r\n        //If a single id was provided instead of an arary,\r\n        // respond with the single resource using the first item of\r\n        // response.result.items, instead of the array of items\r\n        if ((options.id && !(options.id instanceof Array)) || (resourceType === \"channels\" && options.mine === true)) return resolve(response.result.items[0]);\r\n\r\n        //Otherrwise, return the entire array of items\r\n        return resolve([...response.result.items]);\r\n      }\r\n\r\n      if (resourceType === \"spreadsheets.values\" && method === \"get\") {\r\n        //Return the values\r\n        return resolve(convertSheetsArraysToJSON(response.result.values));\r\n      }\r\n\r\n      //If an \"update\" or \"insert\" query was performed\r\n      if (method === \"update\" || method === \"insert\") return resolve(response.result);\r\n\r\n      //If a \"delete\" or some other query was performed\r\n      return resolve(response);\r\n    }\r\n    catch (errResponse) {\r\n      return reject(errResponse.result.error);\r\n    }\r\n  });\r\n};\r\n\r\n//Declare our specific functions\r\nexport const getSheetsSpreadsheet = async ()=>{\r\n  return callGoogleApiFunction(\"sheets\", \"spreadsheets\", \"get\", {spreadsheetId: getSpreadsheetId()});\r\n};\r\n\r\nexport const getSheetsSpreadsheetValues = async (sheetName, range)=>{\r\n  if (!range) range = convertArrayToA1Notation([1000,26]); //A1:AA1000\r\n  if (typeof range === \"string\") range = [range]; //convert to an array of ranges if only one specified\r\n  range = range.map(r=>`'${sheetName}'!${range}`); //Add the sheet name to the range\r\n\r\n  return callGoogleApiFunction(\"sheets\", \"spreadsheets.values\", \"get\", {spreadsheetId: getSpreadsheetId(), range});\r\n};\r\n\r\nexport const updateSheetsSpreadsheetValues = async (sheetName, valuesJSON, range)=>{\r\n  if (!range) range = convertArrayToA1Notation([1000,26]); //A1:Z1000\r\n  if (typeof range === \"string\") range = [range]; //convert to an array of ranges if only one specified\r\n  range = range.map(r=>`'${sheetName}'!${range}`); //Add the sheet name to the range\r\n\r\n  return callGoogleApiFunction(\"sheets\", \"spreadsheets.values\", \"update\", {\r\n      spreadsheetId: getSpreadsheetId(),\r\n      range,\r\n      valueInputOption: \"USER_ENTERED\",\r\n      includeValuesInResponse: true,\r\n      responseValueRenderOption: \"FORMATTED_VALUE\",\r\n      resource: {\r\n        values: convertJSONToSheetsArray(valuesJSON),\r\n      }\r\n    });\r\n};\r\n","import {throwException} from './../utilities';\r\n\r\nconst scopes = [\r\n  //\"https://www.googleapis.com/auth/drive\",  //See, edit, create, and delete all or your drive files\r\n  //\"https://www.googleapis.com/auth/drive.file\",  //See, edit, create, and delete only the specific Google Drive files you use with this app\r\n  \"https://www.googleapis.com/auth/spreadsheets\",  //See, edit, create, all your Google sheets spreadsheets\r\n];\r\nconst discoveryDocs = [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"];\r\n\r\n//create helper function to retrieve authorization credentials stored outside of version control\r\nconst fetchAuthCredentials = ()=>{\r\n  console.info(\"Fetching authorization credentials...\");\r\n\r\n  try {\r\n    //Get & return the credentials from localStorage\r\n    const creds = JSON.parse(localStorage.getItem(\"creds\"));\r\n    if (creds && creds.clientId) return creds;\r\n\r\n    //If proper credentials weren't found, throw\r\n    const CredentialsNotFoundError = new Error(\"Failed to get authorization credentials.\")\r\n    CredentialsNotFoundError.name = \"CredentialsNotFoundError\";\r\n    throw CredentialsNotFoundError;\r\n  }\r\n  catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\n//Load the Google Client, OAuth2.0 libraries\r\nexport const initAuthorization = (loginCallback, logoutCallback)=>{\r\n  try {\r\n    //Attempt to get the credentials\r\n    const creds = fetchAuthCredentials();\r\n\r\n    //Load the Google APIs\r\n    loadGoogleApis(creds, loginCallback, logoutCallback)\r\n\r\n    return creds;\r\n  }\r\n  catch (err) {\r\n    return throwException(err);\r\n  }\r\n};\r\n\r\nconst loadGoogleApis = (creds, loginCallback, logoutCallback)=>{\r\n  try {\r\n    console.info(\"Loading Google Client, OAuth2.0 APIs...\");\r\n    window.gapi.load(\"client:auth2\", ()=>{initializeGoogleApis(creds, loginCallback, logoutCallback)});\r\n  }\r\n  catch (err) {\r\n    return throwException(err);\r\n  }\r\n};\r\n\r\n//Initialize Google Client library (which simultaneously initializes Google OAuth2.0 library) and set up sign in listeners\r\nconst initializeGoogleApis = async (creds, loginCallback, logoutCallback)=>{\r\n  console.info(\"Loaded Google Client, OAuth2.0 APIs.\");\r\n  console.info(\"Initializing Google Client API...\");\r\n  const {clientId} = creds;\r\n\r\n  //Attempt to initialize the Google API\r\n  window.gapi.client.init({\r\n    clientId: clientId,\r\n    scope: scopes.join(\" \"), //space delimited\r\n    discoveryDocs: discoveryDocs,\r\n  })\r\n  .then(()=>{\r\n    console.info(\"Initialized Google Client API.\");\r\n\r\n    //Listen for sign in state changes\r\n    window.gapi.auth2.getAuthInstance().isSignedIn.listen(\r\n      isSignedIn => updateSigninStatus(isSignedIn, loginCallback, logoutCallback)\r\n    );\r\n\r\n    //Handle initial sign in state\r\n    updateSigninStatus(window.gapi.auth2.getAuthInstance().isSignedIn.get(), loginCallback, logoutCallback);\r\n  })\r\n  .catch(err=>{\r\n    return throwException(err);\r\n  });\r\n};\r\n\r\n//Update UI sign in state changes\r\nconst updateSigninStatus = (isSignedIn, loginCallback, logoutCallback)=>{\r\n  console.info(\"Updating sign in status...\");\r\n  if (isSignedIn) {\r\n    // authorizeButton.style.display = \"none\";\r\n    // signoutButton.style.display = \"block\";\r\n    // signoutButton.removeAttribute(\"disabled\");\r\n\r\n    //Get profile information\r\n    const signInInfo = getProfileInformation();\r\n\r\n    //Run the callback functions\r\n    if (loginCallback) loginCallback(signInInfo);\r\n  }\r\n  else {\r\n    // authorizeButton.style.display = \"block\";\r\n    // signoutButton.style.display = \"none\";\r\n\r\n    //Run the callback functions\r\n    if (logoutCallback) logoutCallback(null);\r\n  }\r\n  console.info(\"Updated sign in status.\");\r\n};\r\n\r\nexport const signIn = async ()=>{\r\n  try {\r\n    await window.gapi.auth2.getAuthInstance().signIn();\r\n  }\r\n  catch (err) {\r\n    return throwException(err, false, false);\r\n  }\r\n};\r\n\r\nexport const signOut = async ()=>{\r\n  try {\r\n    await window.gapi.auth2.getAuthInstance().signOut();\r\n  }\r\n  catch (err) {\r\n    return throwException(err, false, false);\r\n  }\r\n};\r\n\r\nconst getProfileInformation = ()=>{\r\n  console.info(\"Getting profile info...\");\r\n  const profile = window.gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile();\r\n  if (!profile) return null;\r\n  return {\r\n    id: profile.getId(),\r\n    name: profile.getName(),\r\n    firstName: profile.getGivenName(),\r\n    lastName: profile.getFamilyName(),\r\n    imageUrl: profile.getImageUrl(),\r\n    emailAddress: profile.getEmail(),\r\n  };\r\n};\r\n","import {isFalsy, nullCoalesce, convertNumberToCurrency, convertCSVToJSON, convertDateStringToDate, areObjectsEqual, getBudgetAmountSpentFromTransactions, getMonthFromNumber, getBillingCycleFromDate, getBudgetCycleFromDate} from './../utilities';\r\nimport {parseGoogleSheetsNumber, parseGoogleSheetsDate} from './../googleApi';\r\n\r\n//Declare private functions\r\nconst toPascalCase = phrase=>{\r\n  return phrase.split(\" \").map(word=>word[0].toUpperCase() + word.substring(1).toLowerCase()).join(\" \");\r\n};\r\n\r\n//Declare public functions\r\nexport const typeCheckTransactions = function (transactions) {\r\n  return transactions.map(transaction=>(\r\n    {\r\n      ...transaction,\r\n      PostedDate: parseGoogleSheetsDate(transaction.PostedDate),\r\n      TransactionDate: parseGoogleSheetsDate(transaction.TransactionDate),\r\n      Amount: parseGoogleSheetsNumber(isNaN(transaction.Amount) ? transaction.Amount.replace(/(\\$|,)/g, \"\") : transaction.Amount),\r\n      Tags: !isFalsy(transaction.Tags) ? transaction.Tags : [],\r\n      BudgetCycle: parseGoogleSheetsDate(transaction.BudgetCycle),\r\n      DateCreated: parseGoogleSheetsDate(transaction.DateCreated),\r\n      DateModified: parseGoogleSheetsDate(transaction.DateModified),\r\n    }\r\n  ));\r\n};\r\n\r\nexport const importTransactions = function(transactionsData, dataType) {\r\n  try {\r\n    //if this is scraped from online app\r\n    if (dataType === \"scraped\") {\r\n      //Spilt the string of transactions into an array\r\n      return transactionsData\r\n        .split(/(?:\\r\\n|\\r|\\n)/)\r\n        .map(transactionLine=>{\r\n          if (!transactionLine) return null;\r\n\r\n          //Get the current date\r\n          const currentDate = new Date();\r\n\r\n          //Determine if this matches a transaction line\r\n          const isMatch = transactionLine.match(/(\\d{2}\\/\\d{2}\\/\\d{2})\\t\\t([^\\t]+)\\t(-?)\\$([\\d,]+\\.\\d{2})/);\r\n          if (!isMatch) {\r\n            console.warn(`Unable to read transaction.\\r\\n${transactionLine}`);\r\n            return null;\r\n          }\r\n\r\n          //Save and trim the matched data\r\n          const [fullMatch, TransactionDate, Description, IsNegativeAmount, Amount] = [...isMatch].map(match=>(match ? match.trim() : match));\r\n\r\n          //Return the new transaction object\r\n          return {\r\n            PostedDate: null,\r\n            TransactionDate: convertDateStringToDate(TransactionDate, \"MM/dd/yy\"),\r\n            AccountNumber: null,\r\n            Type: null,\r\n            Description,\r\n            DescriptionDisplay: null,\r\n            Amount: Number(`${IsNegativeAmount}${Amount}`.replace(\",\",\"\")),\r\n            Category: null,\r\n            Notes: null,\r\n            Tags: [],\r\n            BudgetCycle: getBudgetCycleFromDate(convertDateStringToDate(TransactionDate, \"MM/dd/yy\")),\r\n            IsAutoCategorized: false,\r\n            IsUpdatedByUser: false,\r\n            DateCreated: currentDate,\r\n            DateModified: currentDate,\r\n          };\r\n        })\r\n        //Filter out anything that didn't become a transaction\r\n        .filter(transaction=>transaction !== null)\r\n        //Bring in transactions in ascending TransactionDate\r\n        .reverse();\r\n    }\r\n\r\n    //Otherwise, this is CSV or JSON data\r\n\r\n    //If CSV data, convert it to JSON first\r\n    if (dataType === \"csv\") transactionsData = transactionsData.map(csvData=>convertCSVToJSON(csvData)).flat();\r\n\r\n    //For each CSV file, convert the contents to JSON\r\n    return transactionsData.map(transaction=>{\r\n      const _Date = (transaction.Date ? transaction.Date.trim() : null);\r\n      const PostedDate = (transaction.PostedDate ? transaction.PostedDate.trim() : null);\r\n      const TransactionDate = (transaction.TransactionDate ? transaction.TransactionDate.trim() : null);\r\n      const AccountNumber = (transaction[\"Card No.\"] ? transaction[\"Card No.\"].trim() : null);\r\n      const Type = (transaction.Type ? transaction.Type.trim() : null);\r\n      const Description = (transaction.Description ? transaction.Description.trim() : null);\r\n      const Charges = (transaction.Charges ? transaction.Charges.trim() : null);\r\n      const Payments = (transaction.Payments ? transaction.Payments.trim() : null);\r\n      const Debit = (transaction.Debit ? transaction.Debit.trim() : null);\r\n      const Credit = (transaction.Credit ? transaction.Credit.trim() : null);\r\n\r\n      //Get the current date\r\n      const currentDate = new Date();\r\n\r\n      //Validate calculated values\r\n      const type = (\r\n        Object.keys(transaction).includes(\"Credit\") && Object.keys(transaction).includes(\"Debit\") ?\r\n          //Checking/Savings account\r\n          nullCoalesce(Type, (Credit && (Number(Credit) || Credit !== \"0\") ? \"Credit\" : (Debit && (Number(Debit) || Debit !== \"0\") ? \"Debit\" : null))) : (\r\n          Object.keys(transaction).includes(\"Charges\") && Object.keys(transaction).includes(\"Payments\") ?\r\n          //Credit Card account\r\n          nullCoalesce(Type, (Charges && (Number(Charges) || Charges !== \"0\") ? \"Charges\" : (Payments && (Number(Payments) || Payments !== \"0\") ? \"Payments\" : null))) :\r\n          null\r\n        )\r\n      );\r\n      const transactionDate = convertDateStringToDate(nullCoalesce(TransactionDate, _Date), \"MM/dd/yyyy\");\r\n      if (isFalsy(type) || isFalsy(transactionDate)) throw new Error(`Unable to read transaction.\\r\\n${transaction}`);\r\n\r\n      return {\r\n        PostedDate: (PostedDate ? convertDateStringToDate(PostedDate, \"MM/dd/yyyy\") : null),\r\n        TransactionDate: transactionDate,\r\n        AccountNumber: (AccountNumber ? `*${AccountNumber}` : null),\r\n        Type: type,\r\n        Description,\r\n        DescriptionDisplay: null,\r\n        Amount: Number(`${([\"Charges\",\"Debit\"].includes(type) ? \"-\" : \"\")}${transaction[type]}`),\r\n        Category: null,\r\n        Notes: null,\r\n        Tags: [],\r\n        BudgetCycle: getBudgetCycleFromDate(transactionDate),\r\n        IsAutoCategorized: false,\r\n        IsUpdatedByUser: false,\r\n        DateCreated: currentDate,\r\n        DateModified: currentDate,\r\n      };\r\n    });\r\n  }\r\n  catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const categorizeTransactionByDescription = function(transaction) {\r\n  const {TransactionDate, DescriptionDisplay, Description, Category, Notes, Tags, BudgetCycle, IsAutoCategorized, IsUpdatedByUser} = transaction;\r\n\r\n  //If\r\n  // 1) the transaction has already either\r\n  // been auto-categorized, or updated by the user, or\r\n  // 2) the transaction has no Description to categorized on,\r\n  // there is no need to auto-categorized this transaction,\r\n  // as either it has been auto-categorized, or the user\r\n  // manually updated the transaction data\r\n  if (\r\n    (isTransactionAutoCategorizedOrUpdatedByUser(transaction)) ||\r\n    !Description\r\n  ) return transaction;\r\n\r\n  //Define a base for categorized transaction data\r\n  let categorizedTransactionData = {};\r\n\r\n  //Define matches, if matched capture groups are needed\r\n  let matches;\r\n\r\n  //Income\r\n  // NOTE: Always sets budget cycle values to the next month's budget cycle\r\n       if (matches = Description.match(/ELECTRONIC\\/ACH CREDIT (\\w{5} \\w{2} , \\w{3}\\.) PAYROLL \\d{10}/i))  categorizedTransactionData = {Category: \"Infor payroll\", DescriptionDisplay: `${matches[1]}`, Notes: null, /*BudgetCycle: getBudgetCycleFromDate(new Date(TransactionDate.getMonth()+1))*/};\r\n  else if (matches = Description.match(/INTEREST PAYMENT PAID THIS STATEMENT THRU (\\d{2})\\/(\\d{2})/i))  categorizedTransactionData = {Category: \"Other income\", DescriptionDisplay: `Interest paid ${matches[1]}/${matches[2]}`, Notes: null, /*BudgetCycle: getBudgetCycleFromDate(new Date(TransactionDate.getMonth()+1))*/};\r\n\r\n  //Deposits\r\n  else if (Description.match(/MOBILE CHECK DEPOSIT/i))  categorizedTransactionData = {Category: null, DescriptionDisplay: \"Mobile check deposit\", Notes: null};\r\n\r\n  //Withdrawals\r\n  else if (Description.match(/ATM CASH WITHDRAWAL (?:\\d{4} \\w{4} \\d{12}|[\\w ]+)/i))  categorizedTransactionData = {Category: null, DescriptionDisplay: \"ATM withdrawal\", Notes: null};\r\n\r\n  //Transfers\r\n  else if (matches = Description.match(/ONLINE BANKING TRANSFER (?:CREDIT )?(?:MOBILE APP TRANSFER )?(To|From) (?:\\d{4} )?\\d{9}(\\d{4})/i))  categorizedTransactionData = {Category: null, DescriptionDisplay: `Transfer ${matches[1].toLowerCase()} *${matches[2]}`, Notes: null};\r\n  else if (matches = Description.match(/AUTOMATIC TRANSFER DEBIT \\w+ \\w+ TRANSFER \\d{9}(\\d{4})-\\d \\d{10}/i))  categorizedTransactionData = {Category: null, DescriptionDisplay: `Automatic transfer to *${matches[1]}`, Notes: null};\r\n  else if (matches = Description.match(/ZELLE TRANSFER (TO|FROM) ([\\w ]+) \\d{2}\\/\\d{2} \\w+/i))  categorizedTransactionData = {Category: null, DescriptionDisplay: `Zelle transfer ${matches[1].toLowerCase()} ${toPascalCase(matches[2])}`, Notes: null};\r\n\r\n  //Payments\r\n  else if (matches = Description.match(/CREDIT CARD PAYMENT (?:MOBILE APP PAYMENT|ONLINE BANKING TRANSFER) TO \\d{4} \\d{6}\\*{6}(\\d{4})/i))  categorizedTransactionData = {Category: null, DescriptionDisplay: `Payment for CCD *${matches[1]}`, Notes: null};\r\n  else if (matches = Description.match(/PAYMENT - \\w{5} \\w{3} \\w{7} \\w{2}/i))  categorizedTransactionData = {Category: null, DescriptionDisplay: `Credit card payment`, Notes: null};\r\n\r\n  //Bills\r\n  else if (Description.match(/ELECTRONIC\\/ACH DEBIT PIEDMONT N\\. G\\. DRAFT \\d{13} \\d{10}/i))  categorizedTransactionData = {Category: \"Piedmont Natural Gas\", DescriptionDisplay: \"Piedmont Natural Gas\", Notes: null};\r\n  else if (Description.match(/ELECTRONIC\\/ACH DEBIT DUKEENERGY BILL PAY \\d{12} \\w{10}/i))  categorizedTransactionData = {Category: \"Duke Energy\", DescriptionDisplay: \"Duke Energy\", Notes: null};\r\n  else if (Description.match(/ELECTRONIC\\/ACH DEBIT SHARONVIEW FEDER RE PAYMENT \\d{10} \\d{10}/i))  categorizedTransactionData = {Category: \"Sharonview mortgage & escrow\", DescriptionDisplay: \"Sharonview mortgage\", Notes: null};\r\n  else if (Description.match(/ELECTRONIC\\/ACH DEBIT THOMASEHANNAHYMC PURCHASE \\d{10}/i))  categorizedTransactionData = {Category: \"YMCA membership\", DescriptionDisplay: \"YMCA membership\", Notes: null};\r\n  else if (Description.match(/Simplisafe 888-957-4675 Ma/i))  categorizedTransactionData = {Category: \"SimpliSafe (for mom)\", DescriptionDisplay: \"SimpliSafe\", Notes: null};\r\n  else if (Description.match(/SDC\\*Laurens Electric C Laurens SC/i))  categorizedTransactionData = {Category: \"Laurens Electric ProTec Security\", DescriptionDisplay: \"Laurens Electric ProTec Security\", Notes: null};\r\n  else if (Description.match(/SJWD Water District 8649492805 SC/i))  categorizedTransactionData = {Category: \"SJWD Water District\", DescriptionDisplay: \"SJWD Water\", Notes: null};\r\n  else if (Description.match(/State Farm Insurance 8009566310 Il/i))  categorizedTransactionData = {Category: \"State Farm auto insurance\", DescriptionDisplay: \"State Farm\", Notes: null};\r\n  else if (Description.match(/Spotify USA(?: New York NY)?/i))  categorizedTransactionData = {Category: \"Spotify Premium subscription\", DescriptionDisplay: \"Spotify Premium\", Notes: null};\r\n  else if (Description.match(/Netflix.Com Netflix.Com Ca/i))  categorizedTransactionData = {Category: \"Netflix Premium subscription\", DescriptionDisplay: \"Netflix Premium\", Notes: null};\r\n  else if (Description.match(/Ddv \\*Discoveryplus 0123456789 TN/i))  categorizedTransactionData = {Category: \"Discovery Plus subscription\", DescriptionDisplay: \"Discovery Plus\", Notes: null};\r\n  else if (Description.match(/(?:AT&T \\*Payment|ATT\\*BILL PAYMENT) 800-288-2020 TX/i))  categorizedTransactionData = {Category: \"AT&T Internet\", DescriptionDisplay: \"AT&T Internet\", Notes: null};\r\n  else if (Description.match(/KIRBY SANITATION\\/C&J E 8648778887 SC/i))  categorizedTransactionData = {Category: \"Kirby Sanitation\", DescriptionDisplay: \"Kirby Sanitation\", Notes: null};\r\n\r\n  //Recurring expenses\r\n\r\n  //Gas\r\n  else if (Description.match(/QT \\d+ (?:INSIDE|OUTSIDE|\\w+ \\w{2})/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"QuikTrip\", Notes: null};\r\n  else if (Description.match(/CIRCLE K # \\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"Circle K\", Notes: null};\r\n  else if (Description.match(/7-ELEVEN \\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"7-Eleven\", Notes: null};\r\n  else if (Description.match(/SPINX #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"Spinx\", Notes: null};\r\n  else if (Description.match(/LOVE S TRAVEL \\d+ [\\w ]+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"Love's\", Notes: null};\r\n  else if (Description.match(/SHELL OIL [\\d\\w]+ [\\w ]+ \\w{2}/i)) categorizedTransactionData = {Category: \"Gas\", DescriptionDisplay: \"Shell\", Notes: null};\r\n\r\n  //Groceies & Necessities\r\n  else if (Description.match(/Walmart Grocery [\\d-]+ Ar/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Walmart Supercenter\", Notes: \"grocery pickup\"};\r\n  else if (Description.match(/(?:Wal-Mart|WM Supercenter) #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Walmart Supercenter\", Notes: null};\r\n  else if (Description.match(/Target #?\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Target\", Notes: null};\r\n  else if (Description.match(/Ingles Markets #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Ingles\", Notes: null};\r\n  else if (Description.match(/Publix #\\d+ \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Publix\", Notes: null};\r\n  else if (Description.match(/(?:Sams ?Club #8142 Spartanburg SC|Sams Club #8142 864-574-3480 SC)/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Sam's Club\", Notes: null};\r\n  else if (Description.match(/Walgreens #\\d+/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Walgreens\", Notes: null};\r\n  else if (Description.match(/Dollar Tree \\w+ \\w{2}/i)) categorizedTransactionData = {Category: \"Groceries/Necessities\", DescriptionDisplay: \"Dollar Tree\", Notes: null};\r\n\r\n  //Family Outings\r\n  else if (Description.match(/McDonald's \\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"McDonald's\", Notes: null};\r\n  else if (Description.match(/Burger King #\\d+(?: \\w+ \\w+ \\w{2})?/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Burger King\", Notes: null};\r\n  else if (Description.match(/Sonic Drive In #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Sonic Drive-In\", Notes: null};\r\n  else if (Description.match(/Cook Out [\\w ]+(?: \\w+ \\w{2})?/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Cook Out\", Notes: null};\r\n  else if (Description.match(/Wendys #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Wendy's\", Notes: null};\r\n  else if (Description.match(/Krystal [\\d\\w]+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Krystal\", Notes: null};\r\n  else if (Description.match(/Checkers Drive In \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Checkers\", Notes: null};\r\n  else if (Description.match(/Jack in the Box \\d+ \\w+/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Jack In The Box\", Notes: null};\r\n  else if (Description.match(/Wayback Burgers \\w{10} \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Wayback Burgers\", Notes: null};\r\n  else if (Description.match(/PDQ \\d+ (OLO )?Greenville SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"PDQ\", Notes: null};\r\n  else if (Description.match(/Chick-Fil-A #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Chick-fil-A\", Notes: null};\r\n  else if (Description.match(/Bojangles \\d+ \\w+/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Bojangles\", Notes: null};\r\n  else if (Description.match(/KFC \\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"KFC\", Notes: null};\r\n  else if (Description.match(/Popeyes \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Popeyes\", Notes: null};\r\n  else if (Description.match(/Taco Bell #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Taco Bell\", Notes: null};\r\n  else if (Description.match(/(?:Chipotle \\d+ \\w+ \\w{2}|Chipotle Online 1800\\d{6} CA)/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Chipotle\", Notes: null};\r\n  else if (Description.match(/Taco Casa #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Taco Casa\", Notes: null};\r\n  else if (Description.match(/TST\\* WILLY TACO - HUB SPARTANBURG SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Willy Taco\", Notes: null};\r\n  else if (Description.match(/El Tejano Mexican Rest/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"El Tejano\", Notes: null};\r\n  else if (Description.match(/La Fogata Mexican Rest Simpsonville Sc/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"La Fogata\", Notes: null};\r\n  else if (Description.match(/El Molcajete Duncan Sc/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"El Molcajete\", Notes: null};\r\n  else if (Description.match(/CKE\\*TACO DOG SPARTANBU SPARTANBURG SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Taco Dog\", Notes: null};\r\n  else if (Description.match(/Tropical Grille \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Tropical Grille\", Notes: null};\r\n  else if (Description.match(/WAFFLE HOUSE \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Waffle House\", Notes: null};\r\n  else if (Description.match(/Chili's \\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Chili's\", Notes: null};\r\n  else if (Description.match(/Paisanos Italian Resta/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Paisanos Italian Restaurant\", Notes: null};\r\n  else if (Description.match(/Sweet Basil Thai Cusin Greenville SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Sweet Basil Thai Cusine\", Notes: null};\r\n  else if (Description.match(/Panda Hibachi Duncan SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Panda Hibachi\", Notes: null};\r\n  else if (Description.match(/PF Changs #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"PF Changs\", Notes: null};\r\n  else if (Description.match(/Pizza Hut \\d+ \\d+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Pizza Hut\", Notes: null};\r\n  else if (Description.match(/Tutti Frutti Spartanburg SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Tutti Frutti\", Notes: null};\r\n  else if (Description.match(/KRISPY KREME \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Krispy Kreme\", Notes: null};\r\n  else if (Description.match(/IHOP \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"IHOP\", Notes: null};\r\n  else if (Description.match(/Applebees \\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Applebee's\", Notes: null};\r\n  else if (Description.match(/Dunkin #\\d+ \\w+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Dunkin\", Notes: null};\r\n  else if (Description.match(/Shipwreck Cove Duncan SC/i))  categorizedTransactionData = {Category: \"Family Outings\", DescriptionDisplay: \"Shipwreck Cove\", Notes: null};\r\n\r\n  //Church\r\n  else if (Description.match(/Brookwood Church Donat Simpsonville Sc/i))  categorizedTransactionData = {Category: \"Church\", DescriptionDisplay: \"Brookwood Church\", Notes: \"online giving\"};\r\n\r\n  //Personal Spending\r\n  else if (Description.match(/HARBOR FREIGHT TOOLS \\d \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Personal Spending\", DescriptionDisplay: \"Harbor Freight\", Notes: null};\r\n  else if (Description.match(/The Home Depot #\\d+ \\w+ \\w{2}/i))  categorizedTransactionData = {Category: \"Personal Spending\", DescriptionDisplay: \"The Home Depot\", Notes: null};\r\n\r\n  //Other\r\n  else if (Description.match(/Dollartree \\w+ \\w{2}/i))  categorizedTransactionData = {Category: null, DescriptionDisplay: \"Dollar Tree\", Notes: null};\r\n  else if (Description.match(/[\\w\\* ]+ amzn.com\\/billwa/i))  categorizedTransactionData = {Category: null, DescriptionDisplay: \"Amazon\", Notes: null};\r\n  else if (Description.match(/SPARTANBURGCO TREAS 8645962603 SC/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: \"Spartanburg County Treasury\", Notes: null};\r\n  else if (matches = Description.match(/ELECTRONIC\\/ACH CREDIT IRS TREAS 310 ([\\w ]+) \\d{10}/i))  categorizedTransactionData = {Category: \"Miscellaneous\", DescriptionDisplay: `Internal Revenue Service ${matches[1]}`, Notes: null};\r\n\r\n  //If there was no match, return the original transaction\r\n  else return transaction;\r\n\r\n  //Final categorizedTransactionData\r\n  categorizedTransactionData = {\r\n    //only add a category/displayed description/notes, based on the description, if one is not already present\r\n    Category: Category || categorizedTransactionData.Category,\r\n    DescriptionDisplay: DescriptionDisplay || categorizedTransactionData.DescriptionDisplay,\r\n    Notes: Notes || categorizedTransactionData.Notes,\r\n    //BudgetCycle: categorizedTransactionData.BudgetCycle,\r\n  };\r\n\r\n  //Return the transaction with updated categorization data\r\n  return {\r\n    ...transaction,\r\n    ...categorizedTransactionData,\r\n    IsAutoCategorized: true,\r\n  };\r\n};\r\n\r\nexport const getTransactionDefaultDescriptionDisplay = function(transaction) {\r\n  return nullCoalesce(transaction.DescriptionDisplay, `*${transaction.Description}`) || \"\";\r\n};\r\n\r\nexport const formatTransactionDisplay = function(transaction) {\r\n  return {\r\n    ...transaction,\r\n    PostedDate: (transaction.PostedDate ? new Date(transaction.PostedDate).toLocaleDateString().toString() : \"\"),\r\n    TransactionDate: (transaction.TransactionDate ? new Date(transaction.TransactionDate).toLocaleDateString().toString() : \"\"),\r\n    AccountNumber: transaction.AccountNumber || \"\",\r\n    Type: transaction.Type || \"\",\r\n    Description: transaction.Description || \"\",\r\n    DescriptionDisplay: transaction.DescriptionDisplay || \"\",\r\n    Amount: convertNumberToCurrency(transaction.Amount) || \"\",\r\n    Category: transaction.Category || \"\",\r\n    Notes: transaction.Notes || \"\",\r\n  };\r\n};\r\n\r\nexport const isTransactionDuplicate = (potentialDuplicate, transactions)=>{\r\n  return transactions.find(transaction=>\r\n    areObjectsEqual({\r\n      TransactionDate: transaction.TransactionDate.toJSON(),\r\n      Description: transaction.Description,\r\n      Amount: transaction.Amount,\r\n    }, {\r\n      TransactionDate: potentialDuplicate.TransactionDate.toJSON(),\r\n      Description: potentialDuplicate.Description,\r\n      Amount: potentialDuplicate.Amount,\r\n    }\r\n  ));\r\n};\r\n\r\nexport const getBudgetCyclesFromTransactions = transactions=>{\r\n  return [\r\n    ...new Set(\r\n      transactions.map(({BudgetCycle})=>getBudgetCycleFromDate(BudgetCycle))\r\n    )\r\n  ].map(date=>new Date(date));\r\n};\r\n\r\nexport const isTransactionAutoCategorizedOrUpdatedByUser = transaction=>{\r\n  return transaction.IsAutoCategorized === true || transaction.IsUpdatedByUser === true;\r\n};\r\n\r\nexport const getTransactionsAmountTotal = transactions=>{\r\n  return transactions.reduce((total, transaction)=>total+=transaction.Amount, 0);\r\n};\r\n","export const isFalsy = function(value) {\r\n  return value !== 0 && (!value || value == false);\r\n};\r\n\r\nexport const nullCoalesce = function(value) {\r\n  if(isFalsy(arguments)) throw new Error(\"Function cannot accept 0 parameters.\");\r\n  return [...arguments].reduce((accumulator, value)=>accumulator = (isFalsy(accumulator) && !isFalsy(value) ? value : accumulator), null);\r\n};\r\n\r\nexport const convertNumberToCurrency = function(value) {\r\n  if (isNaN(value)) return null;\r\n  return Number(value)\r\n    .toFixed(2)\r\n    .toString()\r\n    .replace(/\\d{4,}/, (p0)=>p0.split('').reverse().join('').replace(/(\\d{3})(?=\\d)/g, \"$1,\").split('').reverse().join('')) //add commas\r\n    .replace(/(\\d)/, \"$$$1\") //add $\r\n};\r\n\r\nexport const convertCSVToJSON = function(csv, delimiter = \",\") {\r\n  //Initialize variables\r\n  const csvData = csv\r\n    //Break apart by new line\r\n    .split(/(?:\\r\\n|\\r|\\n)/)\r\n    //Begin breaking apart each line by the delimiter\r\n    .map(line=>(!line ? null : line.split(delimiter)))\r\n    //Remove the empty lines\r\n    .filter(line=>line);\r\n\r\n  //Get the headers\r\n  const headers = csvData.splice(0,1)[0];\r\n\r\n  //Get the data\r\n  const obj = csvData.map(line=>{\r\n    const lineObj = {};\r\n    line.forEach((value, i)=>{\r\n      lineObj[headers[i]] = value;\r\n    })\r\n    return lineObj;\r\n  });\r\n\r\n  return obj;\r\n};\r\n\r\nexport const getSumByProp = (array, prop)=>{\r\n  //Make sure the provided object is an array\r\n  if (!Array.isArray(array)) {\r\n    //If its not even a single object, return null\r\n    if(!typeof array === \"object\") return null;\r\n\r\n    //Otherwise, wrap the object in an array for processing\r\n    array = [array]\r\n  }\r\n\r\n  return Number(array.reduce((sum, item)=>{\r\n    //If this an object, use the property\r\n    if (typeof item === \"object\") {\r\n      if (!Number.isNaN(item[prop])) return sum+=item[prop];\r\n    }\r\n\r\n    //Otherwise, if a number, use the item directly\r\n    if (!Number.isNaN(item)) return sum+=item;\r\n  }, 0)) || null;\r\n};\r\n\r\nexport const areObjectsEqual = (a,b)=>{\r\n  //## typeof values\r\n  //\"undefined\"\r\n  //\"boolean\"\r\n  //\"number\"\r\n  //\"bigint\"\r\n  //\"string\"\r\n  //\"symbol\"\r\n  //\"function\" (non-primitive)\r\n  //\"object\"  (non-primitive) //includes null\r\n\r\n  //\r\n  if (a === null) {\r\n    if (b === null) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  //First, if not the same type, exit\r\n  const typeofA = typeof a;\r\n  const typeofB = typeof b;\r\n  if (typeofA !== typeofB) return false;\r\n\r\n  //If these are objects, recurse into them\r\n  if (typeofA === \"object\") {\r\n    const aValues = Object.entries(a);\r\n    const bValues = Object.entries(b);\r\n\r\n    //Short-circuit if the number of properties aren't the same\r\n    if(aValues.length !== bValues.length) return false;\r\n\r\n    for(let i = 0; i < aValues.length; i++) {\r\n      const [aKey, aValue] = aValues[i];\r\n      const [bKey, bValue] = bValues[i];\r\n      if(aKey !== bKey) return false;\r\n      if (!areObjectsEqual(aValue, bValue)) return false;\r\n    }\r\n\r\n    //If the objects properties/arrays values are all the same, return true\r\n    return true;\r\n  }\r\n\r\n  //Otherwise, compare the values\r\n  return a === b;\r\n};\r\n\r\nexport const convertDateStringToDate = (dateString, dateStringFormat)=>{\r\n  //Declare variables\r\n  const yearSymbol = \"y\";\r\n  const monthSymbol = \"M\";\r\n  const daySymbol = \"d\";\r\n\r\n  const yearFormatRegEx = new RegExp(`(${yearSymbol}{1,4})`, \"g\");\r\n  const monthFormatRegEx = new RegExp(`(${monthSymbol}{1,4})`, \"g\");\r\n  const dayFormatRegEx = new RegExp(`(${daySymbol}{1,2})`, \"g\");\r\n\r\n  const getDatePartByFormat = (dateString, dateStringFormat, datePartFormatRegex, getDatePartCallback)=>{\r\n    //Match against the provided format\r\n    const isMatch = [...dateStringFormat.matchAll(datePartFormatRegex)];\r\n\r\n    //If none were found, or more than one match is found, throw\r\n    if (!isMatch || isMatch.length > 1) throw new Error(`Error: Format \"${dateStringFormat}\" matched RegExp ${datePartFormatRegex.toString()} ${(isMatch ? isMatch.length : 0)} time${(isMatch ? \"s\" : \"\")}.`);\r\n\r\n    const matchStartingIndex = isMatch[0].index;\r\n    const matchedFormat = isMatch[0][1];\r\n    const matchEndingIndex = matchedFormat.length + matchStartingIndex;\r\n    const matchedString = dateString.substring(matchStartingIndex, matchEndingIndex);\r\n\r\n    //Return back the month index based on the format\r\n    return getDatePartCallback(matchedString, matchedFormat);\r\n  };\r\n\r\n  const getYearByFormat = (yearString, yearFormat)=>{\r\n    if (Number.isNaN(yearString)) return null;\r\n\r\n    if (yearFormat === \"yy\") return Number((new Date()).getFullYear().toString().substring(0,2)+yearString);\r\n    if (yearFormat === \"yyyy\") return Number(yearString);\r\n\r\n    return null;\r\n  };\r\n\r\n  const getMonthIndexByFormat = (monthString, monthFormat)=>{\r\n    if (monthFormat === \"M\") {\r\n      if (monthString === \"1\") return 0;\r\n      if (monthString === \"2\") return 1;\r\n      if (monthString === \"3\") return 2;\r\n      if (monthString === \"4\") return 3;\r\n      if (monthString === \"5\") return 4;\r\n      if (monthString === \"6\") return 5;\r\n      if (monthString === \"7\") return 6;\r\n      if (monthString === \"8\") return 7;\r\n      if (monthString === \"9\") return 8;\r\n      if (monthString === \"10\") return 9;\r\n      if (monthString === \"11\") return 10;\r\n      if (monthString === \"12\") return 11;\r\n    }\r\n    if (monthFormat === \"MM\") {\r\n      if (monthString === \"01\") return 0;\r\n      if (monthString === \"02\") return 1;\r\n      if (monthString === \"03\") return 2;\r\n      if (monthString === \"04\") return 3;\r\n      if (monthString === \"05\") return 4;\r\n      if (monthString === \"06\") return 5;\r\n      if (monthString === \"07\") return 6;\r\n      if (monthString === \"08\") return 7;\r\n      if (monthString === \"09\") return 8;\r\n      if (monthString === \"10\") return 9;\r\n      if (monthString === \"11\") return 10;\r\n      if (monthString === \"12\") return 11;\r\n    }\r\n    if (monthFormat === \"MMM\") {\r\n      if (monthString === \"Jan\") return 0;\r\n      if (monthString === \"Feb\") return 1;\r\n      if (monthString === \"Mar\") return 2;\r\n      if (monthString === \"Apr\") return 3;\r\n      if (monthString === \"May\") return 4;\r\n      if (monthString === \"Jun\") return 5;\r\n      if (monthString === \"Jul\") return 6;\r\n      if (monthString === \"Aug\") return 7;\r\n      if (monthString === \"Sep\") return 8;\r\n      if (monthString === \"Oct\") return 9;\r\n      if (monthString === \"Nov\") return 10;\r\n      if (monthString === \"Dec\") return 11;\r\n    }\r\n    if (monthFormat === \"MMMM\") {\r\n      if (monthString === \"January\") return 0;\r\n      if (monthString === \"February\") return 1;\r\n      if (monthString === \"March\") return 2;\r\n      if (monthString === \"April\") return 3;\r\n      if (monthString === \"May\") return 4;\r\n      if (monthString === \"June\") return 5;\r\n      if (monthString === \"July\") return 6;\r\n      if (monthString === \"August\") return 7;\r\n      if (monthString === \"September\") return 8;\r\n      if (monthString === \"October\") return 9;\r\n      if (monthString === \"November\") return 10;\r\n      if (monthString === \"December\") return 11;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const getDayByFormat = (monthString, monthFormat)=>{\r\n    if (Number.isNaN(monthString) || Number(monthString) < 1 || Number(monthString) > 31) return null;\r\n\r\n    return Number(monthString);\r\n  };\r\n\r\n  return new Date(\r\n    getDatePartByFormat(dateString, dateStringFormat, yearFormatRegEx, getYearByFormat),\r\n    getDatePartByFormat(dateString, dateStringFormat, monthFormatRegEx, getMonthIndexByFormat),\r\n    getDatePartByFormat(dateString, dateStringFormat, dayFormatRegEx, getDayByFormat)\r\n  );\r\n};\r\n\r\nexport const isDescendantOf = (element, potentialParent) => {\r\n  if (\r\n    element.parentElement &&\r\n    potentialParent &&\r\n    element.parentElement !== potentialParent\r\n  ) return isDescendantOf(element.parentElement, potentialParent);\r\n\r\n  return element.parentElement != null &&\r\n    potentialParent != null &&\r\n    element.parentElement === potentialParent;\r\n};\r\n","import {getSumByProp} from './utilities.js';\r\nimport {parseGoogleSheetsNumber, parseGoogleSheetsDate} from './../googleApi';\r\n\r\nexport const isCreditCardPaymentTransaction = transaction=>{\r\n  return transaction.Description.match(/PAYMENT - THANK YOU ATLANTA GA/i);\r\n};\r\n\r\nexport const isIncomeTransaction = transaction=>{\r\n  return transaction.Description.match(/ELECTRONIC\\/ACH CREDIT INFOR US , INC\\. PAYROLL 3203469219/i);\r\n};\r\n\r\nexport const getBudgetAmountSpentFromTransactions = (budgetName, transactions)=>{\r\n  const check = transaction=>{\r\n    return (\r\n      //For the Miscellaneous budget, include non-income transactions with no category\r\n      budgetName === \"Miscellaneous\" ?\r\n      [budgetName, null].includes(transaction.Category) && !isCreditCardPaymentTransaction(transaction) && !isIncomeTransaction(transaction) :\r\n      transaction.Category === budgetName\r\n    )\r\n  };\r\n  return getSumByProp(transactions.filter(transaction=>check(transaction)), \"Amount\");\r\n};\r\n\r\nexport const typeCheckBudgetsData = budgetsData=>{\r\n  return budgetsData.map(budgetData=>({\r\n      ...budgetData,\r\n      Amount: parseGoogleSheetsNumber(budgetData.Amount),\r\n    })\r\n  );\r\n};\r\n","export const getMonthFromNumber = number=>{\r\n  switch (number) {\r\n    case 0:\r\n      return \"January\";\r\n      break;\r\n    case 1:\r\n      return \"February\";\r\n      break;\r\n    case 2:\r\n      return \"March\";\r\n      break;\r\n    case 3:\r\n      return \"April\";\r\n      break;\r\n    case 4:\r\n      return \"May\";\r\n      break;\r\n    case 5:\r\n      return \"June\";\r\n      break;\r\n    case 6:\r\n      return \"July\";\r\n      break;\r\n    case 7:\r\n      return \"August\";\r\n      break;\r\n    case 8:\r\n      return \"September\";\r\n      break;\r\n    case 9:\r\n      return \"October\";\r\n      break;\r\n    case 10:\r\n      return \"November\";\r\n      break;\r\n    case 11:\r\n      return \"December\";\r\n      break;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const getBudgetCycleFromDate = date=>{\r\n  return new Date(date.getFullYear(), date.getMonth());\r\n};\r\n\r\nexport const getBudgetCycleString = budgetCycle=>{\r\n  return `${getMonthFromNumber(budgetCycle.getMonth())} ${budgetCycle.getFullYear()}`;\r\n};\r\n\r\nexport const getBudgetCycleDescription = (budgetCycle, todayBudgetCycle=(new Date()))=>{\r\n  const fullYearDifference = todayBudgetCycle.getFullYear() - budgetCycle.getFullYear();\r\n  const monthDifference = (fullYearDifference*12) + (todayBudgetCycle.getMonth() - budgetCycle.getMonth());\r\n  if (monthDifference < 0) return null;\r\n  if (monthDifference === 0) return \"current\";\r\n  if (monthDifference === 1) return \"last month\";\r\n  if (monthDifference < 12) return `${monthDifference} month${monthDifference===1?\"\":\"s\"} ago`;\r\n  const yearDifference = Math.floor(monthDifference/12);\r\n  return `${yearDifference} year${yearDifference===1?\"\":\"s\"} ago`;\r\n}\r\n","export const throwException = (err, throwEx=true, alertWindow=true)=>{\r\n  //Build an exception to throw\r\n  let exception = {};\r\n  let errorMsg = null;\r\n\r\n  //If this is a Javascript exception\r\n  if (err instanceof Error) {\r\n    errorMsg = err.message;\r\n\r\n    exception.name = err.name\r\n    if (err.description === 0 || err.description) exception.description = err.description;\r\n    if (err.number === 0 || err.number) exception.number = err.number;\r\n    if (err.fileName === 0 || err.fileName) exception.fileName = err.fileName;\r\n    if (err.lineNumber === 0 || err.lineNumber) exception.lineNumber = err.lineNumber;\r\n    if (err.columnNumber === 0 || err.columnNumber) exception.columnNumber = err.columnNumber;\r\n    if (err.stack === 0 || err.stack) exception.stack = err.stack;\r\n  }\r\n  else if (typeof err === \"object\") {\r\n    if (err.message) {\r\n      errorMsg = err.message;\r\n      delete err.message;\r\n    }\r\n    exception = {\r\n      ...exception,\r\n      ...err,\r\n    }\r\n  }\r\n  else if (typeof err === \"string\") {\r\n    errorMsg = err;\r\n  }\r\n\r\n  //Log the original error, for investigation\r\n  console.error(\"throwException()\", err);\r\n\r\n  //Send a prettified version of the error to the screen\r\n  const exceptionMsg = `${errorMsg}\\r\\n${Object.entries(exception).length ? Object.entries(exception).map(([key, value])=>`  + ${key}: ${value}\\r\\n`).join(\"\") : ''}\\r\\nThe application failed.`;\r\n\r\n  if (alertWindow) window.alert(exceptionMsg);\r\n\r\n  //Throw the original error\r\n  if (throwEx) throw err;\r\n}\r\n","import {getSheetsSpreadsheetValues, updateSheetsSpreadsheetValues} from './../googleApi';\r\nimport {throwException} from './../utilities';\r\n\r\nexport const getTransactions = async ()=>{\r\n  try {\r\n    return await getSheetsSpreadsheetValues(\"Transactions Data\");\r\n  }\r\n  catch (err) {\r\n    throwException(err, false);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const insertTransactions = async ()=>{\r\n  try {\r\n    return;\r\n  }\r\n  catch (err) {\r\n    throwException(err, false);\r\n    return;\r\n  }\r\n};\r\n\r\nexport const updateTransactions = async transactions=>{\r\n  try {\r\n    return await updateSheetsSpreadsheetValues(\"Transactions Data\", transactions);\r\n  }\r\n  catch (err) {\r\n    throwException(err, false);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const deleteTransactions = async ()=>{\r\n  try {\r\n    return;\r\n  }\r\n  catch (err) {\r\n    throwException(err, false);\r\n    return;\r\n  }\r\n};\r\n","import {getSheetsSpreadsheetValues} from './../googleApi';\r\nimport {throwException} from './../utilities';\r\n\r\nexport const getBudgetsData = async ()=>{\r\n  try {\r\n    return await getSheetsSpreadsheetValues(\"Budgets Data\");\r\n  }\r\n  catch (err) {\r\n    throwException(err, false);\r\n    return [];\r\n  }\r\n};\r\n","import {getSheetsSpreadsheetValues} from './../googleApi';\r\nimport {throwException} from './../utilities';\r\n\r\nexport const getAccountsData = async ()=>{\r\n  try {\r\n    return await getSheetsSpreadsheetValues(\"Accounts Data\");\r\n  }\r\n  catch (err) {\r\n    throwException(err, false);\r\n    return [];\r\n  }\r\n};\r\n","import {getSheetsSpreadsheetValues} from './../googleApi';\r\nimport {throwException} from './../utilities';\r\n\r\nexport const getAccountData = async ()=>{\r\n  try {\r\n    return await getSheetsSpreadsheetValues(\"Account Data\");\r\n  }\r\n  catch (err) {\r\n    throwException(err, false);\r\n    return [];\r\n  }\r\n};\r\n","import {useEffect} from 'react';\r\n\r\nconst useConsoleLog = (object, ...args)=>{\r\n  return useEffect(()=>console.log(args[0], object, ...args.slice(1)), [object])\r\n};\r\n\r\nexport default useConsoleLog;\r\n","import {useState, useEffect} from 'react';\r\n\r\nconst useScript = (src, optionsParam)=>{\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    new Promise((resolve, reject)=>{\r\n      //Create default options\r\n      const defaultOptions = {\r\n        async: true,\r\n      };\r\n\r\n      //Create the script tag that will be attached to the DOM\r\n      const script = document.createElement(\"script\");\r\n\r\n      //Combine the options, overwriting the defaults\r\n      const options = {\r\n        ...defaultOptions,\r\n        ...optionsParam,\r\n      };\r\n\r\n      //Attach the options to the script tag\r\n      Object.entries(options).forEach(([option, value])=>script[option] = value);\r\n\r\n      //Attach the src to the script tag\r\n      script.src = src;\r\n\r\n      const onLoad = event=>{\r\n        setIsLoaded(true)\r\n        return resolve(event);\r\n      };\r\n\r\n      const onError = event=>{\r\n        return reject(event);\r\n      };\r\n\r\n      //Create onload & onerror callbacks\r\n      script.addEventListener(\"load\", onLoad)\r\n      script.addEventListener(\"error\", onError);\r\n\r\n      document.body.appendChild(script);\r\n\r\n      return ()=>{\r\n        document.body.removeChild(script);\r\n        setIsLoaded(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return isLoaded;\r\n};\r\n\r\nexport default useScript;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport {getBudgetCycleFromDate} from './../utilities';\r\n\r\nconst useBudgetCycleTransactions = (transactions, budgetCycle)=>{\r\n  //Declare functions\r\n  const getLastBudgetCycleIncomeTransactions = (transactions, budgetCycle)=>{\r\n    //Get income transactions from last budget cycle\r\n    if (!transactions.length || !budgetCycle) return [];\r\n\r\n    return transactions.filter(transaction=>[\"Infor payroll\", \"Other income\"].includes(transaction.Category));\r\n  };\r\n\r\n  const getCurrentBudgetCycleIncomeTransactions = (transactions, budgetCycle)=>{\r\n    //Get other income transactions from this budget cycle\r\n    if (!transactions.length || !budgetCycle) return [];\r\n\r\n    return transactions.filter(transaction=>![\"Infor payroll\", \"Other income\"].includes(transaction.Category) && transaction.Amount >= 0 && !transaction.Description.match(/CREDIT CARD PAYMENT (?:MOBILE APP PAYMENT|ONLINE BANKING TRANSFER) TO \\d{4} \\d{6}\\*{6}(\\d{4})/i) && !transaction.Description.match(/PAYMENT - \\w{5} \\w{3} \\w{7} \\w{2}/i));\r\n  };\r\n\r\n  const getCurrentBudgetCycleExpenseTransactions = (transactions, budgetCycle)=>{\r\n    //Get expense transactions from this budget cycle\r\n    if (!transactions.length || !budgetCycle) return [];\r\n\r\n    return transactions.filter(transaction=>![\"Infor payroll\", \"Other income\"].includes(transaction.Category) && transaction.Amount < 0 && !transaction.Description.match(/CREDIT CARD PAYMENT (?:MOBILE APP PAYMENT|ONLINE BANKING TRANSFER) TO \\d{4} \\d{6}\\*{6}(\\d{4})/i) && !transaction.Description.match(/PAYMENT - \\w{5} \\w{3} \\w{7} \\w{2}/i));\r\n  };\r\n\r\n  const getBudgetCycleTransactions = (transactions, budgetCycle)=>{\r\n    //Get transactions marked with this budgetCycle\r\n    // (or with a Date of this budget cycle, if no BudgetCycle)\r\n    const currentBudgetCycleTransactions = transactions.filter(transaction=>\r\n      //Transactions with this budget cycle\r\n      getBudgetCycleFromDate(transaction.BudgetCycle || transaction.TransactionDate).getTime() === budgetCycle.getTime()\r\n      &&\r\n      //Remove payment transactions\r\n      !(transaction.Type === \"Payment\")\r\n      &&\r\n      //Remove corresponding credit/debit transfers\r\n      !(transaction.Type===\"Transfer\" && transactions.find(transaction2=>\r\n        transaction.TransactionDate.getTime()===transaction2.TransactionDate.getTime() &&\r\n        transaction.Amount===-transaction2.Amount &&\r\n        transaction.DescriptionDisplay.match(/\\*(\\d{4})/)[1]===transaction2.AccountNumber.match(/\\*(\\d{4})/)[1] &&\r\n        transaction.AccountNumber.match(/\\*(\\d{4})/)[1]===transaction2.DescriptionDisplay.match(/\\*(\\d{4})/)[1]\r\n      ))\r\n    );\r\n\r\n    console.log(\r\n      \"Filtered corresponding credit/debit transfers\",\r\n      transactions.filter(transaction=>getBudgetCycleFromDate(transaction.BudgetCycle || transaction.TransactionDate).getTime() === budgetCycle.getTime()\r\n      &&\r\n      //Remove payment transactions\r\n      !(transaction.Type === \"Payment\")\r\n      &&\r\n      transaction.Type===\"Transfer\" && transactions.find(transaction2=>\r\n        transaction.TransactionDate.getTime()===transaction2.TransactionDate.getTime() &&\r\n        transaction.Amount===-transaction2.Amount &&\r\n        transaction.DescriptionDisplay.match(/\\*(\\d{4})/)[1]===transaction2.AccountNumber.match(/\\*(\\d{4})/)[1] &&\r\n        transaction.AccountNumber.match(/\\*(\\d{4})/)[1]===transaction2.DescriptionDisplay.match(/\\*(\\d{4})/)[1]\r\n      ))\r\n    );\r\n\r\n    //Get last budget cycle's income\r\n    const lastBudgetCycleIncomeTransactions = getLastBudgetCycleIncomeTransactions(currentBudgetCycleTransactions, budgetCycle);\r\n\r\n    //Get this budget cycle's other income\r\n    const currentBudgetCycleIncomeTransactions = getCurrentBudgetCycleIncomeTransactions(currentBudgetCycleTransactions, budgetCycle);\r\n\r\n    //Get this month's transactions (minus income)\r\n    const currentBudgetCycleExpenseTransactions = getCurrentBudgetCycleExpenseTransactions(currentBudgetCycleTransactions, budgetCycle);\r\n\r\n    return {\r\n      income: [...lastBudgetCycleIncomeTransactions, ...currentBudgetCycleIncomeTransactions],\r\n      expenses: currentBudgetCycleExpenseTransactions,\r\n      get all() {return [...this.income, ...this.expenses].flat()},\r\n    };\r\n  };\r\n\r\n  //Initialize state\r\n  const [budgetCycleTransactions, setBudgetCycleTransactions] = useState(getBudgetCycleTransactions(transactions, budgetCycle));\r\n\r\n  //Whenever transactions or budgetCycle changes,\r\n  // update state\r\n  useEffect(()=>\r\n    setBudgetCycleTransactions(getBudgetCycleTransactions(transactions, budgetCycle))\r\n  , [transactions, budgetCycle]);\r\n\r\n  //Return the state\r\n  return budgetCycleTransactions;\r\n};\r\n\r\nexport default useBudgetCycleTransactions;\r\n","import {Link} from 'react-router-dom';\r\n\r\nimport './index.scss';\r\n\r\nconst Logo = ({ light })=>{\r\n  return (\r\n    <Link className={`navbar-brand d-flex align-items-center ${(light !== undefined ? \"text-light\" : \"\")}`} to=\"/\">\r\n      <i className={`dashboard-header-logo fas fa-sliders-h  ${(light !== undefined ? \"\" : \"text-primary\")} fs-3`}></i>\r\n      <h1 className=\"display-5 ms-2 mb-0\">ldgr</h1>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import {signIn} from './../../googleApi'\r\n\r\nimport './index.scss';\r\n\r\nconst GoogleApiSigninButton = ({ isReadyForSignIn })=>{\r\n  return (\r\n    <button className=\"btn btn-primary\" type=\"button\" onClick={signIn} disabled={!isReadyForSignIn}>Sign in with Google</button>\r\n  );\r\n};\r\n\r\nexport default GoogleApiSigninButton;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport Logo from './../Logo';\r\nimport GoogleApiSignInButton from './../GoogleApiSignInButton';\r\n\r\nimport './index.scss';\r\n\r\nconst SignInView = ({ isReadyForSignIn })=>{\r\n  return (\r\n    <div className=\"view signin-view container-fluid\">\r\n      <div className=\"container-fluid d-flex flex-column justify-content-center align-items-center min-vh-100\">\r\n        <Logo />\r\n        <GoogleApiSignInButton isReadyForSignIn={isReadyForSignIn} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignInView;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport {getBudgetCycleString, getBudgetCyclesFromTransactions, getBudgetCycleDescription, getBudgetCycleFromDate} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst DashboardBudgetCycleDropdown = ({ transactions, budgetCycle, onChange:onChangeProp })=>{\r\n  const todayBudgetCycle = getBudgetCycleFromDate(new Date());\r\n\r\n  const getAllBudgetCycles = ()=>{\r\n    return [\r\n      ...new Set([\r\n        todayBudgetCycle, //assure the current month is an option as well\r\n        ...getBudgetCyclesFromTransactions(transactions),\r\n      ].map(date=>date.toJSON()))\r\n    ]\r\n      .map(JSON=>new Date(JSON));\r\n  };\r\n\r\n  const [allBudgetCycles, setAllBudgetCycles] = useState(getAllBudgetCycles());\r\n\r\n  useEffect(()=>\r\n    setAllBudgetCycles(getAllBudgetCycles())\r\n  , [transactions]);\r\n\r\n  const onClick = event=>{\r\n    const budgetCycleJSON = event.target.getAttribute(\"data-budget-cycle\");\r\n    if (!budgetCycleJSON) return;\r\n    const budgetCycle = new Date(budgetCycleJSON);\r\n    onChangeProp(budgetCycle);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-month-dropdown dropdown\">\r\n      <button id=\"dashboardMonthDropdown\" className=\"btn dropdown-toggle container-fluid\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n        <strong className=\"dashboard-month-dropdown-month h2 d-block mb-0\">\r\n          {getBudgetCycleString(budgetCycle)}\r\n        </strong>\r\n        <em className=\"dashboard-month-dropdown-month-description d-block text-muted h6\">({getBudgetCycleDescription(budgetCycle)})</em>\r\n      </button>\r\n      <ul className=\"dropdown-menu container-fluid\" onClick={onClick}>\r\n        {allBudgetCycles.map(budgetCycle=>(\r\n          <li key={budgetCycle.toJSON()}>\r\n            <a href=\"#\" className=\"dropdown-item\" data-budget-cycle={budgetCycle.toJSON()}>\r\n              {getBudgetCycleString(budgetCycle)} <em className=\"text-muted\">({getBudgetCycleDescription(budgetCycle)})</em>\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardBudgetCycleDropdown;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport {convertNumberToCurrency} from './../../utilities';\r\nimport {useBudgetCycleTransactions} from './../../hooks';\r\n\r\nimport DashboardBudgetCycleDropdown from './../DashboardBudgetCycleDropdown';\r\n\r\nimport './index.scss';\r\n\r\nconst DashboardTop = ({ transactions, accountsData, accountData, budgetCycle, onBudgetCycleChange })=>{\r\n  const budgetCycleTransactions = useBudgetCycleTransactions(transactions, budgetCycle);\r\n\r\n  const currentBudgetCycleIncome = budgetCycleTransactions.income.length && budgetCycleTransactions.income.reduce((total, t)=>total+=t.Amount, 0);\r\n  const currentBudgetCycleExpenses = budgetCycleTransactions.expenses.length && budgetCycleTransactions.expenses.reduce((total, t)=>total+=t.Amount, 0);\r\n  const currentBudgetCycleRemaining = currentBudgetCycleIncome+currentBudgetCycleExpenses;\r\n\r\n  return (\r\n    <div className=\"dashboard-top\">\r\n      <div className=\"dashboard-account-overview container-fluid py-2 px-3\">\r\n        <div className=\"container-fluid text-end text-muted my-2\">\r\n          Last Updated:&nbsp;\r\n          <span className=\"dashboard-accounts-total d-inline\">6/29/2021</span>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"dashboard-accounts-total-container col text-center fw-bold h4 d-flex flex-column border-end border-2\">\r\n            Month Remaining:\r\n            <span className=\"dashboard-accounts-total\">{currentBudgetCycleRemaining ? convertNumberToCurrency(currentBudgetCycleRemaining) : \"--\"}</span>\r\n          </div>\r\n          <div className=\"dashboard-credit-score-container col text-center fw-bold h4 d-flex flex-column\">\r\n            Credit Score:\r\n            <span className=\"dashboard-credit-score\">{(accountData.length ? accountData.sort((a,b)=>a.LastUpdated+b.LastUpdated)/*sort descending*/.filter(record=>record.CreditScore)[0].CreditScore /*most recent LastUpdated*/ : \"--\")}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <DashboardBudgetCycleDropdown transactions={transactions} budgetCycle={budgetCycle} onChange={onBudgetCycleChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardTop;\r\n","import './index.scss';\r\n\r\nconst DashboardInsight = ({ insight })=>{\r\n  let iconClass = insight.iconClass;\r\n  if (!iconClass) {\r\n    if (insight.type === \"primary\") {\r\n      iconClass = \"fas fa-xs fa-info-circle\";\r\n    }\r\n    else if (insight.type === \"success\") {\r\n      iconClass = \"fas fa-xs fa-check-circle\";\r\n    }\r\n    else if (insight.type === \"warning\") {\r\n      iconClass = \"fas fa-xs fa-exclamation-triangle\";\r\n    }\r\n    else if (insight.type === \"danger\") {\r\n      iconClass = \"fas fa-xs fa-times-circle\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`dashboard-insight alert alert-${insight.type}`}>\r\n      <div>\r\n        <i className={\"fas fa-sliders-h me-1\"}></i>\r\n        <h3 className=\"d-inline-block\">{insight.title}</h3>\r\n      </div>\r\n      <i className={`${iconClass} me-1`}></i>\r\n      <span>{insight.text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardInsight;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport DashboardInsight from './../DashboardInsight';\r\nimport {convertNumberToCurrency, getBudgetAmountSpentFromTransactions} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst DashboardInsights = ({ budgetCycleTransactions, budgetsData })=>{\r\n  const [insights, setInsights] = useState([]);\r\n\r\n  const runInsights = ()=>{\r\n    if (!budgetCycleTransactions.all.length || !budgetsData.length) return;\r\n\r\n    //First, remove all insights\r\n    setInsights([]);\r\n\r\n    /* Check if there is money left in the \"Personal Spending\" budget */\r\n    const personalSpendingBudgetData = budgetsData.find(budgetData=>budgetData.Name===\"Personal Spending\");\r\n    const personalSpendingBudgetLeft = getBudgetAmountSpentFromTransactions(\"Personal Spending\", budgetCycleTransactions.all) - personalSpendingBudgetData.Amount;\r\n    if (personalSpendingBudgetLeft > 0) {\r\n      const insight = {\r\n        type: \"primary\",\r\n        title: \"Insights\",\r\n        text: `You have ${convertNumberToCurrency(personalSpendingBudgetLeft)} left in \\\"Personal Spending\\\".`\r\n      };\r\n      setInsights(previousInsights=>[...previousInsights, insight]);\r\n    }\r\n\r\n    /* Check if we spent more than last month */\r\n    //const currentBudgetSpent = transactions.reduce((total,i)=>total+=i.amount);\r\n    //const lastBudgetSpent = transactions.reduce((total,i)=>total+=i.amount);\r\n    //const budgetCycleDifference = lastBudgetSpent-currentBudgetSpent;\r\n    // if (budgetCycleDifference > 0) {\r\n    //   const insight = {\r\n    //     type: \"danger\",\r\n    //     iconClass: \"fas fa-sliders-h\",\r\n    //     title: \"Insights\",\r\n    //     text: `You've spent ${convertNumberToCurrency(budgetCycleDifference)} more than last month.`\r\n    //   };\r\n    //   setInsights([...insights, insight]);\r\n    // }\r\n\r\n    /* Check if a bill has gone up */\r\n    const bills = budgetsData.filter(budgetData=>budgetData.type===\"bill\");\r\n    bills.forEach(bill=>{\r\n      const amountSpent = getBudgetAmountSpentFromTransactions(bill.name, budgetCycleTransactions.all)\r\n      if (!amountSpent) return;\r\n      if (Math.abs(amountSpent) > Math.abs(bill.amount)) {\r\n        const insight = {\r\n          type: \"warning\",\r\n          title: \"Insights\",\r\n          text: `Bill \"${bill.name}\" has gone up ${convertNumberToCurrency(Math.abs(amountSpent)-Math.abs(bill.amount))}.`\r\n        };\r\n        setInsights(previousInsights=>[...previousInsights, insight]);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(()=>{\r\n    runInsights();\r\n  }, [budgetCycleTransactions, budgetsData]);\r\n\r\n  return (\r\n    <div className=\"dashboard-insights container mt-5\">\r\n      <h2 className=\"text-center mb-4\">Insights</h2>\r\n      {insights.map((insight,i)=>(\r\n        <DashboardInsight key={i} insight={insight} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardInsights;\r\n","import './index.scss';\r\n\r\nconst DashboardShowcase = ()=>{\r\n  return (\r\n    <div className=\"dashboard-showcase container d-flex flex-column justify-content-center align-items-center bg-primary text-light my-3 mx-auto\">\r\n      <i className=\"fas fa-check-circle fa-2x mb-4\"></i>\r\n      <h3 className=\"fw-bold h2\">All good!</h3>\r\n      <span className=\"h6\">You are on track for this month.</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardShowcase;\r\n","import DashboardInsights from './../DashboardInsights';\r\nimport DashboardShowcase from './../DashboardShowcase';\r\n\r\nimport './index.scss';\r\n\r\nconst DashboardContent = ({ budgetCycleTransactions, budgetsData })=>{\r\n  return (\r\n    <div className=\"dashboard-content container-fluid overflow-auto\">\r\n      <DashboardShowcase />\r\n      <DashboardInsights budgetCycleTransactions={budgetCycleTransactions} budgetsData={budgetsData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardContent;\r\n","import {useEffect} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nimport {useBudgetCycleTransactions} from './../../hooks';\r\n\r\nimport './index.scss';\r\n\r\nimport DashboardTop from './../DashboardTop';\r\nimport DashboardContent from './../DashboardContent';\r\n\r\nconst DashboardView = ({ signedInUser, transactions, accountsData, accountData, budgetsData, budgetCycle, onBudgetCycleChange, setFooterNavbar })=>{\r\n  //Send the route to the footer navbar\r\n  const route = useLocation().pathname;\r\n  useEffect(()=>{\r\n    setFooterNavbar(route);\r\n  }, []);\r\n\r\n  const budgetCycleTransactions = useBudgetCycleTransactions(transactions, budgetCycle);\r\n\r\n  return (\r\n    <div className=\"view dashboard-view d-flex flex-column\">\r\n      <main className=\"main flex-grow-1\">\r\n        <DashboardTop transactions={transactions} accountsData={accountsData} accountData={accountData} budgetCycle={budgetCycle} onBudgetCycleChange={onBudgetCycleChange} />\r\n        <DashboardContent budgetCycleTransactions={budgetCycleTransactions} budgetsData={budgetsData} />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardView;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport {convertNumberToCurrency} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst BudgetGraphStatusIcon = ({ budget, overBudget, overEarned })=> {\r\n  let iconClass;\r\n  let iconText;\r\n  let iconColor;\r\n\r\n  if (budget.Type === \"bill\") {\r\n    if (budget.amountSpent) {\r\n      if (!overBudget) {\r\n        iconClass = \"fas fa-check-circle\";\r\n        iconText = \"Paid\";\r\n        iconColor = \"success\";\r\n      }\r\n      else {\r\n        iconClass = \"fas fa-times-circle\";\r\n        iconText = \"Overpaid\";\r\n        iconColor = \"danger\";\r\n      }\r\n    }\r\n    else {\r\n      iconClass = \"\";\r\n      iconText = \"Pending\";\r\n      iconColor = \"secondary\";\r\n    }\r\n  }\r\n  if (budget.Type === \"income\") {\r\n    if (budget.amountSpent) {\r\n      if (budget.amountSpent === budget.Amount) {\r\n        iconClass = \"fas fa-check-circle\";\r\n        iconText = \"Earned\";\r\n        iconColor = \"success\";\r\n      }\r\n      else if (overEarned) {\r\n        iconClass = \"fas fa-check-circle\";\r\n        iconText = \"Over-earned\";\r\n        iconColor = \"success\";\r\n      }\r\n      else if (!overEarned) {\r\n        iconClass = \"fas fa-exclamation-triangle\";\r\n        iconText = \"Under-earned\";\r\n        iconColor = \"warning\";\r\n      }\r\n    }\r\n  }\r\n\r\n  //If there's an icon to render, render\r\n  if (iconText) {\r\n    return (\r\n      <div className={`budget-graph-status-icon-container d-inline-block badge rounded-pill text-${iconColor} bg-light ms-1 border border-${iconColor}`}>\r\n        <i className={`budget-graph-status-icon fas fa-xs ${iconClass} me-1`}></i>\r\n        <span>{iconText}</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //Otherwise, return null\r\n  return null;\r\n};\r\n\r\nexport default BudgetGraphStatusIcon;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport {convertNumberToCurrency} from './../../utilities';\r\n\r\nimport BudgetGraphStatusIcon from './../BudgetGraphStatusIcon';\r\n\r\nimport './index.scss';\r\n\r\nconst BudgetGraph = ({ budget })=>{\r\n  const isExpenseBudget = budget.Type !== \"income\";\r\n  const overBudget = (isExpenseBudget ? budget.amountSpent < budget.Amount : false);\r\n  const overEarned = (!isExpenseBudget ? budget.amountSpent > budget.Amount : false);\r\n\r\n  return (\r\n    <div className=\"budget-graph-container my-4\">\r\n      <h5 className=\"budget-graph-title d-inline-block\">{budget.Name}</h5>\r\n      <BudgetGraphStatusIcon budget={budget} overBudget={overBudget} overEarned={overEarned} />\r\n      <div className=\"budget-graph-bar-outer\">\r\n        <h6 className=\"budget-graph-bar-stats\" style={\r\n          {\r\n            color: (!overBudget\r\n              ? \"black\" //\"rgb(245,245,245)\"\r\n              : \"red\"\r\n            ),\r\n          }\r\n        }>\r\n          {convertNumberToCurrency(Math.abs(budget.amountSpent))} of {convertNumberToCurrency(Math.abs(budget.Amount))} {(isExpenseBudget ? \"spent\" : \"earned\")}\r\n        </h6>\r\n        <h6 className=\"budget-graph-bar-remaining text-muted\" >\r\n          {convertNumberToCurrency(budget.Amount - budget.amountSpent)} {(overBudget ? \"overspent\" : \"remaining\")}\r\n        </h6>\r\n        <div className=\"budget-graph-bar-inner\" style={\r\n          {\r\n            backgroundColor: (!isExpenseBudget ? \"green\" :  (overBudget ? \"red\" : budget.color)),\r\n            width: (overBudget\r\n              ? `calc(100% * ${(budget.amountSpent - budget.Amount)/budget.Amount})`\r\n              : `calc(100% * ${budget.amountSpent/budget.Amount})`\r\n            ),\r\n            left: (overBudget\r\n              ? \"unset\"\r\n              : 0\r\n            ),\r\n            right: (overBudget\r\n              ? 0\r\n              : \"unset\"\r\n            ),\r\n          }\r\n        }></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BudgetGraph;\r\n","import {useEffect} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nimport BudgetGraph from './../BudgetGraph';\r\n\r\nimport {getBudgetAmountSpentFromTransactions} from './../../utilities';\r\n\r\nimport {useBudgetCycleTransactions} from './../../hooks';\r\n\r\nimport './index.scss';\r\n\r\nconst BudgetsView = ({ transactions, budgetsData, budgetCycle, setFooterNavbar })=>{\r\n  //Send the route to the footer navbar\r\n  const route = useLocation().pathname;\r\n  useEffect(()=>{\r\n    setFooterNavbar(route);\r\n  }, []);\r\n\r\n  const budgetCycleTransactions = useBudgetCycleTransactions(transactions, budgetCycle);\r\n\r\n  return (\r\n    <div className=\"view budgets-view\">\r\n    <h1 className=\"page-title display-3\">Month Overview</h1>\r\n      <div className=\"budget-graphs\">\r\n\r\n        {\r\n          (\r\n            !budgetsData ?\r\n            '' :\r\n            budgetsData.map(budgetData=>{\r\n              const {Name, Amount, Type} = budgetData;\r\n              return <BudgetGraph key={Name} budget={{...budgetData, color: \"#2196f3\", amountSpent: getBudgetAmountSpentFromTransactions(Name, budgetCycleTransactions.all)}}/>\r\n            })\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BudgetsView;\r\n","import {useState} from 'react';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionsImportForm = ({ isOpen, onSubmit:onSubmitProp, onFileInputChange:onFileInputChangeProp })=>{\r\n  const [scrapedTransactionsData, setScrapedTransactionsData] = useState(\"\");\r\n\r\n  const onTransactionsImportFormInputChange = event=>{\r\n    const scrapedText = event.target.value;\r\n    setScrapedTransactionsData(scrapedText);\r\n  };\r\n\r\n  const onTransactionsImportFormFileInputChange = async event=>{\r\n    //Prevent default behavior\r\n    event.preventDefault();\r\n\r\n    const transactionsDataFiles = [...event.target.files];\r\n\r\n    //Get the transactions data\r\n    const transactionsDataArray = [];\r\n    await Promise.all(  //Promise.all handles an array of Promises\r\n      transactionsDataFiles.map(async file=>{\r\n        const fileContent = await file.text();\r\n        transactionsDataArray.push(fileContent);\r\n      })\r\n    );\r\n\r\n    //Reset the file input\r\n    event.target.value = \"\";\r\n\r\n    //Call the parent handler\r\n    onFileInputChangeProp(transactionsDataArray);\r\n  };\r\n\r\n  const onSubmit = event=>{\r\n    //Prevent form submission\r\n    event.preventDefault();\r\n\r\n    //Save the current value\r\n    const scrapedTransactionsDataValue = scrapedTransactionsData;\r\n\r\n    //Reset the input\r\n    setScrapedTransactionsData(\"\");\r\n\r\n    //Send it to the parent\r\n    onSubmitProp(scrapedTransactionsDataValue);\r\n  };\r\n\r\n  return (\r\n    !isOpen ?\r\n    null :\r\n    <form className=\"transaction-import-form\" onSubmit={onSubmit}>\r\n      <div>\r\n        <label className=\"form-label\">Transactions</label>\r\n        <div className=\"input-group mb-2\">\r\n          <textarea id=\"transaction-import-input\" className=\"transaction-import-input form-control\" rows=\"1\" onChange={onTransactionsImportFormInputChange}></textarea>\r\n          <button className=\"btn btn-primary input-group-text\" type=\"submit\">Import</button>\r\n        </div>\r\n        <p className=\"form-text\">Paste transactions data for parsing.</p>\r\n        <div>\r\n          <label className=\"form-label\">Or, import a comma-separated values (*.csv) file.</label>\r\n          <input className=\"transaction-import-form-input-file form-control\" type=\"file\" accept=\".csv\" multiple onChange={onTransactionsImportFormFileInputChange} />\r\n        </div>\r\n        <div id=\"transaction-import-form-status\"></div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TransactionsImportForm;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionDataSearchForm = ({ searchFilters, onSubmit:onSubmitProp, onFilterClick:onFilterClickProp })=>{\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const onChange = event=>{\r\n    const searchText = event.target.value;\r\n    setSearch(searchText);\r\n  };\r\n\r\n  const onSubmit = event=>{\r\n    event.preventDefault();\r\n\r\n    //Save the search value\r\n    const searchValue = search;\r\n\r\n    //Reset the search value\r\n    setSearch(\"\");\r\n\r\n    //Send the search value to the parent\r\n    onSubmitProp(searchValue);\r\n  };\r\n\r\n  const onFilterClick = removedSearchFilter=>{\r\n    onFilterClickProp(removedSearchFilter);\r\n  };\r\n\r\n  return (\r\n    <form className=\"transaction-data-search-form\" onSubmit={onSubmit}>\r\n      <div className=\"transaction-data-search-form-input-container\">\r\n        <i className=\"transaction-data-search-form-icon fas fa-search\"></i>\r\n        <input className=\"transaction-data-search-form-input\" type=\"input\" placeholder=\"Search...\" value={search} onChange={onChange}/>\r\n      </div>\r\n      <div className=\"transaction-data-search-form-search-filters\">\r\n        {searchFilters.map((SearchFilter, i)=>(\r\n          <span key={i} className=\"transaction-data-search-form-search-filter badge rounded-pill bg-secondary\" onClick={event=>onFilterClick(SearchFilter)}><i className=\"transaction-data-search-form-filter-x fas fa-xs fa-times me-1\"></i>{SearchFilter}</span>\r\n        ))}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TransactionDataSearchForm;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionRowDateSeparator = ({ date, count })=>{\r\n  const getMonthString = monthIndex=>{\r\n    if (monthIndex === 0) return \"January\";\r\n    if (monthIndex === 1) return \"February\";\r\n    if (monthIndex === 2) return \"March\";\r\n    if (monthIndex === 3) return \"April\";\r\n    if (monthIndex === 4) return \"May\";\r\n    if (monthIndex === 5) return \"June\";\r\n    if (monthIndex === 6) return \"July\";\r\n    if (monthIndex === 7) return \"August\";\r\n    if (monthIndex === 8) return \"September\";\r\n    if (monthIndex === 9) return \"October\";\r\n    if (monthIndex === 10) return \"November\";\r\n    if (monthIndex === 11) return \"December\";\r\n    return null\r\n  };\r\n\r\n  const convertDateToDateHeaderString = date=>{\r\n    return `${getMonthString(date.getMonth())} ${date.getDate()}, ${date.getFullYear()}`;\r\n  };\r\n\r\n  return (\r\n    <div key={date.getTime()} className=\"transaction-row-date-separator d-flex justify-content-between p-1 px-3\">\r\n      <div>{convertDateToDateHeaderString(date)}</div>\r\n      <div>({count})</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionRowDateSeparator;\r\n","import './index.scss';\r\n\r\nconst TagBadge = ({ tag, onClick })=>{\r\n  return (\r\n    <span key={tag} className=\"tag-badge badge rounded-pill\" onClick={onClick}>{tag}</span>\r\n  );\r\n};\r\n\r\nexport default TagBadge;\r\n","import {useState, useEffect, useRef} from 'react';\r\n\r\nimport TagBadge from './../TagBadge';\r\n\r\nimport {isDescendantOf, getTransactionDefaultDescriptionDisplay, formatTransactionDisplay} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionRow = ({ transaction, onTransactionEditButtonClick:onTransactionEditButtonClickProp, onTransactionDeleteButtonClick:onTransactionDeleteButtonClickProp })=>{\r\n  const [isDeleteButtonVisible, setIsDeleteButtonVisible] = useState(true);\r\n  const [startingX, setStartingX] = useState(0);\r\n  const [startingTouch, setstartingTouch] = useState({});\r\n  const [translateX, setTranslateX] = useState(0);\r\n  const [stickyX, setStickyX] = useState(0);\r\n  const [isBeingDragged, setIsBeingDragged] = useState(false);\r\n  const [isFirstDrag, setIsFirstDrag] = useState(false);\r\n  const [isScrollingNotDragging, setIsScrollingNotDragging] = useState(false);\r\n\r\n  const maxNecessaryDragX = -84; //px, how far over the user must drag to activate the delete button\r\n  const minAllowableDragX = null; //px, how far the user can drag to the left\r\n  const maxAllowableDragX = 0; //px, how far the user can drag to the right\r\n\r\n  const isDragFeatureActive = ()=>(stickyX !== 0);\r\n\r\n  const [transactionDisplay, setTransactionDisplay] = useState({\r\n    PostedDate: \"\",\r\n    TransactionDate: \"\",\r\n    AccountNumber: \"\",\r\n    Type: \"\",\r\n    Description: \"\",\r\n    Amount: \"\",\r\n    Category: \"\",\r\n    Notes: \"\",\r\n    Tags: [],\r\n  });\r\n\r\n  useEffect(()=>{\r\n    const formattedTransactionDisplay = formatTransactionDisplay(transaction);\r\n    setTransactionDisplay({\r\n      ...formattedTransactionDisplay,\r\n      Description: getTransactionDefaultDescriptionDisplay(transaction),\r\n      AccountNumber: formattedTransactionDisplay.AccountNumber || \"*----\",\r\n      Category: formattedTransactionDisplay.Category || \"[uncategorized]\"\r\n    })\r\n  }, [transaction]);\r\n\r\n  const onTransactionEditButtonClick = event=>{\r\n    if (isDragFeatureActive()) return;\r\n    onTransactionEditButtonClickProp(transaction);\r\n  };\r\n\r\n  const onTransactionDeleteButtonClick = event=>{\r\n    onTransactionDeleteButtonClickProp(transaction);\r\n  };\r\n\r\n  //Once the user drags over the necessary distance,\r\n  // set the sticky position\r\n  useEffect(()=>{\r\n\r\n  }, [translateX]);\r\n\r\n  const onTouchStart = event=>{\r\n    //Set where the touch starts\r\n    const touch = event.touches[0];\r\n    setstartingTouch(touch);\r\n\r\n    //Mark that the target is being dragged,\r\n    // so the smooth snapback can be deactivated\r\n    setIsBeingDragged(true);\r\n\r\n    //Also mark that this is the very first drag,\r\n    // so we can calculate whether to scroll or not\r\n    // based on the direction of the drag\r\n    setIsFirstDrag(true);\r\n  };\r\n\r\n  const onTouchMove = event=>{\r\n    //As the touch moves, calculate the drag distance,\r\n    // and set target's translateX to the drag distance,\r\n    // beginning at the target's start position\r\n    const touch = event.touches[0];\r\n    const dragDistanceX = touch.clientX - startingTouch.clientX;\r\n    const dragDistanceY = touch.clientY - startingTouch.clientY;\r\n    const potentialNewTranslateX = startingX + dragDistanceX;\r\n\r\n    //Check whether the target needs to be dragged, or\r\n    // if the drag was too vertical (i.e. a scroll attempt)\r\n    if (isFirstDrag) {\r\n      //Reset the first drag mark\r\n      setIsFirstDrag(false);\r\n\r\n      //If the scroll was too vertical, assume the user\r\n      // was scrolling, not dragging,\r\n      // set the isScrolling mark, and prematurely return\r\n      // from this listener\r\n      if (Math.abs(dragDistanceY) > Math.abs(dragDistanceX)) return setIsScrollingNotDragging(true);\r\n    }\r\n\r\n    //If the user is scrolling, don't drag\r\n    if (isScrollingNotDragging) return;\r\n\r\n    //Continue with the drag logic\r\n    event.preventDefault();\r\n\r\n    //Check that it is within the allowable drag bounds,\r\n    // and adjust accordingly if not\r\n    //And if we over-drag (drag past the max necessary position),\r\n    // decrease the drag\r\n    const newTranslateX = ((!!minAllowableDragX || minAllowableDragX === 0) && potentialNewTranslateX < minAllowableDragX ? minAllowableDragX : ((!!maxAllowableDragX || maxAllowableDragX === 0) && potentialNewTranslateX > maxAllowableDragX ? maxAllowableDragX : (\r\n      potentialNewTranslateX < maxNecessaryDragX ?\r\n      maxNecessaryDragX - ((maxNecessaryDragX - dragDistanceX)/5) :\r\n      potentialNewTranslateX\r\n    )));\r\n\r\n    setTranslateX(newTranslateX);\r\n  };\r\n\r\n  const onTouchEnd = event=>{\r\n    const newStickyX = (translateX <= maxNecessaryDragX ? maxNecessaryDragX : 0);\r\n\r\n    //Set the sticky position to either the \"open\" position,\r\n    // or back to 0, depending on where the drag ended\r\n    setStickyXWrapper(newStickyX);\r\n\r\n    //Assure the first drag mark is reset\r\n    setIsFirstDrag(false);\r\n\r\n    //Reset whether the user is scrolling or dragging\r\n    setIsScrollingNotDragging(false);\r\n  };\r\n\r\n  const endDragFeature = ()=>{\r\n    setStickyXWrapper(0);\r\n  };\r\n\r\n  const setStickyXWrapper = stickyX=>{\r\n    setStickyX(()=>{\r\n      //Reset the target's starting position, and\r\n      // the translated position, to the sticky position\r\n      setTranslateX(stickyX);\r\n      setStartingX(stickyX);\r\n\r\n      //Mark that the target is not being dragged,\r\n      // so the smooth snapback can be activated\r\n      setIsBeingDragged(false);\r\n\r\n      return stickyX;\r\n    });\r\n  };\r\n\r\n  //Save the component DOM node for reference\r\n  const transactionRow = useRef(null);\r\n\r\n  //Create an event listener to check if the user\r\n  // touches outside the dragged target\r\n  const onOutsideTouchStart = event=>{\r\n    if (isDescendantOf(event.target, transactionRow.current)) return;\r\n    if (isDragFeatureActive()) {\r\n      event.preventDefault();\r\n      endDragFeature();\r\n    }\r\n  };\r\n\r\n  //Remove & add the outside touch event listener on each render\r\n  useEffect(()=>{\r\n    document.addEventListener(\"touchstart\", onOutsideTouchStart, {passive: false});\r\n    if (transactionRow.current) transactionRow.current.addEventListener(\"touchmove\", onTouchMove);\r\n    return ()=>{\r\n      document.removeEventListener(\"touchstart\", onOutsideTouchStart);\r\n      if (transactionRow.current) transactionRow.current.removeEventListener(\"touchmove\", onTouchMove);\r\n    };\r\n  }, [transactionRow, onTouchMove, onOutsideTouchStart]);\r\n\r\n  return (\r\n    <div className={`transaction-row ${(!isBeingDragged ? \"released\" : '')}`} style={{transform: `translateX(${translateX}px)`}} onTouchStart={onTouchStart} /* onTouchMove={onTouchMove} //moved to useEffect() for {passive: false} (made default by Chrome) */ onTouchEnd={onTouchEnd} ref={transactionRow} >\r\n      <div className=\"transaction-row-container\" onClick={onTransactionEditButtonClick} >\r\n        <div className=\"transaction-row-description-container\">\r\n          <span className={`transaction-row-description ${(!transaction.DescriptionDisplay ? \"uncategorized\" : \"\")}`}>{transactionDisplay.Description}</span>\r\n          <span className={`transaction-row-amount${transaction.Amount >= 0 ? \" positive\" : \"\"}`}>{transactionDisplay.Amount}</span>\r\n        </div>\r\n        <div className=\"transaction-row-subdescription-container\">\r\n          <span className=\"transaction-row-account\">{transactionDisplay.AccountNumber}</span>\r\n          &nbsp;|&nbsp;\r\n          <span className=\"transaction-row-category\">{transactionDisplay.Category}</span>\r\n        </div>\r\n      </div>\r\n      <button className={`transaction-row-delete-button ${(isDeleteButtonVisible ? \"show\" : \"\")}`} onClick={onTransactionDeleteButtonClick}>\r\n        <span className=\"transaction-row-delete-button-text\">Delete</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionRow;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport TransactionDataSearchForm from './../TransactionDataSearchForm';\r\nimport TransactionRowDateSeparator from './../TransactionRowDateSeparator';\r\nimport TransactionRow from './../TransactionRow';\r\n\r\nimport {convertNumberToCurrency, getTransactionsAmountTotal} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionsDataRows = ({ filteredBudgetCycleTransactions, heading, searchFilters, onTransactionEditButtonClick, onTransactionDeleteButtonClick })=>{\r\n  //Temporary variable used to render date headings\r\n  let currentDateRendered;\r\n\r\n  return (\r\n    <div className=\"transaction-rows\">\r\n      {searchFilters.length ? null : (\r\n        <div className=\"transaction-rows-heading-container d-flex justify-content-between align-items-end mb-2\">\r\n          <h2 className=\"transaction-rows-heading mb-0\">{heading}</h2>\r\n          <div className=\"fw-bold\">\r\n            <span className=\"transaction-rows-heading-count\">{convertNumberToCurrency(getTransactionsAmountTotal(filteredBudgetCycleTransactions))}</span>\r\n            &nbsp;\r\n            <span className=\"transaction-rows-heading-count me-3\">({filteredBudgetCycleTransactions.length})</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {filteredBudgetCycleTransactions\r\n      //Sort remaining transactions\r\n      .sort((a,b)=>b.TransactionDate-a.TransactionDate)\r\n      //Add in the date separators\r\n      .reduce((transactions, transaction)=>{\r\n        if ((currentDateRendered ? currentDateRendered.Date.toJSON() : false) !== transaction.TransactionDate.toJSON()) {\r\n          const dateHeaderObject = {\r\n            Date: transaction.TransactionDate,\r\n            Count: 1,\r\n          };\r\n          transactions.push(dateHeaderObject);\r\n          currentDateRendered = dateHeaderObject;\r\n        }\r\n        else {\r\n          currentDateRendered.Count++;\r\n        }\r\n        return transactions.concat(transaction);\r\n      }, [])\r\n      .map((transaction, i)=>(\r\n        transaction.Date && transaction.Count ?\r\n        <TransactionRowDateSeparator key={i} date={transaction.Date} count={transaction.Count} /> :\r\n        <TransactionRow key={i} transaction={transaction} onTransactionEditButtonClick={onTransactionEditButtonClick} onTransactionDeleteButtonClick={onTransactionDeleteButtonClick} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TransactionsData = ({ budgetCycleTransactions, onTransactionEditButtonClick, onTransactionDeleteButtonClick })=>{\r\n  const filterTransactionsBySearchFilters = (budgetCycleTransactions, searchFilters)=>{\r\n    //Filter transactions (or render them all) based on current search filters\r\n    const newlyFilteredBudgetCycleTransactions = {\r\n      ...budgetCycleTransactions,\r\n      income: budgetCycleTransactions.income.filter(t=>searchFilters.map(a=>(t.DescriptionDisplay || t.Description).match(new RegExp(a, \"i\"))).every(i=>i)),\r\n      expenses: budgetCycleTransactions.expenses.filter(t=>searchFilters.map(a=>(t.DescriptionDisplay || t.Description).match(new RegExp(a, \"i\"))).every(i=>i)),\r\n    };\r\n    Object.defineProperty(newlyFilteredBudgetCycleTransactions, \"all\", Object.getOwnPropertyDescriptor(budgetCycleTransactions, \"all\"));\r\n    return newlyFilteredBudgetCycleTransactions;\r\n  };\r\n\r\n  const [searchFilters, setSearchFilters] = useState([]);\r\n  const [filteredBudgetCycleTransactions, setFilteredBudgetCycleTransactions] = useState(filterTransactionsBySearchFilters(budgetCycleTransactions, searchFilters));\r\n\r\n  const filteredIncomeTotal = convertNumberToCurrency(filteredBudgetCycleTransactions.income.reduce((total, t)=>total+=t.Amount, 0))\r\n  const filteredExpensesTotal = convertNumberToCurrency(filteredBudgetCycleTransactions.expenses.reduce((total, t)=>total+=t.Amount, 0))\r\n  const filteredRemainingTotal = convertNumberToCurrency(filteredBudgetCycleTransactions.all.reduce((total, t)=>total+=t.Amount, 0))\r\n\r\n  const onTransactionDataSearchFormSubmit = search=>{\r\n    setSearchFilters(previousSearchFilters=>[...previousSearchFilters, search]);\r\n  };\r\n\r\n  const onFilterClick = removedSearchFilter=>{\r\n    setSearchFilters(previousSearchFilters=>{\r\n      const newSearchFilters = [...previousSearchFilters];\r\n      return newSearchFilters.splice(newSearchFilters.indexOf(removedSearchFilter),1) && newSearchFilters;\r\n    });\r\n  };\r\n\r\n  //Keep filtered transactions updated\r\n  useEffect(()=>\r\n    setFilteredBudgetCycleTransactions(filterTransactionsBySearchFilters(budgetCycleTransactions, searchFilters))\r\n  , [budgetCycleTransactions, searchFilters]);\r\n\r\n  useEffect(()=>console.log(filteredBudgetCycleTransactions), [filteredBudgetCycleTransactions]);\r\n\r\n  return (\r\n    <div className=\"transactions-data\">\r\n      <TransactionDataSearchForm searchFilters={searchFilters} onSubmit={onTransactionDataSearchFormSubmit} onFilterClick={onFilterClick} />\r\n      {\r\n        searchFilters.length ?\r\n        <TransactionsDataRows filteredBudgetCycleTransactions={filteredBudgetCycleTransactions.all} searchFilters={searchFilters} onTransactionEditButtonClick={onTransactionEditButtonClick} onTransactionDeleteButtonClick={onTransactionDeleteButtonClick}/> :\r\n        <>\r\n          <TransactionsDataRows filteredBudgetCycleTransactions={filteredBudgetCycleTransactions.income} heading=\"Income\" searchFilters={searchFilters} onTransactionEditButtonClick={onTransactionEditButtonClick} onTransactionDeleteButtonClick={onTransactionDeleteButtonClick}/>\r\n          <TransactionsDataRows filteredBudgetCycleTransactions={filteredBudgetCycleTransactions.expenses} heading=\"Expenses\" searchFilters={searchFilters} onTransactionEditButtonClick={onTransactionEditButtonClick} onTransactionDeleteButtonClick={onTransactionDeleteButtonClick}/>\r\n        </>\r\n      }\r\n      <div className=\"transactions-information d-flex justify-content-between mb-4 mr-2\">\r\n        <span className=\"transactions-count\">{(filteredBudgetCycleTransactions.all.length ? filteredBudgetCycleTransactions.all.length : 0)} transactions</span>\r\n        <div>\r\n          <div className=\"transactions-total\">{filteredRemainingTotal} total</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionsData;\r\n","// ## FEATUERS\r\n// - Dropdown list opens when:\r\n//    * click anywhere inside\r\n//    * when the .input-dropdown-input receives input\r\n//    * when the \"Up\" or \"Down\" keys are pressed with the .input-dropdown-input focused\r\n// - Dropdown list closes when:\r\n//    * a selection is clicked or chosen with the \"Enter\" key\r\n//    * a click occurs outside of the dropdown\r\n//    * another element is focused on\r\n//    * the \"Esc\" key is pressed\r\n// - Dropdown list items can be selected by:\r\n//    * clicking on a list item using\r\n//    * using the \"Up\" and \"Down\" keys along with the \"Enter\" key (when .input-dropdown-input focused)\r\n// - Dropdown list items can be filtered/highlighted by inputting into .input-dropdown-input\r\n// ## DESIGN\r\n// - Dropdown input takes 100% of dropdown width\r\n// - Dropdown list height maxes out and scrolls afterward\r\n// - Dropdown list will scroll as selection moves\r\n// - Dropdown list will only move the selection if the dropdown list was already open--if the dropdown list was opened using the \"Up\" or \"Down\" key, the selection will remain on the current value\r\n\r\n\r\n(()=>{\r\nconst isDescendantOf = (element, potentialAncestor) => {\r\n  if (\r\n    element &&\r\n    potentialAncestor &&\r\n    element !== potentialAncestor\r\n  ) return isDescendantOf(element.parentElement, potentialAncestor);\r\n\r\n  return element != null &&\r\n    potentialAncestor != null &&\r\n    element === potentialAncestor;\r\n};\r\n\r\nconst isDescendantOfDropdown = element => {\r\n  if (\r\n    !element.classList.contains(\"input-dropdown\") &&\r\n    element.parentElement\r\n  ) return isDescendantOfDropdown(element.parentElement);\r\n\r\n  if (element.classList.contains(\"input-dropdown\")) return element;\r\n\r\n  return false;\r\n};\r\n\r\n//Create master dropdown closure to hold all dropdown state per event\r\nconst dropdownMasterEventListener = event=>{\r\n  const dropdown = isDescendantOfDropdown(event.target);\r\n\r\n  //Exit if not clicked inside a dropdown\r\n  if (!dropdown) return;\r\n\r\n  //Declare variables\r\n  const eventListeners = [];\r\n  const dropdownItem = event.target.classList.contains(\"input-dropdown-list-item\") && event.target;\r\n  const dropdownInput = dropdown.querySelector(\".input-dropdown-input\");\r\n  const dropdownList = dropdown.querySelector(\".input-dropdown-list\");\r\n  const dropdownListItems = [...dropdown.querySelectorAll(\".input-dropdown-list-item\")];\r\n  const previousSelectedValue = dropdownInput.value;\r\n\r\n\r\n  //Declare functions\r\n  const callEventListeners = event=>{\r\n    eventListeners.filter(listenerObj=>listenerObj[0]===event.type).forEach(listenerObj=>listenerObj[1](event));\r\n  };\r\n\r\n  const filterDropdownItems = value=>{\r\n    //Declare variables\r\n    const regEx = new RegExp(`(${value})`, \"i\");\r\n\r\n    //If no value was passed, exit\r\n    if(!value) return;\r\n\r\n    //Add .hidden to unmatched items\r\n    dropdownListItems.filter(dropdownListItem=>!dropdownListItem.innerText.match(regEx)).forEach(dropdownListItem=>dropdownListItem.classList.add(\"hidden\"));\r\n\r\n    //Add a highlight to matched text in unfiltered items\r\n   dropdownListItems.filter(dropdownListItem=>dropdownListItem.innerText.match(regEx)).forEach(dropdownListItem=>dropdownListItem.innerHTML = dropdownListItem.innerHTML.replace(regEx, `<mark class=\"dropdown-selected-highlight\">$1</mark>`));\r\n  };\r\n\r\n  const unFilterDropdownItems = ()=> dropdownListItems.forEach(dropdownListItem=>{\r\n    dropdownListItem.classList.remove(\"hidden\");\r\n    dropdownListItem.innerHTML = dropdownListItem.innerText;\r\n  });\r\n\r\n  const setDropdownItemsSelection = selectedDropdownListItem=>{\r\n    resetDropdownItemsSelection();\r\n    if(!selectedDropdownListItem) return;\r\n    selectedDropdownListItem.classList.add(\"selected\");\r\n  };\r\n\r\n  const resetDropdownItemsSelection = ()=> dropdownListItems.forEach(dropdownListItem=>dropdownListItem.classList.remove(\"selected\"));\r\n\r\n  const setDropdownSelection = value=>{\r\n    const dropdownInput = dropdown.querySelector(\".input-dropdown-input\");\r\n    if (!dropdownInput) throw new Error();\r\n    dropdownInput.value = value;\r\n    unFilterDropdownItems();\r\n  };\r\n\r\n  const clearDropdownSelection = event=>{\r\n    dropdownInput.value = previousSelectedValue;\r\n  };\r\n\r\n  const checkDropdownListSelectionScroll = ()=>{\r\n    //Delare variables\r\n    const selectedDropdownListItem = dropdownList.querySelector(\".input-dropdown-list-item.selected\");\r\n\r\n    //IF there is no selected item, exit\r\n    if(!selectedDropdownListItem) return;\r\n\r\n    const newlySelectedDropdownListItemRect = selectedDropdownListItem.getBoundingClientRect();\r\n    const dropdownListViewport = dropdownList.getBoundingClientRect();\r\n    const topIsBelowNotAboveViewportTop = newlySelectedDropdownListItemRect.top >= dropdownListViewport.top;\r\n    const bottomIsAboveNotBelowViewportBottom = newlySelectedDropdownListItemRect.bottom <= dropdownListViewport.bottom;\r\n\r\n    //Shift the view of the dropdown list (via scroll), if necessary\r\n\r\n    //If the top is above the viewport, attempt to scroll the viewport to the top of the selection (or to the bottom scrollable area, if selection is at the bottom)\r\n    if (!topIsBelowNotAboveViewportTop) {\r\n      dropdownList.scroll({top: dropdownList.scrollTop + (newlySelectedDropdownListItemRect.top - dropdownListViewport.top)})\r\n    }\r\n    //Or, if the bottom is below the viewport, scroll the viewport down 1 height unit until we can see the selection bottom\r\n    else if (!bottomIsAboveNotBelowViewportBottom) {\r\n      dropdownList.scroll({top: dropdownList.scrollTop + (newlySelectedDropdownListItemRect.height * (Math.floor((newlySelectedDropdownListItemRect.bottom - dropdownListViewport.bottom)/newlySelectedDropdownListItemRect.height)+1))})\r\n    }\r\n  };\r\n\r\n  const addTemporaryEventListeners = ()=>{\r\n    document.addEventListener(\"click\", checkIfClickedOrFocusedOutsideOfDropdown);\r\n    document.addEventListener(\"focus\", checkIfClickedOrFocusedOutsideOfDropdown);\r\n\r\n    dropdownListItems.forEach(dropdownListItem=>dropdownListItem.addEventListener(\"mouseenter\", dropdownListItemOnMouseEnter));\r\n  };\r\n\r\n  const removeTemporaryEventListeners = ()=>{\r\n    document.removeEventListener(\"click\", checkIfClickedOrFocusedOutsideOfDropdown);\r\n    document.removeEventListener(\"focus\", checkIfClickedOrFocusedOutsideOfDropdown);\r\n    //dropdownListItems.forEach(dropdownListItem=>dropdownListItem.removeEventListener(\"mouseenter\", setDropdownSelection));\r\n    //dropdownList.removeEventListener(\"mouseleave\", dropdownListOnMouseLeave);\r\n     dropdownListItems.forEach(dropdownListItem=>dropdownListItem.removeEventListener(\"mouseenter\", dropdownListItemOnMouseEnter));\r\n  };\r\n\r\n  const dropdownIsOpen = ()=>dropdown.classList.contains(\"open\");\r\n\r\n  const openDropdown = ()=>{\r\n    if (dropdownIsOpen()) return;\r\n\r\n    //Open dropdown\r\n    dropdown.classList.add(\"open\");\r\n\r\n    //Set a selected value that matches the current input value, if applicable\r\n    setDropdownItemsSelection(dropdownListItems.filter(dropdownListItem=>dropdownListItem.innerText === dropdownInput.value)[0]);\r\n\r\n    //Add necessary event listeners to dropdown components\r\n    addTemporaryEventListeners();\r\n  };\r\n\r\n  const closeDropdown = ()=>{\r\n    if (!dropdownIsOpen) return;\r\n\r\n    //Remove event listeners\r\n    removeTemporaryEventListeners();\r\n\r\n    //Close the dropdown\r\n    dropdown.classList.remove(\"open\");\r\n  };\r\n\r\n  const checkIfClickedOrFocusedOutsideOfDropdown = event=>{\r\n    //If we click outside of the dropdown or its children, close it\r\n    if (event.target !== dropdownInput) closeDropdown();\r\n  };\r\n\r\n\r\n  //Declare event listeners\r\n  const dropdownListItemOnMouseEnter = event=>{\r\n    const dropdownListItems = [...dropdown.querySelectorAll(\".input-dropdown-list-item\")];\r\n    const selectedDropdownListItem = event.target;\r\n    setDropdownItemsSelection(selectedDropdownListItem);\r\n  };\r\n\r\n  const dropdownInputOnInput = event=>{\r\n\r\n    //Declare variables\r\n    const value = event.target.value;\r\n\r\n    //Assure the dropdown is open\r\n    openDropdown();\r\n\r\n    //Start by resetting all list items to visible\r\n    unFilterDropdownItems();\r\n\r\n    //Now, filter items that don't match and highlight unfiltered matched text\r\n    filterDropdownItems(value);\r\n\r\n    //Set the selected value to the first option\r\n    setDropdownItemsSelection(dropdown.querySelector(\".input-dropdown-list-item:not(.hidden)\"));\r\n\r\n    //Make sure the selected value is within visibility\r\n    checkDropdownListSelectionScroll();\r\n  };\r\n\r\n  const dropdownOnKeyDown = event=>{\r\n    if (\r\n      event.keyCode === 38 /* Up */ ||\r\n      event.keyCode === 40 /* Down */ ||\r\n      event.keyCode === 36 /* Home */ ||\r\n      event.keyCode === 35 /* End */\r\n    ) {\r\n      event.preventDefault();\r\n\r\n      //Declare variables\r\n      const dropdownListItems = [...dropdown.querySelectorAll(\".input-dropdown-list-item:not(.hidden)\")];\r\n\r\n      //Assure the dropdown is open if we pressed the \"Up\" or \"Down\" arrow\r\n      const dropdownWasOpen = dropdownIsOpen();\r\n      if (event.keyCode === 38 /* Up */ || event.keyCode === 40 /* Down */) openDropdown();\r\n\r\n      //Select the next or previous dropdown list item based on the key pressed, only if the dropdown was already open\r\n      if (dropdownWasOpen) {\r\n        if (event.keyCode === 38 /* Up */ || event.keyCode === 40 /* Down */) {\r\n          const upOrDown = (event.keyCode === 38 ? -1 : 1);\r\n          const wrapAround = (event.keyCode === 38 ? dropdownListItems.length : -1);\r\n\r\n          const currentSelectedDropdownListItem = dropdown.querySelector(\".input-dropdown-list-item.selected\");\r\n          const currentSelectedDropdownListItemIndex = (dropdownListItems.indexOf(currentSelectedDropdownListItem) === -1 ? wrapAround : dropdownListItems.indexOf(currentSelectedDropdownListItem));\r\n          const newlySelectedDropdownListItem = dropdownListItems[(currentSelectedDropdownListItemIndex+upOrDown+dropdownListItems.length)%dropdownListItems.length];\r\n          setDropdownItemsSelection(newlySelectedDropdownListItem);\r\n        }\r\n        else if (event.keyCode === 36 /* Home */ || event.keyCode === 35 /* End */) {\r\n          const firstOrLastIndex = (event.keyCode === 36 ? 0 : dropdownListItems.length-1);\r\n          const newlySelectedDropdownListItem = dropdownListItems[firstOrLastIndex];\r\n          setDropdownItemsSelection(newlySelectedDropdownListItem);\r\n        }\r\n      }\r\n\r\n      //Check the scroll on the dropdown list to assure the newly selected item is visible\r\n      checkDropdownListSelectionScroll();\r\n\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode === 13 /* Enter */) {\r\n      event.preventDefault();\r\n\r\n      //Declare variables\r\n      const dropdownListItems = [...dropdown.querySelectorAll(\".input-dropdown-list-item\")];\r\n\r\n      const currentSelectedDropdownListItem = dropdownListItems.filter(dropdownListItem=>dropdownListItem.classList.contains(\"selected\"))[0];\r\n      if (!currentSelectedDropdownListItem) return;\r\n      setDropdownSelection(currentSelectedDropdownListItem.innerText);\r\n      closeDropdown();\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode === 27 /* Esc */) {\r\n      event.preventDefault();\r\n\r\n      //Declare variables\r\n      unFilterDropdownItems();\r\n      resetDropdownItemsSelection();\r\n      clearDropdownSelection();\r\n      closeDropdown();\r\n      return;\r\n    }\r\n  };\r\n\r\n  const dropdownOnClick = event=>{\r\n    //If a dropdown item was clicked, select it\r\n    if (dropdownItem) {\r\n      closeDropdown();\r\n      setDropdownSelection(event.target.innerText);\r\n      return;\r\n    }\r\n\r\n    //If the dropdown was clicked and not already open, open it\r\n    openDropdown();\r\n\r\n    //Attach permanent event listeners\r\n    //dropdownInput.oninput = dropdownInputOnInput; //onInput event listener to filter the dropdownListItems on typing\r\n    //dropdown.onkeydown = dropdownOnKeyDown; /* possible with div.[tabindex=0] */\r\n\r\n    //Also add onMouseover event listeners on the dropdown items\r\n    //dropdownListItems.forEach(dropdownListItem=>dropdownListItem.addEventListener(\"mouseenter\", setDropdownSelection));\r\n    //dropdownList.addEventListener(\"mouseleave\", dropdownListOnMouseLeave);\r\n  };\r\n\r\n  // const dropdownListOnMouseLeave = event=>{\r\n  //   if (!dropdown.classList.contains(\"open\")) return;\r\n  //   clearDropdownSelection(event);\r\n  // };\r\n\r\n  //Save event listeners\r\n  eventListeners.push([\"click\", dropdownOnClick]);\r\n  eventListeners.push([\"input\", dropdownInputOnInput]);\r\n  eventListeners.push([\"keydown\", dropdownOnKeyDown]);\r\n\r\n  callEventListeners(event);\r\n};\r\n\r\ndocument.addEventListener(\"click\", dropdownMasterEventListener /* dropdownOnClick */);\r\ndocument.addEventListener(\"input\", dropdownMasterEventListener /* dropdownInputOnInput */);\r\ndocument.addEventListener(\"keydown\", dropdownMasterEventListener /* dropdownOnKeyDown */);\r\n})();\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport './InputDropdown.js';\r\nimport './InputDropdown.css';\r\nimport './index.scss';\r\n\r\nconst InputDropdown = ({ name, value: initialValue, items, placeholder, onKeyDown, onChange: onChangeProp })=>{\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  //Update the dropdown value whenever a new one is passed\r\n  useEffect(()=>setValue(initialValue), [initialValue]);\r\n\r\n  const onChange = event=>{\r\n    setValue(event.target.value); //handle dropdown onChange\r\n    onChangeProp(event); //handle ancestor-passed onChange prop\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"input-dropdown\">\r\n      <input className=\"input-dropdown-input transaction-modal-input\" name={name} value={value} placeholder={placeholder} onChange={onChange} onKeyDown={onKeyDown} autoComplete=\"off\"/>\r\n      <div className=\"input-dropdown-chevron-container\">\r\n          <i className=\"input-dropdown-chevron\"></i>\r\n        </div>\r\n      <ul className=\"input-dropdown-list\">\r\n        {items.map(item=><li key={item} className=\"input-dropdown-list-item\">{item}</li>)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputDropdown;\r\n","import TagBadge from './../TagBadge';\r\nimport InputDropdown from './../InputDropdown';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionDetailModalInput = ({ transactionDetail, tabIndex, onClick, onBlur, onChange, onKeyDown, onTagBadgeClick })=>{\r\n  return (\r\n    <div key={`${transactionDetail.name}-container`} onClick={onClick} onBlur={onBlur}>\r\n      {(\r\n        transactionDetail.name === \"Tags\" ?\r\n        (\r\n          <div className=\"transaction-modal-input-tags-container form-control\">\r\n            <input className=\"transaction-modal-input-tags-hidden form-control\" type=\"hidden\" name=\"Tags\" value={transactionDetail.value.join(\",\")} />\r\n            <div className=\"transaction-modal-input-tags-badge-container\">\r\n              {transactionDetail.value.map(tag=><TagBadge key={tag} tag={tag} onClick={event=>onTagBadgeClick(tag)} />)}\r\n            </div>\r\n            <transactionDetail.tag className=\"transaction-modal-input transaction-modal-input-tags form-control\" type={transactionDetail.tagType} placeholder={transactionDetail.placeholder} tabIndex={tabIndex} onKeyDown={onKeyDown}></transactionDetail.tag>\r\n          </div>\r\n        ) : (\r\n        [\"Category\", \"Type\"].includes(transactionDetail.name) ?\r\n          <InputDropdown name={transactionDetail.name} value={transactionDetail.value} items={transactionDetail.items} placeholder={transactionDetail.placeholder} disabled tabIndex={tabIndex} onKeyDown={onKeyDown} onChange={onChange}/>\r\n        :\r\n          <transactionDetail.tag className=\"transaction-modal-input transaction-modal-input-text form-control\" name={transactionDetail.name} value={transactionDetail.value} type={transactionDetail.tagType} placeholder={transactionDetail.placeholder} tabIndex={tabIndex} disabled {...(transactionDetail.disabled && {\"data-stay-disabled\": true})} onKeyDown={onKeyDown} onChange={onChange}>{transactionDetail.tag !== \"input\" ? transactionDetail.value : null}</transactionDetail.tag>\r\n      )\r\n    )}\r\n    </div> //disabled inputs don't fire events; wrap in something that will fire an event\r\n  );\r\n};\r\n\r\nexport default TransactionDetailModalInput;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport TransactionDetailModalInput from './../TransactionDetailModalInput';\r\n\r\nimport {nullCoalesce, formatTransactionDisplay} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionDetailModal = ({ transaction, categories, types, buttonsOptions, isOpen, onClose, onSubmit })=>{\r\n  const [PostedDate, setPostedDate] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [TransactionDate, setTransactionDate] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [AccountNumber, setAccountNumber] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [Amount, setAmount] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [Description, setDescription] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [DescriptionDisplay, setDescriptionDisplay] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [Category, setCategory] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [Type, setType] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [Notes, setNotes] = useState(\"\"); //empty string, as initial value for input[type=\"text\"]\r\n  const [Tags, setTags] = useState([]);\r\n\r\n  const transactionDetails = [\r\n    {name: \"PostedDate\", placeholder: \"PostedDate\", value: PostedDate, tag: \"input\", tagType: \"text\", setState: setPostedDate, disabled: false},\r\n    {name: \"TransactionDate\", placeholder: \"TransactionDate\", value: TransactionDate, tag: \"input\", tagType: \"text\", setState: setTransactionDate, disabled: false},\r\n    {name: \"AccountNumber\", placeholder: \"Account Number\", value: AccountNumber, tag: \"input\", tagType: \"text\", setState: setAccountNumber, disabled: false},\r\n    {name: \"Amount\", placeholder: \"Amount\", value: Amount, tag: \"input\", tagType: \"text\", setState: setAmount, disabled: false},\r\n    {name: \"Description\", placeholder: \"Description\", value: Description, tag: \"input\", tagType: \"text\", setState: setDescription, disabled: true},\r\n    {name: \"DescriptionDisplay\", placeholder: \"Description\", value: DescriptionDisplay, tag: \"input\", tagType: \"text\", setState: setDescriptionDisplay, disabled: false},\r\n    {name: \"Category\", placeholder: \"Select a category...\", value: Category, items: categories, tag: \"input\", tagType: \"text\", setState: setCategory, disabled: false},\r\n    {name: \"Type\", placeholder: \"Select a type...\", value: Type, items: types, tag: \"input\", tagType: \"text\", setState: setType, disabled: false},\r\n    {name: \"Notes\", placeholder: \"Notes\", value: Notes, tag: \"textarea\", tagType: null, setState: setNotes, disabled: false},\r\n    {name: \"Tags\", placeholder: \"Tags\", value: Tags, tag: \"input\", tagType: \"text\", setState: setTags, disabled: false},\r\n  ];\r\n\r\n  //When the transaction changes,\r\n  // or the modal is opened or closed,\r\n  // reset the state\r\n  useEffect(()=>{\r\n    if(!transaction) return;\r\n\r\n    const transactionDisplay = formatTransactionDisplay(transaction);\r\n    setPostedDate(transactionDisplay.PostedDate);\r\n    setTransactionDate(transactionDisplay.TransactionDate);\r\n    setAccountNumber(transactionDisplay.AccountNumber);\r\n    setAmount(transactionDisplay.Amount);\r\n    setDescription(transactionDisplay.Description);\r\n    setDescriptionDisplay(transactionDisplay.DescriptionDisplay);\r\n    setCategory(transactionDisplay.Category);\r\n    setNotes(transactionDisplay.Notes);\r\n    setType(transactionDisplay.Type);\r\n    setTags(transactionDisplay.Tags);\r\n    console.log(\"Updating TransactionDetailModal state based on updated prop \\\"transaction\\\".\", transaction, PostedDate, TransactionDate, AccountNumber, Amount, Description, Category, Notes, Type, Tags)\r\n  }, [transaction, isOpen]);\r\n\r\n  const onTransactionDetailInputContainerClick = event=>{\r\n    const transactionDetailInput = event.target;\r\n    if (transactionDetailInput.getAttribute(\"data-stay-disabled\")) return;\r\n    transactionDetailInput.disabled = false;\r\n    transactionDetailInput.focus();\r\n  };\r\n\r\n  const onTransactionDetailInputContainerBlur = event=>{\r\n    const transactionDetailInput = event.target;\r\n    if (transactionDetailInput.getAttribute(\"data-stay-disabled\")) return;\r\n    transactionDetailInput.disabled = true;\r\n  };\r\n\r\n  const onTransactionDetailInputChange = (event, transactionDetail)=>{\r\n    transactionDetail.setState(event.target.value)\r\n  };\r\n\r\n  const onTransactionDetailInputKeyDown = event=>{\r\n    const transactionDetailInput = event.target;\r\n    if (event.keyCode === 9 /* Tab */) {\r\n      event.preventDefault();\r\n      const nextOrPrevious = (event.shiftKey === true ? -1 : 1);\r\n      const inputsArray = [...new Set([...document.querySelector(\".transaction-modal-form\").querySelectorAll(\".transaction-modal-input\"), ...document.querySelector(\".transaction-modal-form\").querySelectorAll(\"[tabIndex]\")])];\r\n      const nextInput = inputsArray[(inputsArray.indexOf(transactionDetailInput)+nextOrPrevious+inputsArray.length)%inputsArray.length];\r\n      if (nextInput) {\r\n        nextInput.disabled = false;\r\n        nextInput.focus();\r\n      }\r\n      return;\r\n    }\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n\r\n      if (transactionDetailInput.classList.contains(\"transaction-modal-input-tags\")) {\r\n        setTags([...Tags, transactionDetailInput.value]);\r\n\r\n        //Reset the input\r\n        transactionDetailInput.value = '';\r\n\r\n        return;\r\n      }\r\n\r\n      transactionDetailInput.disabled = true;\r\n      return;\r\n    }\r\n  };\r\n\r\n  const transactionModalFormOnSubmit = event=>{\r\n    const transactionModalForm = event.target;\r\n    const formattedTransaction = formatTransactionDisplay(transaction);\r\n\r\n    //Prevent the form from submitting\r\n    event.preventDefault();\r\n\r\n    //Aggregate the form data into an object,\r\n    // and add that the transaction has been\r\n    // updated by the user\r\n    const data = [...transactionModalForm.querySelectorAll(\"[name]\")].reduce((accumulator,{name, value})=>{\r\n      //If the value has not changed, return\r\n      if (value === formattedTransaction[name]) return accumulator;\r\n\r\n      //Vaildate the value\r\n      value = (name === \"Tags\" ? (value ? value.split(/\\s*,\\s*/) : []) : value); //Tags validation\r\n      value = (value instanceof Array && value.length === 0 ? [] : nullCoalesce(value)) //Array validation\r\n\r\n      return {\r\n        ...accumulator,\r\n        [name]: value,\r\n      };\r\n    }, {\r\n      IsUpdatedByUser: true,\r\n      DateModified: new Date(),\r\n    });\r\n    console.log(\"Data submitted from TransactionDetailModal\", data);\r\n\r\n    //Update the transaction with the new form data\r\n    const updatedTransaction = {\r\n      ...transaction, //previous transaction data\r\n      ...data, //new transaction data from the form\r\n      Description: transaction.Description, //make sure to never change the actual Description\r\n    };\r\n\r\n    console.log(\"Updated transaction submitted from TransactionDetailModal\", updatedTransaction);\r\n\r\n    onSubmit(updatedTransaction);\r\n  };\r\n\r\n  const onTagBadgeClick = tag=>{\r\n    setTags(Tags.filter(t=>t!==tag));\r\n  };\r\n\r\n  return (\r\n    <Modal id=\"transaction-modal\" show={isOpen} onHide={onClose}>\r\n      <Modal.Header>\r\n        <Modal.Title className=\"modal-title\">Transaction Detail</Modal.Title>\r\n        <button className=\"btn-close\" type=\"button\" onClick={onClose}></button>\r\n      </Modal.Header>\r\n      <form className=\"transaction-modal-form\" onSubmit={transactionModalFormOnSubmit}>\r\n        <Modal.Body>\r\n          {transactionDetails.map((transactionDetail, i)=>(\r\n            <TransactionDetailModalInput key={transactionDetail.name} transactionDetail={transactionDetail} tabIndex={i+1} onClick={onTransactionDetailInputContainerClick} onBlur={onTransactionDetailInputContainerBlur} onChange={(event)=>onTransactionDetailInputChange(event, transactionDetail)} onKeyDown={onTransactionDetailInputKeyDown} onTagBadgeClick={onTagBadgeClick} />\r\n          ))}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-secondary\" type=\"button\" tabIndex={transactionDetails.length+1} onClick={onClose}>Cancel</button>\r\n          <button className=\"btn btn-primary\" type=\"submit\" tabIndex={transactionDetails.length+2}>Save</button>\r\n        </Modal.Footer>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TransactionDetailModal;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionDetailModal = ({ transaction, isOpen, onClose, onSubmit:onSubmitProp })=>{\r\n  const onSubmit = event=>{\r\n    event.preventDefault();\r\n\r\n    onSubmitProp(transaction);\r\n  };\r\n\r\n  return (\r\n    <Modal id=\"transaction-modal\" show={isOpen} onHide={onClose}>\r\n      <Modal.Header>\r\n        <Modal.Title className=\"modal-title\">Delete Transaction</Modal.Title>\r\n        <button className=\"btn-close\" type=\"button\" onClick={onClose}></button>\r\n      </Modal.Header>\r\n      <form className=\"transaction-modal-form\" onSubmit={onSubmit}>\r\n        <Modal.Body>\r\n          <p class=\"text-center\">Are you sure?</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-secondary\" type=\"button\" tabIndex=\"1\" onClick={onClose}>Cancel</button>\r\n          <button className=\"btn btn-primary\" type=\"submit\" tabIndex=\"2\">Delete</button>\r\n        </Modal.Footer>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TransactionDetailModal;\r\n","import {useState} from 'react';\r\n\r\nimport {convertNumberToCurrency} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionsImportDuplicatesModalDuplicateCheckbox = ({ id, duplicateData, onChange:onChangeProp })=>{\r\n  const onChange = event=>{\r\n    const isChecked = event.target.checked;\r\n\r\n    //Update the duplicate's confirmation state in the parent\r\n    const updatedDuplicateData = {\r\n      ...duplicateData,\r\n      confirmed: !duplicateData.confirmed,\r\n    };\r\n\r\n    onChangeProp(duplicateData, updatedDuplicateData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-check\">\r\n      <input className=\"form-check-input\" type=\"checkbox\" id={id} checked={duplicateData.confirmed} onChange={onChange}/>\r\n      <label className=\"form-check-label\" htmlFor={id}>\r\n        {`${(duplicateData.duplicate.TransactionDate).toLocaleDateString()} ${convertNumberToCurrency(duplicateData.duplicate.Amount)} ${duplicateData.duplicate.Description}`}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionsImportDuplicatesModalDuplicateCheckbox;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport TransactionsImportDuplicatesModalDuplicateCheckbox from './../TransactionsImportDuplicatesModalDuplicateCheckbox';\r\nimport {areObjectsEqual, isTransactionDuplicate} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionsImportDuplicatesModal = ({ newTransactions, duplicates, isOpen, onClose, onSubmit:onSubmitProp })=>{\r\n  const [duplicatesData, setDuplicatesData] = useState(duplicates.map(duplicate=>({duplicate, confirmed: true})));\r\n\r\n  useEffect(()=>{\r\n    if(!duplicatesData.length) return;\r\n\r\n    console.log(\"Duplicates data: \", duplicates);\r\n  }, [duplicatesData]);\r\n\r\n  const onSubmit = event=>{\r\n    //Prevent the form from submitting\r\n    event.preventDefault();\r\n\r\n    //Get the checked duplicates\r\n    const confirmedDuplicates = duplicatesData.filter(duplicateData=>duplicateData.confirmed).map(duplicateData=>duplicateData.duplicate);\r\n\r\n    console.log(\"Duplicates confirmed from TransactionsImportDuplicatesModal\", confirmedDuplicates);\r\n\r\n    //Remove the true duplicates\r\n    const filteredNewTransactions = newTransactions.filter(newTransaction=>!isTransactionDuplicate(newTransaction, confirmedDuplicates));\r\n\r\n    onSubmitProp(filteredNewTransactions);\r\n  };\r\n\r\n  const onTransactionsImportDuplicatesModalDuplicateCheckboxChange = (oldDuplicateData, newDuplicateData)=>{\r\n    setDuplicatesData(previousDuplicatesData=>{\r\n      const newDuplicatesData = [...previousDuplicatesData];\r\n      const oldDuplicateDataIndex = previousDuplicatesData.indexOf(oldDuplicateData);\r\n      newDuplicatesData[oldDuplicateDataIndex] = newDuplicateData;\r\n      return newDuplicatesData;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal id=\"transaction-import-duplicate-modal\" show={isOpen} onHide={onClose}>\r\n      <Modal.Header>\r\n        <Modal.Title className=\"modal-title\">Duplicate transactions</Modal.Title>\r\n        <button className=\"btn-close\" type=\"button\" data-bs-dismiss=\"modal\" onClick={onClose}></button>\r\n      </Modal.Header>\r\n      <form className=\"transaction-import-duplicate-form\" onSubmit={onSubmit}>\r\n        <Modal.Body>\r\n          <p>{duplicates.length} possible duplicate transactions were found. Please confirm which are duplicates.</p>\r\n          <div className=\"overflow-auto\">\r\n            {\r\n              duplicatesData.map((duplicateData, i)=>(\r\n                <TransactionsImportDuplicatesModalDuplicateCheckbox key={i} id={i} duplicateData={duplicateData} onChange={onTransactionsImportDuplicatesModalDuplicateCheckboxChange} />\r\n              ))\r\n            }\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-secondary\" type=\"button\" tabIndex=\"1\" onClick={onClose}>Cancel import</button>\r\n          <button className=\"btn btn-primary\" type=\"submit\" tabIndex=\"2\">Confirm</button>\r\n        </Modal.Footer>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TransactionsImportDuplicatesModal;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport {convertNumberToCurrency} from './../../utilities';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionsImportConfirmedModal = ({ transactions, duplicates, isOpen, onClose, onSubmit:onSubmitProp })=>{\r\n  const onSubmit = event=>{\r\n    event.preventDefault();\r\n\r\n    onSubmitProp(transactions);\r\n  };\r\n\r\n  const longestTransactionDate = Math.max(...transactions.map(({TransactionDate})=>TransactionDate.toLocaleDateString().length));\r\n  const longestAmount = Math.max(...transactions.map(({Amount})=>`${Amount >= 0 ? \" \" : \"\"}${convertNumberToCurrency(Amount)}`.length));\r\n  const longestDescription = Math.max(...transactions.map(({Description})=>Description.length));\r\n\r\n  return (\r\n    <Modal className=\"transaction-import-confirmed-modal\" show={isOpen} onHide={onClose}>\r\n      <Modal.Header>\r\n        <Modal.Title className=\"modal-title\">Transactions imported!</Modal.Title>\r\n        <button className=\"btn-close\" type=\"button\" data-bs-dismiss=\"modal\" onClick={onClose}></button>\r\n      </Modal.Header>\r\n      <form className=\"transaction-import-confirmed-modal-form\" onSubmit={onSubmit}>\r\n        <Modal.Body>\r\n          <p>Successfully imported {transactions.length} transactions.</p>\r\n          <div className=\"overflow-auto\">\r\n            {\r\n              transactions.map((transaction, i)=>{\r\n                const transactionDateString = transaction.TransactionDate.toLocaleDateString();\r\n                const amountString = `${transaction.Amount >= 0 ? \" \" : \"\"}${convertNumberToCurrency(transaction.Amount)}`;\r\n                const descriptionString = transaction.Description;\r\n\r\n                const transactionDateSpaces = Array(longestTransactionDate-transactionDateString.length).fill(\" \").join(\"\");\r\n                const amountSpaces = Array(longestAmount-amountString.length).fill(\" \").join(\"\");\r\n                const descriptionSpaces = Array(longestDescription-descriptionString.length).fill(\" \").join(\"\");\r\n\r\n                return (\r\n                  <div key={i} className=\"confirmed-transaction\">\r\n                    {`${transactionDateString}${transactionDateSpaces}  ${amountString}${amountSpaces}  ${descriptionString}${descriptionSpaces}`}\r\n                  </div>\r\n                );\r\n            })\r\n            }\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-secondary\" type=\"button\" tabIndex=\"1\" onClick={onClose}>Cancel import</button>\r\n          <button className=\"btn btn-primary\" type=\"submit\" tabIndex=\"2\">Finish import</button>\r\n        </Modal.Footer>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TransactionsImportConfirmedModal;\r\n","import './index.scss';\r\n\r\nconst TransactionsImportFormToggle = ({ onClick })=>{\r\n  return (\r\n    <div className=\"transaction-import-form-toggle bg-primary d-flex justify-content-center align-items-center\" onClick={onClick}>\r\n      <span className=\"transaction-import-form-toggle-icon\">+</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionsImportFormToggle;\r\n","import {useState, useEffect} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nimport TransactionsImportForm from './../TransactionsImportForm';\r\nimport TransactionsData from './../TransactionsData';\r\nimport TransactionDetailModal from './../TransactionDetailModal';\r\nimport TransactionDeleteModal from './../TransactionDeleteModal';\r\nimport TransactionsImportDuplicatesModal from './../TransactionsImportDuplicatesModal';\r\nimport TransactionsImportConfirmedModal from './../TransactionsImportConfirmedModal';\r\nimport TransactionsImportFormToggle from './../TransactionsImportFormToggle';\r\n\r\nimport {useConsoleLog, useBudgetCycleTransactions} from './../../hooks';\r\n\r\nimport './index.scss';\r\n\r\nconst TransactionsView = ({ transactions, budgetCycle, transactionsImportDuplicatesModalNewTransactions, transactionsImportDuplicatesModalDuplicates, isTransactionsImportDuplicatesModalOpen, onTransactionsImportDuplicatesModalClose, onTransactionsImportDuplicatesModalSubmit, onTransactionsImportFormSubmit:onTransactionsImportFormSubmitProp, onTransactionsImportFormFileInputChange:onTransactionsImportFormFileInputChangeProp, onTransactionDetailModalSubmit:onTransactionDetailModalSubmitProp, onTransactionDeleteModalSubmit:onTransactionDeleteModalSubmitProp, transactionsImportConfirmedModalTransactions, isTransactionsImportConfirmedModalOpen, closeTransactionsImportConfirmedModal, onTransactionsImportConfirmedModalSubmit, transactionCategories, transactionTypes, setFooterNavbar })=>{\r\n  //Send the route to the footer navbar\r\n  const route = useLocation().pathname;\r\n  useEffect(()=>{\r\n    setFooterNavbar(route);\r\n  }, []);\r\n\r\n  const [isTransactionImportFormOpen, setIsTransactionImportFormOpen] = useState(false);\r\n\r\n  const filterTransactions = transactions=>{\r\n    // return transactions.filter(transaction=>{\r\n    //   !(\r\n    //     transaction.Description.match(/CREDIT CARD PAYMENT (?:MOBILE APP PAYMENT|ONLINE BANKING TRANSFER) TO \\d{4} \\d{6}\\*{6}(\\d{4})/i) ||\r\n    //     transaction.Description.match(/PAYMENT - THANK YOU ATLANTA GA/i)\r\n    //   )\r\n    // });\r\n    return transactions;\r\n  };\r\n\r\n  const [filteredTransactions, setFilteredTransactions] = useState(filterTransactions(transactions));\r\n  const [transactionDetailModalTransaction, setTransactionDetailModalTransaction] = useState(null);\r\n  const [isTransactionDetailModalOpen, setIsTransactionDetailModalOpen] = useState(false);\r\n  const [transactionDeleteModalTransaction, setTransactionDeleteModalTransaction] = useState(null);\r\n  const [isTransactionDeleteModalOpen, setIsTransactionDeleteModalOpen] = useState(false);\r\n\r\n  const budgetCycleTransactions = useBudgetCycleTransactions(filteredTransactions, budgetCycle);\r\n\r\n  useConsoleLog(budgetCycleTransactions.all, \"budgetCycleTransactions:\");\r\n\r\n  useEffect(()=>{\r\n    if (!transactions.length) return;\r\n    setFilteredTransactions(filterTransactions(transactions));\r\n  }, [transactions]);\r\n\r\n  const onTransactionImportFormToggleClick = event=>{\r\n    setIsTransactionImportFormOpen(wasOpen=>!wasOpen);\r\n  };\r\n\r\n  const onTransactionsImportFormSubmit = scrapedTransactionsData=>{\r\n    //Re-close the form\r\n    setIsTransactionImportFormOpen(false);\r\n\r\n    onTransactionsImportFormSubmitProp(scrapedTransactionsData);\r\n  };\r\n\r\n  const onTransactionsImportFormFileInputChange = transactionsDataArray=>{\r\n    //Re-close the form\r\n    setIsTransactionImportFormOpen(false);\r\n\r\n    onTransactionsImportFormFileInputChangeProp(transactionsDataArray);\r\n  };\r\n\r\n  const openTransactionDetailModal = ()=>{\r\n    setIsTransactionDetailModalOpen(true);\r\n  };\r\n\r\n  const closeTransactionDetailModal = ()=>{\r\n    setIsTransactionDetailModalOpen(false);\r\n  };\r\n\r\n  const openTransactionDeleteModal = ()=>{\r\n    setIsTransactionDeleteModalOpen(true);\r\n  };\r\n\r\n  const closeTransactionDeleteModal = ()=>{\r\n    setIsTransactionDeleteModalOpen(false);\r\n  };\r\n\r\n  const onTransactionEditButtonClick = transaction=>{\r\n    setTransactionDetailModalTransaction(transaction);\r\n    openTransactionDetailModal();\r\n  };\r\n\r\n  const onTransactionDeleteButtonClick = transaction=>{\r\n    setTransactionDeleteModalTransaction(transaction);\r\n    openTransactionDeleteModal();\r\n  };\r\n\r\n  const onTransactionDetailModalSubmit = (updatedTransaction)=>{\r\n    onTransactionDetailModalSubmitProp(transactionDetailModalTransaction, updatedTransaction);\r\n    closeTransactionDetailModal();\r\n  };\r\n\r\n  const onTransactionDeleteModalSubmit = (deletedTransaction)=>{\r\n    onTransactionDeleteModalSubmitProp(transactionDeleteModalTransaction, deletedTransaction);\r\n    closeTransactionDeleteModal();\r\n  };\r\n\r\n  return (\r\n    <div className=\"view transactions-view\">\r\n      <h1 className=\"page-title display-3\">Transactions</h1>\r\n      <TransactionsImportForm isOpen={isTransactionImportFormOpen} onSubmit={onTransactionsImportFormSubmit} onFileInputChange={onTransactionsImportFormFileInputChange} />\r\n      <TransactionsData budgetCycleTransactions={budgetCycleTransactions} onTransactionEditButtonClick={onTransactionEditButtonClick} onTransactionDeleteButtonClick={onTransactionDeleteButtonClick} />\r\n      <TransactionsImportFormToggle onClick={onTransactionImportFormToggleClick} />\r\n      <TransactionDetailModal transaction={transactionDetailModalTransaction} categories={transactionCategories} types={transactionTypes} isOpen={isTransactionDetailModalOpen} onClose={closeTransactionDetailModal} onSubmit={onTransactionDetailModalSubmit} />\r\n      <TransactionDeleteModal transaction={transactionDeleteModalTransaction} isOpen={isTransactionDeleteModalOpen} onClose={closeTransactionDeleteModal} onSubmit={onTransactionDeleteModalSubmit} />\r\n      <TransactionsImportDuplicatesModal newTransactions={transactionsImportDuplicatesModalNewTransactions} duplicates={transactionsImportDuplicatesModalDuplicates} isOpen={isTransactionsImportDuplicatesModalOpen} onClose={onTransactionsImportDuplicatesModalClose} onSubmit={onTransactionsImportDuplicatesModalSubmit} />\r\n      <TransactionsImportConfirmedModal transactions={transactionsImportConfirmedModalTransactions} isOpen={isTransactionsImportConfirmedModalOpen} onClose={closeTransactionsImportConfirmedModal} onSubmit={onTransactionsImportConfirmedModalSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionsView;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport './index.scss';\r\n\r\nconst SettingsInput = ({ setting })=>{\r\n  const [name, setName] = useState(setting.name || \"\");\r\n  const [value, setValue] = useState(setting.value || \"\");\r\n\r\n  useEffect(()=>{\r\n    if (!setting) return;\r\n\r\n    setName(setting.name || \"\");\r\n    setValue(setting.value || \"\");\r\n  }, [setting]);\r\n\r\n  const onChange = event=>{\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"setting-input mb-3\">\r\n      <label htmlFor={name} className=\"form-label\">{name}</label>\r\n      <input id={name} className=\"form-control\" name={name} type=\"text\" value={value} onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsInput;\r\n","import SettingsInput from './../SettingsInput';\r\n\r\nimport './index.scss';\r\n\r\nconst SettingsForm = ({ settings, onSubmit:onSubmitProp })=>{\r\n  const onSubmit = event=>{\r\n    event.preventDefault();\r\n\r\n    const submittedSettings = [...event.target.querySelectorAll(\".setting-input [name]\")].reduce((data, {name, value})=>({...data, [name]: value}), {});\r\n\r\n    onSubmitProp(submittedSettings);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      {Object.entries(settings).map(([name, props])=>(<SettingsInput key={name} setting={{name, ...props}} />))}\r\n      <div className=\"d-flex justify-content-center mt-4\">\r\n        <button className=\"btn btn-primary\" type=\"submit\">Save</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SettingsForm;\r\n","import {useEffect} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nimport SettingsForm from './../SettingsForm';\r\n\r\nimport './index.scss';\r\n\r\nconst SettingsView = ({ setFooterNavbar, settings, onSubmit })=>{\r\n  //Send the route to the footer navbar\r\n  const route = useLocation().pathname;\r\n  useEffect(()=>{\r\n    setFooterNavbar(route);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"view settings-view\">\r\n      <h1 className=\"page-title display-3\">Settings</h1>\r\n      <SettingsForm settings={settings} onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsView;\r\n","import {useEffect, useRef} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './index.scss';\r\n\r\nconst FooterNavbar = ({ active })=>{\r\n  const footerNavbar = useRef(null);\r\n\r\n  const setActiveItem = (active, footerNavbar)=>{\r\n    if (!active) return;\r\n    const activePath = (process.env.NODE_ENV === \"production\" ? process.env.PUBLIC_URL : '')+(active === \"/\" ? \"/dashboard\" : active);\r\n    const navItems = [...footerNavbar.current.querySelectorAll(\".footer-nav-item\")];\r\n    const activeItem = navItems.find(navItem=>navItem.getAttribute(\"href\") === activePath);\r\n    navItems.forEach(navItem=>navItem.classList.remove(\"active\"));\r\n    if (activeItem) activeItem.classList.add(\"active\");\r\n  };\r\n\r\n  useEffect(()=>{\r\n    setActiveItem(active, footerNavbar)\r\n  }, [active]);\r\n\r\n  return (\r\n    <footer className=\"footer fixed-bottom\" ref={footerNavbar}>\r\n      <nav className=\"footer-nav nav nav-pills nav-justified\">\r\n        <Link className=\"footer-nav-item nav-link d-flex flex-column\" to=\"/dashboard\"><i className=\"footer-nav-item-icon fas fa-home pb-1\"></i>Dashboard</Link>\r\n        <Link className=\"footer-nav-item nav-link d-flex flex-column\" to=\"/budgets\"><i className=\"footer-nav-item-icon far fa-clipboard pb-1\"></i>Budgets</Link>\r\n        <Link className=\"footer-nav-item nav-link d-flex flex-column\" to=\"/transactions\"><i className=\"footer-nav-item-icon fas fa-list pb-1\"></i>Transactions</Link>\r\n        <Link className=\"footer-nav-item nav-link d-flex flex-column\" to=\"/settings\"><i className=\"footer-nav-item-icon fas fa-cogs pb-1\"></i>Settings</Link>\r\n      </nav>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default FooterNavbar;\r\n","import {useState, useEffect} from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport SettingsForm from './../SettingsForm';\r\n\r\nimport './index.scss';\r\n\r\nconst SignInSettingsModal = ({ settings, isOpen, onClose, onSubmit:onSubmitProp })=>{\r\n  const onSubmit = submittedSettings=>{\r\n    onSubmitProp(submittedSettings);\r\n\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal id=\"signin-settings-modal\" show={isOpen} onHide={onClose}>\r\n      <Modal.Header>\r\n        <Modal.Title className=\"modal-title\">Sign In Settings</Modal.Title>\r\n        <button className=\"btn-close\" type=\"button\" data-bs-dismiss=\"modal\" onClick={onClose}></button>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"alert alert-warning d-flex align-items-center\" role=\"alert\">\r\n          <i className=\"fas fa-exclamation-triangle me-2\"></i>\r\n          Please assure the following settings are valid.\r\n        </div>\r\n        <SettingsForm settings={settings} onSubmit={onSubmit} />\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SignInSettingsModal;\r\n","import {signOut} from './../../googleApi';\r\n\r\nimport './index.scss';\r\n\r\nconst GoogleApiUserButton = ({ signedInUser })=>{\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <button className=\"user-button btn bg-light\" type=\"button\" id=\"user-button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n        <img className=\"user-button-image\" src={signedInUser.imageUrl} />\r\n        <span className=\"user-button-name\">{signedInUser.firstName}</span>\r\n      </button>\r\n      <ul className=\"dropdown-menu\" aria-labelledby=\"user-button\">\r\n        <li><a className=\"dropdown-item\" onClick={signOut}>Sign out</a></li>\r\n      </ul>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default GoogleApiUserButton;\r\n","import Logo from './../Logo';\r\nimport GoogleApiUserButton from './../GoogleApiUserButton';\r\n\r\nimport './index.scss';\r\n\r\nconst Header = ({ signedInUser })=>{\r\n  return (\r\n    <header className=\"dashboard-header navbar-text fixed-top bg-primary\">\r\n      <div className=\"container d-flex justify-content-between\">\r\n        <Logo light />\r\n        <div className=\"d-flex justify-content-center align-items-center\">\r\n          <GoogleApiUserButton signedInUser={signedInUser}/>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","//Import package dependencies\nimport {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\n//Import source code\nimport {getBudgetCycleFromDate, typeCheckTransactions, isTransactionDuplicate, categorizeTransactionByDescription, importTransactions, typeCheckBudgetsData, typeCheckAccountsData, typeCheckAccountData, throwException} from './../../utilities';\nimport {getSpreadsheetId, setSpreadsheetId, getClientId, setClientId, initAuthorization} from './../../googleApi';\nimport {getTransactions, updateTransactions, getBudgetsData, getAccountsData, getAccountData} from './../../api';\nimport {useScript, useConsoleLog} from './../../hooks';\n\n//Import custom components\nimport SignInView from './../SignInView';\nimport DashboardView from './../DashboardView';\nimport BudgetsView from './../BudgetsView';\nimport TransactionsView from './../TransactionsView';\nimport SettingsView from './../SettingsView';\nimport FooterNavbar from './../FooterNavbar';\nimport SignInSettingsModal from './../SignInSettingsModal';\nimport Header from './../Header';\n\n//Import styles\nimport './main.css';\nimport './index.scss';\n\n\nconst App = () => {\n  //Set application state\n  const [transactions, setTransactions] = useState([]);\n  const [budgetsData, setBudgetsData] = useState([]);\n  const [accountsData, setAccountsData] = useState([]);\n  const [accountData, setAccountData] = useState({});\n\n  const [footerNavbar, setFooterNavbar] = useState(null);\n  const [budgetCycle, setBudgetCycle] = useState(getBudgetCycleFromDate(new Date()));\n  const [transactionsImportDuplicatesModalNewTransactions, setTransactionsImportDuplicatesModalNewTransactions] = useState([]);\n  const [transactionsImportDuplicatesModalDuplicates, setTransactionsImportDuplicatesModalDuplicates] = useState([]);\n  const [isTransactionsImportDuplicatesModalOpen, setIsTransactionsImportDuplicatesModalOpen] = useState(false);\n  const [transactionsImportConfirmedModalTransactions, setTransactionsImportConfirmedModalTransactions] = useState([]);\n  const [isTransactionsImportConfirmedModalOpen, setIsTransactionsImportConfirmedModalOpen] = useState(false);\n  const [signedInUser, setSignedInUser] = useState(undefined);\n  const [isSignInSettingsModalOpen, setIsSignInSettingsModalOpen] = useState(false);\n\n  //Declare settings\n  const settings = {\n    \"Client Id\": {\n      value: getClientId(),\n      update: clientId=>setClientId(clientId),\n    },\n    \"Spreadsheet id\": {\n      value: getSpreadsheetId(),\n      update: spreadsheetId=>setSpreadsheetId(spreadsheetId),\n    }\n  };\n\n  const transactionCategories = [\n    null,\n    \"Savings\",\n    \"Gas\",\n    \"Church\",\n    \"Groceries/Necessities\",\n    \"LoveInAction\",\n    \"Family Outings\",\n    \"Personal Spending\",\n    \"Miscellaneous\",\n    \"Sharonview mortgage & escrow\",\n    \"HOA dues\",\n    \"Duke Energy\",\n    \"SJWD Water District\",\n    \"Piedmont Natural Gas\",\n    \"Kirby Sanitation\",\n    \"Laurens Electric ProTec Security\",\n    \"SimpliSafe (for mom)\",\n    \"AT&T Internet\",\n    \"State Farm auto insurance\",\n    \"AT&T phone bill\",\n    \"Spotify Premium subscription\",\n    \"Netflix Premium subscription\",\n    \"Discovery Plus subscription\",\n    \"YMCA membership\",\n  ];\n\n  const transactionTypes = [\n    null,\n    //Credit card\n    \"Charges\",     //-\n    \"Payments\",    //+\n\n    //Checking/Savings\n    \"Debit\",       //-\n    \"Credit\",      //+\n    \"Withdrawal\",  //-\n    \"Deposit\",     //+\n    \"Transfer\",    //+/-\n    \"Payment\",     //-\n  ];\n\n  //Log data\n  useConsoleLog(transactions, \"Transactions Data:\");\n  useConsoleLog(budgetsData, \"Budget Data:\");\n  useConsoleLog(accountsData, \"Accounts Data:\");\n  useConsoleLog(accountData, \"Account Data:\");\n  useConsoleLog(signedInUser, \"signedInUser:\");\n  useConsoleLog(budgetCycle, \"budgetCycle:\");\n\n  const gapiLoaded = useScript(\"https://apis.google.com/js/api.js\");\n\n  //Create helper functions\n  const saveSettings = savedSettings=>{\n    //Call the update function for each setting\n    Object.entries(savedSettings).forEach(([settingName, settingValue])=>\n      settings[settingName].update(settingValue)\n    );\n  };\n\n  const connectToGoogleAPI = async ()=>{\n    if(!gapiLoaded) return;\n\n    //Try to initialize the Google API\n    try {\n      initAuthorization(onSignInChange, onSignInChange);\n    }\n    catch (err) {\n      //If credentials weren't found, prompt the user for the credentials\n      if (err.name === \"CredentialsNotFoundError\") {\n        return openSignInSettingsModal();\n        // throw new Error(\"Failed to get authorization credentials.\");\n      }\n      console.log(\"test\")\n      return throwException(err);\n    }\n  };\n\n  const onBudgetCycleChange = budgetCycle=>{\n    setBudgetCycle(budgetCycle);\n  };\n\n  //Create state handlers\n  const checkTransactionsForDuplicates = (previousTransactions, newTransactions)=>{\n    if(!previousTransactions.length) return newTransactions;\n\n    //Look for possible duplicate transactions,\n    // and confirm if they are duplicates (shouldn't be added),\n    // or not duplicates (should be added)\n    const duplicates = [];\n    newTransactions.forEach(newTransaction=>{\n      const duplicate = isTransactionDuplicate(newTransaction, previousTransactions);\n      if (duplicate) {\n        duplicates.push(duplicate);\n      }\n    });\n\n    //If there were no duplicates,\n    // open the confirmed imported transactions modal\n    if (!duplicates.length) {\n      setTransactionsImportConfirmedModalTransactions(newTransactions);\n      openTransactionsImportConfirmedModal();\n      return previousTransactions;\n    }\n\n    //Otherwise, ask user to confirm true duplicates,\n    // and just return the previous data for now\n    console.log(\"Duplicates: \", duplicates);\n    setTransactionsImportDuplicatesModalNewTransactions(newTransactions);\n    setTransactionsImportDuplicatesModalDuplicates(duplicates);\n    openTransactionsImportDuplicatesModal();\n\n    return previousTransactions;\n  };\n\n  const setTransactionsHandler = (previousTransactions, newTransactions, callback, oldTransaction)=>{\n    //If there are no new transactions, short-circuit\n    if ((Array.isArray(newTransactions) ? !newTransactions.length : newTransactions !== false && !newTransactions)) return previousTransactions;\n\n    //If there are new transactions, massage them\n    let transactions;\n    if (newTransactions) {\n      //Check that we have an array of transactions\n      let transactionsArray = newTransactions;\n      if (!(newTransactions instanceof Array)) transactionsArray = [newTransactions];\n\n      //Type check transactions data to convert from strings to the correct type\n      const typeCheckedTransactions = typeCheckTransactions(transactionsArray);\n\n      //Assign category & notes from description\n      transactions = typeCheckedTransactions.map(transaction=>categorizeTransactionByDescription(transaction));\n    }\n\n    //Return the data manipulation callback result, sorted\n    if (callback) return callback(previousTransactions, transactions, oldTransaction)\n      .sort((a,b)=>b.TransactionDate-a.TransactionDate);\n\n    //Otherwise, just return the transactions, sorted\n    return transactions.sort((a,b)=>b.TransactionDate-a.TransactionDate);\n  };\n\n  const setTransactionsWrapper = newTransactions=>{\n    //Import new transactions\n    setTransactions(previousTransactions=>{\n      //Run through transaction normalization\n      return setTransactionsHandler(previousTransactions, newTransactions);\n    });\n  };\n\n  const importTransactionsWrapper = newTransactions=>{\n    //Import new transactions\n    setTransactions(previousTransactions=>{\n      const callback = (previousTransactions, newTransactions)=>{\n        //Check for duplicates, and return depending if any were found\n        return checkTransactionsForDuplicates(previousTransactions, newTransactions);\n      };\n\n      //Run through transaction normalization\n      return setTransactionsHandler(previousTransactions, newTransactions, callback);\n    });\n  };\n\n  const insertTransactionsWrapper = newTransactions=>{\n    //Import new transactions\n    setTransactions(previousTransactions=>{\n      const callback = (previousTransactions, newTransactions)=>{\n        //Append the new transactions\n        return [...previousTransactions, ...newTransactions];\n      };\n\n      //Run through transaction normalization\n      return setTransactionsHandler(previousTransactions, newTransactions, callback);\n    });\n  };\n\n  const updateTransactionWrapper = (oldTransaction, newTransaction)=>{\n    //Update a single transaction\n    setTransactions(previousTransactions=>{\n      const callback = (previousTransactions, newTransactions, oldTransaction)=>{\n        //Get the single updated transaction wrapped in an array\n        const newTransaction = newTransactions[0];\n\n        //Update transactions with the new transaction\n        const transactions = [...previousTransactions]; //create deep copy\n        transactions[transactions.indexOf(oldTransaction)] = newTransaction;\n\n        return transactions;\n      };\n\n      //Run through transaction normalization\n      return setTransactionsHandler(previousTransactions, newTransaction, callback, oldTransaction);\n    });\n  };\n\n  const deleteTransactionWrapper = deletedTransaction=>{\n    //Delete a single transaction\n    setTransactions(previousTransactions=>{\n      const callback = (previousTransactions, transaction, deletedTransaction)=>{\n        //Update transactions with the new transaction\n        const transactions = [...previousTransactions]; //create deep copy\n        const index = transactions.indexOf(deletedTransaction);\n        transactions.splice(index, 1);\n\n        return transactions;\n      };\n\n      //Run through transaction normalization\n      return setTransactionsHandler(previousTransactions, false, callback, deletedTransaction);\n    });\n  };\n\n  const setBudgetsDataWrapper = newBudgetsData=>{\n    //Import new data\n    setBudgetsData(previousBudgetsData=>{\n      if (!newBudgetsData) return [];\n\n      const typeCheckedData = typeCheckBudgetsData(newBudgetsData);\n      return typeCheckedData;\n    });\n  };\n\n  const setAccountsDataWrapper = newAccountsData=>{\n    //Import new data\n    setAccountsData(previousAccountsData=>{\n      if (!newAccountsData) return [];\n\n      const typeCheckedData = typeCheckAccountsData(newAccountsData);\n      return typeCheckedData;\n    });\n  };\n\n  const setAccountDataWrapper = newAccountData=>{\n    //Import new data\n    setAccountData(previousAccountData=>{\n      if (!newAccountData) return {};\n\n      const typeCheckedData = typeCheckAccountData(newAccountData);\n      return typeCheckedData;\n    });\n  };\n\n\n  //Create event listeners\n  const onTransactionsImportFormSubmit = scrapedTransactionsData=>{\n    //Import the scraped transactions data\n    const transactions = importTransactions(scrapedTransactionsData, \"scraped\");\n\n    //Set the new transactions data\n    importTransactionsWrapper(transactions);\n  };\n\n  const onTransactionsImportFormFileInputChange = transactionsDataArray=>{\n    //Import the csv transactions data\n    const transactions = importTransactions(transactionsDataArray, \"csv\");\n\n    //Set the new transactions data\n    importTransactionsWrapper(transactions);\n  };\n\n  const onTransactionDetailModalSubmit = (oldTransaction, updatedTransaction)=>{\n    updateTransactionWrapper(oldTransaction, updatedTransaction);\n  };\n\n  const onTransactionDeleteModalSubmit = deletedTransaction=>{\n    deleteTransactionWrapper(deletedTransaction);\n  };\n\n  const openTransactionsImportDuplicatesModal = ()=>{\n    setIsTransactionsImportDuplicatesModalOpen(true);\n  };\n\n  const closeTransactionsImportDuplicatesModal = ()=>{\n    setIsTransactionsImportDuplicatesModalOpen(false);\n  };\n\n  const onTransactionsImportDuplicatesModalSubmit = (filteredNewTransactions)=>{\n    //Close the modal\n    closeTransactionsImportDuplicatesModal();\n\n    //Open the confirmed imported transactions modal\n    setTransactionsImportConfirmedModalTransactions(filteredNewTransactions);\n    openTransactionsImportConfirmedModal();\n  };\n\n  const openTransactionsImportConfirmedModal = ()=>{\n    setIsTransactionsImportConfirmedModalOpen(true);\n  };\n\n  const closeTransactionsImportConfirmedModal = ()=>{\n    setIsTransactionsImportConfirmedModalOpen(false);\n  };\n\n  const onTransactionsImportConfirmedModalSubmit = confirmedTransactions=>{\n    //Update transactions with the new transaction\n    insertTransactionsWrapper(confirmedTransactions);\n\n    //Close the modal\n    closeTransactionsImportConfirmedModal();\n  };\n\n  const onSignInChange = signInInfo=>{\n    setSignedInUser(signInInfo);\n  };\n\n  const onSettingsViewSubmit = submittedSettings=>{\n    saveSettings(submittedSettings);\n  };\n\n  const openSignInSettingsModal = ()=>{\n    setIsSignInSettingsModalOpen(true);\n  };\n\n  const closeSignInSettingsModal = ()=>{\n    setIsSignInSettingsModalOpen(false);\n\n    //Re-attempt to initialize Google API again\n    connectToGoogleAPI();\n  };\n\n  const onSignInSettingsModalSubmit = submittedSettings=>{\n    saveSettings(submittedSettings);\n  };\n\n  //When the Google API JS library loads, initialize the Google API\n  useEffect(()=>\n    connectToGoogleAPI()\n    , [gapiLoaded]);\n\n  //Whenever the user gets logged in,\n  // attempt to query for data\n  useEffect(()=>{\n    //Run async function inside necessary useEffect sync function\n    (async ()=>{\n      if (!signedInUser) return;\n      setTransactionsWrapper(await getTransactions());\n      setBudgetsDataWrapper(await getBudgetsData());\n      setAccountsDataWrapper(await getAccountsData());\n      setAccountDataWrapper(await getAccountData());\n    })();\n  }, [signedInUser]);\n\n  //Whenever the transactions are updated, save them off as well\n  useEffect(()=>{\n    if (!transactions.length) return;\n    updateTransactions(transactions);\n  }, [transactions]);\n\n\n  //If the user has not signed in, send them to the sign in page,\n  // and while the Google API is loading, disable the sign in button\n  if (!signedInUser) return (\n    <div className=\"App\">\n      <Router basename={(process.env.NODE_ENV === \"production\" ? process.env.PUBLIC_URL : null)}>\n        <SignInView isReadyForSignIn={!(signedInUser===undefined)}/>\n        <SignInSettingsModal settings={settings} isOpen={isSignInSettingsModalOpen} onClose={closeSignInSettingsModal} onSubmit={onSignInSettingsModalSubmit} />\n      </Router>\n    </div>\n  );\n\n  return (\n    <div className=\"App\">\n      <Router basename={(process.env.NODE_ENV === \"production\" ? process.env.PUBLIC_URL : null)}>\n        <Header signedInUser={signedInUser} />\n        <Switch>\n          <Route path={[\"/dashboard\", \"/\"]} exact>\n            <DashboardView signedInUser={signedInUser} transactions={transactions} accountsData={accountsData} accountData={accountData} budgetsData={budgetsData} budgetCycle={budgetCycle} onBudgetCycleChange={onBudgetCycleChange} setFooterNavbar={setFooterNavbar} />\n          </Route>\n          <Route path=\"/budgets\" exact>\n            <BudgetsView transactions={transactions} budgetsData={budgetsData} budgetCycle={budgetCycle} setFooterNavbar={setFooterNavbar} />\n          </Route>\n          <Route path=\"/transactions\" exact>\n            <TransactionsView transactions={transactions} budgetCycle={budgetCycle} transactionsImportDuplicatesModalNewTransactions={transactionsImportDuplicatesModalNewTransactions} transactionsImportDuplicatesModalDuplicates={transactionsImportDuplicatesModalDuplicates} isTransactionsImportDuplicatesModalOpen={isTransactionsImportDuplicatesModalOpen} onTransactionsImportDuplicatesModalClose={closeTransactionsImportDuplicatesModal} onTransactionsImportDuplicatesModalSubmit={onTransactionsImportDuplicatesModalSubmit} onTransactionsImportFormSubmit={onTransactionsImportFormSubmit} onTransactionsImportFormFileInputChange={onTransactionsImportFormFileInputChange} onTransactionDetailModalSubmit={onTransactionDetailModalSubmit} onTransactionDeleteModalSubmit={onTransactionDeleteModalSubmit} transactionsImportConfirmedModalTransactions={transactionsImportConfirmedModalTransactions} isTransactionsImportConfirmedModalOpen={isTransactionsImportConfirmedModalOpen} closeTransactionsImportConfirmedModal={closeTransactionsImportConfirmedModal} onTransactionsImportConfirmedModalSubmit={onTransactionsImportConfirmedModalSubmit} setFooterNavbar={setFooterNavbar} transactionCategories={transactionCategories} transactionTypes={transactionTypes}/>\n          </Route>\n          <Route path=\"/settings\" exact>\n            <SettingsView setFooterNavbar={setFooterNavbar} settings={settings} onSubmit={onSettingsViewSubmit}/>\n          </Route>\n        </Switch>\n        <FooterNavbar active={footerNavbar} />\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import {parseGoogleSheetsNumber, parseGoogleSheetsDate} from './../googleApi';\r\n\r\nexport const typeCheckAccountsData = accountsData=>{\r\n  return accountsData.map(accountData=>({\r\n      ...accountData,\r\n      Balance: parseGoogleSheetsNumber(accountData.Balance),\r\n    })\r\n  );\r\n};\r\n","import {parseGoogleSheetsNumber, parseGoogleSheetsDate} from './../googleApi';\r\n\r\nexport const typeCheckAccountData = accountData=>{\r\n  return accountData.map(data=>({\r\n    ...data,\r\n    CreditScore: parseGoogleSheetsNumber(data.CreditScore),\r\n    LastUpdated: parseGoogleSheetsDate(data.LastUpdated),\r\n  }));\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}